{"version":3,"sources":["../src/PWA.js"],"names":["styles","theme","body","a","color","palette","primary","main","textDecoration","useStyles","name","PWA","children","errorReporter","thumbnail","navigator","onLine","offline","setOffline","context","hydrating","handleOnline","handleOffline","window","addEventListener","removeEventListener","propTypes","PropTypes","func"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AAC9B,eAAW;AACTC,MAAAA,IAAI,EAAE;AACJ,uCAA+B;AAD3B,OADG;AAITC,MAAAA,CAAC,EAAE;AACDC,QAAAA,KAAK,EAAEH,KAAK,CAACI,OAAN,CAAcC,OAAd,CAAsBC,IAD5B;AAEDC,QAAAA,cAAc,EAAE;AAFf;AAJM;AADmB,GAAL;AAAA,CAApB;;;AAYP,IAAMC,SAAS,GAAG,wBAAWT,MAAX,EAAmB;AAAEU,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAlB;;AAEe,SAASC,GAAT,OAA0C;AAAA,MAA3BC,QAA2B,QAA3BA,QAA2B;AAAA,MAAjBC,aAAiB,QAAjBA,aAAiB;AACvDJ,EAAAA,SAAS;AACT,MAAMK,SAAS,GAAG,mBAAO,IAAP,CAAlB;;AAFuD,kBAGzB,qBAAS,OAAOC,SAAP,KAAqB,WAArB,IAAoC,CAACA,SAAS,CAACC,MAAxD,CAHyB;AAAA;AAAA,MAGhDC,OAHgD;AAAA,MAGvCC,UAHuC;;AAKvD,MAAMC,OAAO,GAAG,oBACd;AAAA,WAAO;AACLL,MAAAA,SAAS,EAATA,SADK;AAELG,MAAAA,OAAO,EAAPA;AAFK,KAAP;AAAA,GADc,EAKd,CAACA,OAAD,CALc,CAAhB,CALuD,CAavD;;AACA;AAEA,wBAAU,YAAM;AACdE,IAAAA,OAAO,CAACC,SAAR,GAAoB,KAApB;;AAEA,QAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,aAAMH,UAAU,CAAC,KAAD,CAAhB;AAAA,KAArB;;AACA,QAAMI,aAAa,GAAG,SAAhBA,aAAgB;AAAA,aAAMJ,UAAU,CAAC,IAAD,CAAhB;AAAA,KAAtB;;AAEAK,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC;AACAE,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCF,aAAnC;AAEA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCJ,YAArC;AACAE,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCH,aAAtC;AACD,KAHD;AAID,GAbD,EAaG,EAbH;AAeA,sBACE,gCAAC,sBAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEH;AAA5B,kBACE,gCAAC,+BAAD,qBACE,gCAAC,yBAAD;AAAe,IAAA,OAAO,EAAEN;AAAxB,KAAwCD,QAAxC,CADF,CADF,CADF;AAOD;;AAEDD,GAAG,CAACe,SAAJ,GAAgB;AACd;;;;AAIAb,EAAAA,aAAa,EAAEc,sBAAUC;AALX,CAAhB","sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport PWAContext from './PWAContext'\nimport PropTypes from 'prop-types'\nimport ErrorBoundary from './ErrorBoundary'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Router from 'next/router'\nimport LinkContextProvider from './link/LinkContextProvider'\nimport useSimpleNavigation from './router/useSimpleNavigation'\nimport './hooks/useTraceUpdate'\nimport './profile'\n\nexport const styles = theme => ({\n  '@global': {\n    body: {\n      '-webkit-tap-highlight-color': 'transparent',\n    },\n    a: {\n      color: theme.palette.primary.main,\n      textDecoration: 'underline',\n    },\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFPWA' })\n\nexport default function PWA({ children, errorReporter }) {\n  useStyles()\n  const thumbnail = useRef(null)\n  const [offline, setOffline] = useState(typeof navigator !== 'undefined' && !navigator.onLine)\n\n  const context = useMemo(\n    () => ({\n      thumbnail,\n      offline,\n    }),\n    [offline],\n  )\n\n  // enable client-side navigation when the user clicks a simple HTML anchor element\n  useSimpleNavigation()\n\n  useEffect(() => {\n    context.hydrating = false\n\n    const handleOnline = () => setOffline(false)\n    const handleOffline = () => setOffline(true)\n\n    window.addEventListener('online', handleOnline)\n    window.addEventListener('offline', handleOffline)\n\n    return () => {\n      window.removeEventListener('online', handleOnline)\n      window.removeEventListener('offline', handleOffline)\n    }\n  }, [])\n\n  return (\n    <PWAContext.Provider value={context}>\n      <LinkContextProvider>\n        <ErrorBoundary onError={errorReporter}>{children}</ErrorBoundary>\n      </LinkContextProvider>\n    </PWAContext.Provider>\n  )\n}\n\nPWA.propTypes = {\n  /**\n   * A function to be called whenever an error occurs.  Use this to report errors\n   * to a service like Airbrake or Rollbar.\n   */\n  errorReporter: PropTypes.func,\n}\n"],"file":"PWA.js"}