"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.styles = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _styles = require("@material-ui/core/styles");

var _IconButton = _interopRequireDefault(require("@material-ui/core/IconButton"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var styles = function styles(theme) {
  return {
    /**
     * Styles applied to the content wrapper element inside the button
     */
    wrap: _objectSpread({
      display: 'flex',
      flexDirection: 'column',
      justifyContent: 'center',
      alignItems: 'center'
    }, theme.typography.caption)
  };
};

exports.styles = styles;
var useStyles = (0, _styles.makeStyles)(styles, {
  name: 'RSFToolbarButton'
});
/**
 * A toolbar button with optional label.  Use these in your AppBar. All additional
 * props are spread to the underlying material-ui IconButton.
 */

var ToolbarButton = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var icon = _ref.icon,
      label = _ref.label,
      _ref$classes = _ref.classes,
      classes = _ref$classes === void 0 ? {} : _ref$classes,
      children = _ref.children,
      others = (0, _objectWithoutProperties2["default"])(_ref, ["icon", "label", "classes", "children"]);
  var _classes = classes,
      wrap = _classes.wrap,
      buttonClasses = (0, _objectWithoutProperties2["default"])(_classes, ["wrap"]);
  classes = useStyles({
    classes: {
      wrap: wrap
    }
  });
  return /*#__PURE__*/_react["default"].createElement(_IconButton["default"], (0, _extends2["default"])({
    ref: ref,
    classes: buttonClasses
  }, others), /*#__PURE__*/_react["default"].createElement("div", {
    className: classes.wrap
  }, icon, /*#__PURE__*/_react["default"].createElement("div", null, label)), children);
});
ToolbarButton.propTypes = {
  /**
   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.
   */
  classes: _propTypes["default"].object,

  /**
   * The icon to use for the button.
   */
  icon: _propTypes["default"].element,

  /**
   * The label text for the button.
   */
  label: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].element])
};
var _default = ToolbarButton;
exports["default"] = _default;
//# sourceMappingURL=ToolbarButton.js.map