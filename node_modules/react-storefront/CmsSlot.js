"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = CmsSlot;
exports.styles = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _clsx2 = _interopRequireDefault(require("clsx"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

var _lazyLoadImages = _interopRequireDefault(require("./utils/lazyLoadImages"));

var _serviceWorker = require("./serviceWorker");

var styles = function styles(theme) {
  return {
    inline: {
      display: 'inline'
    },
    block: {
      display: 'block'
    },
    root: {
      '& .rsf-presized-img': {
        position: 'relative',
        '& img': {
          position: 'absolute',
          height: '100%',
          width: '100%',
          top: 0,
          left: 0
        }
      },
      '& img[data-src]': {
        visibility: 'hidden'
      }
    }
  };
};

exports.styles = styles;
var useStyles = (0, _styles.makeStyles)(styles, {
  name: 'RSFCmsSlot'
});
/**
 * A container for HTML blob content from a CMS.  Content is dangerously inserted into the DOM.
 * Pass the html as a string as the child of this component. Additional props are spread to the
 * rendered span element.
 */

function CmsSlot(_ref) {
  var _clsx;

  var children = _ref.children,
      className = _ref.className,
      inline = _ref.inline,
      lazyLoadImages = _ref.lazyLoadImages,
      prefetchLinks = _ref.prefetchLinks,
      others = (0, _objectWithoutProperties2["default"])(_ref, ["children", "className", "inline", "lazyLoadImages", "prefetchLinks"]);
  var classes = useStyles(others);
  var el = (0, _react.useRef)();
  (0, _react.useEffect)(function () {
    try {
      if (!el.current) return;

      if (lazyLoadImages) {
        (0, _lazyLoadImages["default"])(el.current);
      }

      if (prefetchLinks) {
        var links = Array.from(el.current.querySelectorAll('a[data-rsf-prefetch="always"]'));

        for (var _i = 0, _links = links; _i < _links.length; _i++) {
          var link = _links[_i];
          (0, _serviceWorker.prefetchJsonFor)(link.getAttribute('href'));
        }
      }
    } catch (e) {
      console.warn('error running side effects on CmsSlot', e);
    }
  }, [children]);
  return children ? /*#__PURE__*/_react["default"].createElement("span", (0, _extends2["default"])({}, others, {
    ref: el,
    className: (0, _clsx2["default"])(className, classes.root, (_clsx = {}, (0, _defineProperty2["default"])(_clsx, classes.inline, inline), (0, _defineProperty2["default"])(_clsx, classes.block, !inline), _clsx)),
    dangerouslySetInnerHTML: {
      __html: children
    }
  })) : null;
}

CmsSlot.proptypes = {
  /**
   * If `true`, will use `display: inline` style.
   */
  inline: _propTypes["default"].bool,

  /**
   * If `true` to lazy load images that have been preprocessed with `$.lazyLoadImages()`.
   */
  lazyLoadImages: _propTypes["default"].bool,

  /**
   * If `true`, prefetch links that have a `data-rsf-prefetch` attribute.
   */
  prefetchLinks: false
};
CmsSlot.defaultProps = {
  lazyLoadImages: false
};
//# sourceMappingURL=CmsSlot.js.map