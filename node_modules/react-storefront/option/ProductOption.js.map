{"version":3,"sources":["../../src/option/ProductOption.js"],"names":["ProductOption","props","value","selected","selectedOption","onSelectedOptionChange","onClick","variant","showLabel","wrapperProps","optionProps","selectedClassName","others","handleClick","_e","Variant","TextProductOption","SwatchProductOption","propArgs","text","undefined","propTypes","PropTypes","oneOf","isRequired","bool","string","object","func","defaultProps","Function","prototype"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport TextProductOption from './TextProductOption'\nimport SwatchProductOption from './SwatchProductOption'\nimport withDefaultHandler from '../utils/withDefaultHandler'\nimport get from 'lodash/get'\n\n/**\n * A button or swatch that displays a representation of a product option within a\n * [`ProductOptionSelector`](/apiReference/option/ProductOptionSelector].\n */\nexport default function ProductOption(props) {\n  let {\n    value,\n    selected,\n    selectedOption,\n    onSelectedOptionChange,\n    onClick,\n    variant,\n    showLabel,\n    wrapperProps,\n    optionProps,\n    selectedClassName,\n    ...others\n  } = props\n\n  if (selectedOption) {\n    selected = get(value, 'id') == get(selectedOption, 'id')\n  }\n\n  const handleClick = withDefaultHandler(onClick, _e => {\n    if (onSelectedOptionChange) {\n      onSelectedOptionChange(selected ? null : value)\n    }\n  })\n\n  const Variant = variant === 'text' ? TextProductOption : SwatchProductOption\n  const propArgs = { selected, ...props }\n\n  return (\n    <div className={selected ? selectedClassName : ''} {...wrapperProps(propArgs)}>\n      <Variant\n        {...others}\n        {...optionProps(propArgs)}\n        label={showLabel ? value && value.text : undefined}\n        selected={selected}\n        onClick={handleClick}\n        disabled={get(value, 'disabled')}\n      />\n    </div>\n  )\n}\n\nProductOption.propTypes = {\n  /**\n   * The UI variant that controls how the option is displayed.\n   */\n  variant: PropTypes.oneOf(['text', 'swatch']).isRequired,\n  /**\n   * Set to `false` to hide the label text.\n   */\n  showLabel: PropTypes.bool,\n  /**\n   * The CSS class name applied to a selected option.\n   */\n  selectedClassName: PropTypes.string,\n  /**\n   * The value for the product option.\n   */\n  value: PropTypes.object,\n  /**\n   * If `true`, this option is the selected option.\n   */\n  selected: PropTypes.bool,\n  /**\n   * An alternative to using [`selected`](#prop-selected), this is a value that will be tested against\n   * the [`value`](#prop-value) prop to determine if this option is selected.\n   */\n  selectedOption: PropTypes.object,\n  /**\n   * Called when the selected option is changed.\n   */\n  onSelectedOptionChange: PropTypes.func,\n  /**\n   * Called with this option is clicked.\n   */\n  onClick: PropTypes.func,\n  /**\n   * A function that returns props to pass to the wrapper element.\n   */\n  wrapperProps: PropTypes.func,\n  /**\n   * A function that returns props to pass to the option element.\n   */\n  optionProps: PropTypes.func,\n}\n\nProductOption.defaultProps = {\n  showLabel: true,\n  wrapperProps: Function.prototype,\n  optionProps: Function.prototype,\n  selectedClassName: 'rsf-po-selected',\n}\n"],"file":"ProductOption.js"}