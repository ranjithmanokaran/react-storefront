{"version":3,"sources":["../../src/option/SwatchProductOption.js"],"names":["styles","theme","root","button","position","marginBottom","spacing","padding","borderRadius","backgroundColor","minWidth","borderWidth","borderStyle","borderColor","palette","grey","cursor","outline","buttonDisabled","image","height","width","SwatchButton","checkMark","transition","opacity","zIndex","color","top","left","display","alignItems","justifyContent","boxSizing","selected","selectedLabel","fontWeight","small","tiny","disabled","strikeThrough","defaultStrikeThrough","smallStrikeThrough","tinyStrikeThrough","useStyles","name","SwatchProductOption","label","classes","imageProps","onClick","SelectedIcon","size","skeleton","ImageComponent","className","buttonProps","strikeThroughDisabled","strikeThroughAngle","marginTop","margintLeft","marginRight","Function","prototype","icon","transform","propTypes","PropTypes","object","string","oneOfType","element","shape","Image","oneOf","elementType","bool","number","func","defaultProps","CheckedIcon"],"mappings":"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","sourcesContent":["import React from 'react'\nimport clsx from 'clsx'\nimport { Vbox } from '../Box'\nimport { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Check as CheckedIcon } from '@material-ui/icons'\nimport Image from '../Image'\nimport PropTypes from 'prop-types'\nimport { Skeleton } from '@material-ui/lab'\n\nexport const styles = theme => ({\n  /**\n   * Styles applied to the root element.\n   */\n  root: {},\n  /**\n   * Styles applied to the button element.\n   */\n  button: {\n    position: 'relative',\n    marginBottom: theme.spacing(0.5),\n    padding: 2,\n    borderRadius: '50%',\n    backgroundColor: 'transparent',\n    minWidth: 0,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: theme.palette.grey[500],\n    cursor: 'pointer',\n    '&:focus': {\n      outline: 0,\n    },\n  },\n  /**\n   * Styles applied to the button element when [`disabled`](#prop-disabled) is `true`.\n   */\n  buttonDisabled: {\n    cursor: 'default',\n    borderColor: theme.palette.grey['A100'],\n  },\n  /**\n   * Styles applied to the image element.\n   */\n  image: {\n    height: '100%',\n    width: '100%',\n    borderRadius: '50%',\n  },\n  /**\n   * Styles applied for mobile devices.\n   */\n  '@media not all and (hover: none)': {\n    SwatchButton: {\n      '&:hover': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n  /**\n   * Styles applied to the wrapper element of the selected icon.\n   */\n  checkMark: {\n    transition: 'opacity 0.1s linear',\n    opacity: 0,\n    position: 'absolute',\n    zIndex: 1,\n    color: 'white',\n    top: 2,\n    left: 2,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    padding: 2,\n    height: 'calc(100% - 4px)',\n    width: 'calc(100% - 4px)',\n    boxSizing: 'border-box',\n    borderRadius: '50%',\n    '.rsf-po-selected &': {\n      opacity: 1,\n    },\n  },\n  /**\n   * Styles applied to the wrapper element of the selected icon when this option is selected.\n   */\n  selected: {\n    opacity: 1,\n  },\n  /**\n   * Styles applied to the label element when this option is selected.\n   */\n  selectedLabel: {\n    fontWeight: 'bold',\n  },\n  /**\n   * Styles applied to the skeleton and button elements when [`size`](#prop-size) is `'default'`.\n   */\n  default: {\n    height: 48,\n    width: 48,\n    '& svg': {\n      height: 24,\n      width: 24,\n    },\n  },\n  /**\n   * Styles applied to the skeleton and button elements when [`size`](#prop-size) is `'small'`.\n   */\n  small: {\n    height: 32,\n    width: 32,\n    '& svg': {\n      height: 16,\n      width: 16,\n    },\n  },\n  /**\n   * Styles applied to the skeleton and button elements when [`size`](#prop-size) is `'tiny'`.\n   */\n  tiny: {\n    height: 24,\n    width: 24,\n    '& svg': {\n      height: 12,\n      width: 12,\n    },\n  },\n  /**\n   * Styles applied to the image element when [`disabled`](#prop-disabled) is `true`.\n   */\n  disabled: {\n    opacity: 0.3,\n  },\n  /**\n   * Styles applied to the element used as a strikethrough when [`disabled`](#prop-disabled) and\n   * [`strikeThroughDisabled`](#prop-disabled) are both `true`.\n   */\n  strikeThrough: {\n    height: '7px',\n    borderWidth: '2px 0',\n    borderStyle: 'solid',\n    borderColor: '#f2f2f2',\n    backgroundColor: '#666',\n    position: 'relative',\n    width: '100%',\n    borderRadius: 10,\n  },\n  /**\n   * Styles applied to the element used as a strikethrough when [`disabled`](#prop-disabled) and\n   * [`strikeThroughDisabled`](#prop-disabled) are both `true`, and [`size`](#prop-size) is `'default'`.\n   */\n  defaultStrikeThrough: {\n    top: -24,\n  },\n  /**\n   * Styles applied to the element used as a strikethrough when [`disabled`](#prop-disabled) and\n   * [`strikeThroughDisabled`](#prop-disabled) are both `true`, and [`size`](#prop-size) is `'small'`.\n   */\n  smallStrikeThrough: {\n    top: -16,\n  },\n  /**\n   * Styles applied to the element used as a strikethrough when [`disabled`](#prop-disabled) and\n   * [`strikeThroughDisabled`](#prop-disabled) are both `true`, and [`size`](#prop-size) is `'tiny'`.\n   */\n  tinyStrikeThrough: {\n    top: -12,\n  },\n})\nconst useStyles = makeStyles(styles, { name: 'RSFSwatchProductOption' })\n\n/**\n * A variant of [`ProductOption`](/apiReference/option/ProductOption] that shows an image swatch to\n * represent a product option.\n */\nexport default function SwatchProductOption({\n  selected,\n  label,\n  classes,\n  color,\n  imageProps,\n  onClick,\n  SelectedIcon,\n  size,\n  skeleton,\n  ImageComponent,\n  className,\n  buttonProps,\n  disabled,\n  strikeThroughDisabled,\n  strikeThroughAngle,\n}) {\n  classes = useStyles({ classes })\n\n  if (skeleton) {\n    return (\n      <Skeleton\n        variant=\"circle\"\n        style={{ marginTop: 0, marginBottom: 4, margintLeft: 4, marginRight: 4 }}\n        className={clsx({\n          [buttonProps.className]: true,\n          [classes[size]]: true,\n        })}\n      />\n    )\n  }\n\n  return (\n    <Vbox className={classes.root}>\n      <button\n        {...buttonProps}\n        type=\"button\"\n        onClick={disabled ? Function.prototype : onClick}\n        className={clsx({\n          [className]: className != null,\n          [classes.button]: true,\n          [classes[size]]: true,\n          [classes.buttonDisabled]: disabled,\n        })}\n      >\n        <div\n          className={clsx({\n            [classes.checkMark]: true,\n            [classes.selected]: selected,\n          })}\n        >\n          <SelectedIcon className={classes.icon} />\n        </div>\n        {color ? (\n          <div\n            className={clsx({\n              [classes.image]: true,\n              [classes.disabled]: disabled,\n            })}\n            style={{ backgroundColor: color }}\n          />\n        ) : (\n          <ImageComponent\n            className={clsx({\n              [classes.disabled]: disabled,\n            })}\n            classes={{ image: classes.image }}\n            fill\n            aspectRatio={1}\n            {...imageProps}\n          />\n        )}\n        {disabled && strikeThroughDisabled && (\n          <div\n            className={clsx({\n              [classes.strikeThrough]: true,\n              [classes[`${size}StrikeThrough`]]: disabled,\n            })}\n            style={{ transform: `rotate(${strikeThroughAngle}deg)` }}\n          />\n        )}\n      </button>\n      {label && (\n        <Typography variant=\"caption\" className={clsx({ [classes.selectedLabel]: selected })}>\n          {label}\n        </Typography>\n      )}\n    </Vbox>\n  )\n}\n\nSwatchProductOption.propTypes = {\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * A CSS class to apply to the option.\n   */\n  className: PropTypes.string,\n  /**\n   * Text to display below the button.\n   */\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  /**\n   * A CSS color value to set the color of the swatch. Use either `color` or `imageProps`.\n   */\n  color: PropTypes.string,\n  /**\n   * Props for the `Image` element. Use either `color` or `imageProps`.\n   */\n  imageProps: PropTypes.shape(Image.propTypes),\n  /**\n   * Controls the size of the button.\n   */\n  size: PropTypes.oneOf(['default', 'small', 'tiny']),\n  /**\n   * The component type to use to display images.\n   */\n  ImageComponent: PropTypes.elementType,\n  /**\n   * If `true`, this option is selected.\n   */\n  selected: PropTypes.bool,\n  /**\n   * Set to `true` to make the option disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Set to `true` to show a slash through the item when disabled.\n   */\n  strikeThroughDisabled: PropTypes.bool,\n  /**\n   * The angle in degrees for the disabled indicator.\n   */\n  strikeThroughAngle: PropTypes.number,\n  /**\n   * A function to call when this option is clicked.\n   */\n  onClick: PropTypes.func,\n  /**\n   * An icon component type to display for when this option is selected.\n   */\n  SelectedIcon: PropTypes.elementType,\n  /**\n   * If `true`, show this option as just a skeleton.\n   */\n  skeleton: PropTypes.bool,\n  /**\n   * Props to pass to the button element.\n   */\n  buttonProps: PropTypes.object,\n}\n\nSwatchProductOption.defaultProps = {\n  imageProps: {},\n  SelectedIcon: CheckedIcon,\n  ImageComponent: Image,\n  size: 'default',\n  buttonProps: {},\n  strikeThroughDisabled: false,\n  strikeThroughAngle: 45,\n}\n"],"file":"SwatchProductOption.js"}