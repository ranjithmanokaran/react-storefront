{"version":3,"sources":["../../src/option/TextProductOption.js"],"names":["styles","theme","root","borderColor","palette","primary","main","backgroundColor","color","contrastText","strikeThrough","height","borderWidth","borderStyle","position","width","top","left","borderRadius","useStyles","name","TextProductOption","classes","className","selected","label","skeleton","buttonProps","onClick","disabled","strikeThroughDisabled","strikeThroughAngle","transform","propTypes","PropTypes","object","string","bool","oneOfType","element","isRequired","number","imageProps","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { Button } from '@material-ui/core'\nimport { Skeleton } from '@material-ui/lab'\n\nexport const styles = theme => ({\n  /**\n   * Styles applied to the root element.\n   */\n  root: {\n    '.rsf-po-selected &': {\n      borderColor: theme.palette.primary.main,\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText,\n\n      '&:hover': {\n        borderColor: theme.palette.primary.main,\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n      },\n    },\n  },\n  /**\n   * Styles applied to the element used as a strikethrough when [`disabled`](#prop-disabled) and\n   * [`strikeThroughDisabled`](#prop-disabled) are both `true`.\n   */\n  strikeThrough: {\n    height: '7px',\n    borderWidth: '2px 0',\n    borderStyle: 'solid',\n    borderColor: '#f2f2f2',\n    backgroundColor: '#666',\n    position: 'relative',\n    width: '100%',\n    top: 'calc(-50% - 2px)',\n    left: -2,\n    borderRadius: 10,\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFTextProductOption' })\n\n/**\n * Represents a single product option value as a button with text. All additional\n * props are spread to the underlying Material UI Button component.\n *\n * Example:\n *\n * ```js\n * <TextProductOption label=\"SM\" selected />\n * ```\n */\nexport default function TextProductOption({\n  classes,\n  className,\n  selected,\n  label,\n  skeleton,\n  buttonProps,\n  onClick,\n  disabled,\n  strikeThroughDisabled,\n  strikeThroughAngle,\n}) {\n  classes = useStyles({ classes })\n\n  if (skeleton) {\n    return <Skeleton className={className} width={64} height={36} />\n  }\n\n  return (\n    <>\n      <Button\n        {...buttonProps}\n        disabled={disabled}\n        className={clsx(className, classes.root)}\n        variant={selected ? 'contained' : 'outlined'}\n        color={selected ? 'primary' : 'default'}\n        onClick={onClick}\n      >\n        {label}\n      </Button>\n      {disabled && strikeThroughDisabled && (\n        <div\n          className={classes.strikeThrough}\n          style={{ transform: `rotate(${strikeThroughAngle}deg)` }}\n        />\n      )}\n    </>\n  )\n}\n\nTextProductOption.propTypes = {\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * A CSS class to apply to the option.\n   */\n  className: PropTypes.string,\n  /**\n   * Set to `true` to display a skeleton instead of the actual button.\n   */\n  skeleton: PropTypes.bool,\n  /**\n   * The text for the button.\n   */\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  /**\n   * Set to `true` to mark the option as selected.\n   */\n  selected: PropTypes.bool,\n  /**\n   * Set to `true` to make the option disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Set to `true` to show a slash through the item when disabled.\n   */\n  strikeThroughDisabled: PropTypes.bool,\n  /**\n   * The angle in degrees for the disabled indicator.\n   */\n  strikeThroughAngle: PropTypes.number,\n  /**\n   * This prop is intentionally ignored so that `TextProductOption` can be used interchangeably with\n   * `SwatchProductOption without` displaying a warning.\n   */\n  imageProps: PropTypes.object,\n  /**\n   * Props to pass to the button element.\n   */\n  buttonProps: PropTypes.object,\n  /**\n   * A function to call when this option is clicked.\n   */\n  onClick: PropTypes.func,\n}\n\nTextProductOption.defaultProps = {\n  selected: false,\n  strikeThroughDisabled: false,\n  strikeThroughAngle: 27,\n}\n"],"file":"TextProductOption.js"}