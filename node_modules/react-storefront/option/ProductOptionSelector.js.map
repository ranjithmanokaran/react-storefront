{"version":3,"sources":["../../src/option/ProductOptionSelector.js"],"names":["styles","theme","root","display","flexWrap","button","margin","spacing","useStyles","name","ProductOptionSelector","options","classes","optionProps","skeleton","value","onChange","variant","strikeThroughDisabled","OptionComponent","Array","fill","map","_item","i","id","text","option","image","color","className","propTypes","PropTypes","object","imageProps","string","func","number","bool","elementType","defaultProps","items","ProductOption"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport ProductOption from './ProductOption'\n\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: theme.spacing(0, 0.5, 0.5, 0),\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFProductOptionSelector' })\n\n/**\n * A selector for product options rendered as a set of buttons. Buttons can either have\n * text or an image. The text for the selected option can optionally be displayed below\n * the buttons.\n *\n * This component supports AMP.\n */\nexport default function ProductOptionSelector({\n  options,\n  name,\n  classes,\n  optionProps,\n  skeleton,\n  value,\n  onChange,\n  variant,\n  strikeThroughDisabled,\n  OptionComponent,\n}) {\n  classes = useStyles({ classes })\n\n  if (skeleton) {\n    options = new Array(skeleton).fill(0).map((_item, i) => ({ id: i, text: '' }))\n  }\n\n  if (!options) return null\n\n  return (\n    <div data-id=\"ProductOptionSelector\" className={classes.root}>\n      {options.map((option, i) => {\n        return (\n          <OptionComponent\n            selectedOption={value}\n            onSelectedOptionChange={onChange}\n            {...optionProps}\n            variant={variant || (option.image || option.color ? 'swatch' : 'text')}\n            name={name}\n            key={option.id}\n            className={clsx(classes.button, optionProps.className)}\n            index={i}\n            color={option.color}\n            imageProps={option.image}\n            value={option}\n            skeleton={skeleton != null}\n            strikeThroughDisabled={strikeThroughDisabled}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nProductOptionSelector.propTypes = {\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Props for displayed images. See <Image /> component for details\n   */\n  imageProps: PropTypes.object,\n\n  /**\n   * The name of property in amp state to bind to\n   */\n  name: PropTypes.string,\n\n  /**\n   * Function to call when a new option is selected. Called with the new selected\n   * option or `null` when a selected option is deselected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Props to apply to each `SwatchProductOption` or `TextProductOption` element.\n   */\n  optionProps: PropTypes.object,\n\n  /**\n   * If specified, this number of skeleton buttons will be displayed instead of\n   * displaying the actual buttons.\n   */\n  skeleton: PropTypes.number,\n\n  /**\n   * Current selected value among provided options or `null` when no option is selected.\n   */\n  value: PropTypes.object,\n\n  /**\n   * If `true`, disabled options will have a line through them.\n   */\n  strikeThroughDisabled: PropTypes.bool,\n\n  /**\n   * Allows you to override the default component which is used to render a product option.\n   */\n  OptionComponent: PropTypes.elementType,\n}\n\nProductOptionSelector.defaultProps = {\n  items: [],\n  optionProps: {},\n  imageProps: {},\n  OptionComponent: ProductOption,\n  strikeThroughDisabled: false,\n}\n"],"file":"ProductOptionSelector.js"}