{"version":3,"sources":["../src/ExpandableSection.js"],"names":["styles","theme","root","boxShadow","borderBottom","palette","divider","background","display","padding","minHeight","margins","spacing","caption","transition","expandedCaption","opacity","details","flexDirection","summary","summaryContent","justifyContent","alignItems","margin","summaryExpanded","expandIconExpanded","summaryIconWrap","right","withCollapseIcon","transform","expandedPanel","title","expandIcon","height","width","collapseIcon","useStyles","name","ExpandableSection","props","classes","children","expanded","defaultExpanded","ExpandIcon","CollapseIcon","onChange","others","expandedState","setExpandedState","getSummaryClasses","result","content","handleChange","e","propTypes","PropTypes","oneOfType","string","element","elementType","bool","defaultProps","ExpandMoreIcon"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport {\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography,\n} from '@material-ui/core'\nimport { ExpandMore as ExpandMoreIcon } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles'\nimport useStateFromProp from './hooks/useStateFromProp'\nimport withDefaultHandler from './utils/withDefaultHandler'\n\nexport const styles = theme => ({\n  /**\n   * Styles applied to the root element.\n   */\n  root: {\n    boxShadow: 'none',\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    background: 'transparent',\n\n    '&::before': {\n      display: 'none',\n    },\n\n    '& > *:first-child': {\n      padding: '0',\n      minHeight: '0',\n    },\n  },\n\n  /**\n   * Styles applied to the root element if [`margins`](#prop-margins) is `true`.\n   */\n  margins: {\n    padding: `0 ${theme.spacing(2)}px`,\n  },\n\n  /**\n   * Styles applied to the caption element.\n   */\n  caption: {\n    transition: 'opacity .2s linear',\n  },\n\n  /**\n   * Styles applied to the caption element when the section is expanded.\n   */\n  expandedCaption: {\n    opacity: 0,\n  },\n\n  /**\n   * Styles applied to the body element of the expansion panel.\n   */\n  details: {\n    padding: theme.spacing(0, 0, 2, 0),\n    display: 'flex',\n    flexDirection: 'column',\n  },\n\n  /**\n   * Styles applied to the summary element of the expansion panel.\n   */\n  summary: {\n    '&:first-child': {\n      padding: theme.spacing(1, 0),\n    },\n  },\n\n  /**\n   * Styles applied to the content of the summary element of the expansion panel.\n   */\n  summaryContent: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: 0,\n    '[aria-expanded=true] > &': {\n      margin: '0 !important',\n    },\n  },\n\n  /**\n   * Styles applied to the summary element of the expansion panel when the section is expanded.\n   */\n  summaryExpanded: {},\n\n  /**\n   * Styles applied to the expand icon of the expansion panel when the section is expanded if the\n   * [`ExpandIcon`](#prop-ExpandIcon) is different than the [`CollapseIcon`](#prop-CollapseIcon).\n   */\n  expandIconExpanded: {},\n\n  /**\n   * Styles applied to the expand icon of the expansion panel when the [`ExpandIcon`](#prop-ExpandIcon)\n   * is different than the [`CollapseIcon`](#prop-CollapseIcon).\n   */\n  summaryIconWrap: {\n    right: 0,\n    padding: theme.spacing(0, 1),\n  },\n\n  /**\n   * Styles applied to the summary element of the expansion panel.\n   */\n  withCollapseIcon: {\n    transform: 'rotate(0deg) !important',\n  },\n\n  /**\n   * Styles applied to the root element when the section is expanded.\n   */\n  expandedPanel: {\n    '&$root': {\n      margin: 0,\n    },\n  },\n\n  /**\n   * Styles applied to the title element.\n   */\n  title: {},\n\n  /**\n   * Styles applied to the expand icon element.\n   */\n  expandIcon: {\n    height: 24,\n    width: 24,\n  },\n  /**\n   * Styles applied to the collapse icon element.\n   */\n  collapseIcon: {\n    height: 24,\n    width: 24,\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFExpandableSection' })\n\n/**\n * An expandable info section.  Example:\n *\n * ```js\n *  <ExpandableSection title=\"Help\" caption=\"Click here for more info\">\n *    <Typography>This is a help section</Typography>\n *  </ExpandableSection>\n * ```\n */\nexport default function ExpandableSection(props) {\n  let {\n    classes,\n    children = [],\n    title,\n    caption,\n    expanded,\n    defaultExpanded,\n    ExpandIcon,\n    CollapseIcon,\n    margins,\n    onChange,\n    ...others\n  } = props\n\n  classes = useStyles({ classes })\n\n  const [expandedState, setExpandedState] = useStateFromProp(expanded || defaultExpanded || false)\n\n  /**\n   * Gets the classes for the ExpansionPanelSummary\n   * Here we add a class to remove the rotate transform if we're using a\n   * separate icon for the collapse state.\n   */\n  function getSummaryClasses() {\n    const result = {\n      root: clsx({ [classes.summary]: true, [classes.summaryExpanded]: expandedState }),\n      content: classes.summaryContent,\n      expandIcon: clsx({\n        [classes.summaryIconWrap]: true,\n        [classes.expandIconExpanded]: expandedState,\n      }),\n    }\n\n    if (CollapseIcon !== ExpandIcon) {\n      result.expandIcon = classes.withCollapseIcon\n    }\n\n    return result\n  }\n\n  const handleChange = withDefaultHandler(onChange, (e, expanded) => {\n    if (props.expanded == null) {\n      setExpandedState(expanded)\n    }\n  })\n\n  return (\n    <ExpansionPanel\n      classes={{\n        root: clsx({\n          [classes.root]: true,\n          [classes.margins]: margins,\n        }),\n        expanded: classes.expandedPanel,\n      }}\n      expanded={expandedState}\n      defaultExpanded={defaultExpanded}\n      {...others}\n      onChange={handleChange}\n    >\n      <ExpansionPanelSummary\n        expandIcon={\n          expandedState ? (\n            <CollapseIcon className={classes.collapseIcon} />\n          ) : (\n            <ExpandIcon className={classes.expandIcon} />\n          )\n        }\n        classes={getSummaryClasses()}\n      >\n        <Typography variant=\"subtitle1\" className={classes.title}>\n          {title}\n        </Typography>\n        {caption && (\n          <Typography\n            variant=\"caption\"\n            className={clsx({\n              [classes.caption]: true,\n              [classes.expandedCaption]: expandedState,\n            })}\n          >\n            {caption}\n          </Typography>\n        )}\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails classes={{ root: classes.details }}>{children}</ExpansionPanelDetails>\n    </ExpansionPanel>\n  )\n}\n\nExpandableSection.propTypes = {\n  /**\n   * The title for the header of the expandable section.\n   */\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\n  /**\n   * Text to display to the right of the heading.\n   */\n  caption: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\n  /**\n   * The icon to use for collapsed groups.\n   */\n  ExpandIcon: PropTypes.elementType,\n\n  /**\n   * The icon to use for expanded groups.\n   */\n  CollapseIcon: PropTypes.elementType,\n\n  /**\n   * If `false`, the default left and right margins are removed.\n   */\n  margins: PropTypes.bool,\n\n  /**\n   * Can be defined to control the expanded state externally with props, rather than having it\n   * controlled internally by state.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Defaults the panel to being expanded, without controlling the state.\n   */\n  defaultExpanded: PropTypes.bool,\n}\n\nExpandableSection.defaultProps = {\n  margins: true,\n  defaultExpanded: false,\n  ExpandIcon: ExpandMoreIcon,\n  CollapseIcon: ExpandMoreIcon,\n}\n"],"file":"ExpandableSection.js"}