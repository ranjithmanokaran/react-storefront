{"version":3,"sources":["../../src/nav/NavTab.js"],"names":["styles","theme","popover","pointerEvents","maxHeight","tab","paddingLeft","spacing","paddingRight","link","textDecoration","color","fontWeight","ripple","zIndex","paper","paddingTop","marginTop","background","boxShadow","innerPaper","borderTop","palette","divider","useStyles","name","NavTab","classes","href","as","prefetch","children","props","overTab","setOverTab","overMenu","setOverMenu","anchorEl","setAnchorEl","focused","setFocused","showMenu","event","currentTarget","hideMenu","setTimeout","leaveMenu","enterMenu","menuItemBlurPending","handleEnterKeyDown","e","key","preventDefault","handleMenuItemFocus","current","handleMenuItemBlur","open","onHistoryChange","unsubscribe","Router","events","off","on","root","vertical","horizontal","Fade","onMouseEnter","onMouseLeave","onClick","square","className","propTypes","PropTypes","string","isRequired","object","React","memo"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useRef, useEffect } from 'react'\nimport Link from '../link/Link'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Hidden, Fade, Tab, Popover, Paper } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport Router from 'next/router'\n\nconst styles = theme => ({\n  /**\n   * Styles applied to the Popover element for desktop users.\n   */\n  popover: {\n    pointerEvents: 'none',\n    maxHeight: '80%',\n  },\n  /**\n   * Styles applied to the `Tab` element.\n   */\n  tab: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  /**\n   * Styles applied to the root [`Link`](/apiReference/link/Link) element.\n   */\n  link: {\n    textDecoration: 'none',\n    color: 'inherit',\n    fontWeight: 300,\n  },\n  /**\n   * Styles applied to the root element of the `Tab`'s `TouchRippleProps` classes.\n   */\n  ripple: {\n    zIndex: 2,\n  },\n  /**\n   * Styles applied to the Popover element's `Paper` element for desktop users.\n   */\n  paper: {\n    pointerEvents: 'all',\n    paddingTop: 2, // we add 2 pixels of transparent padding and move the menu up two pixels to cover the tab indicator\n    marginTop: -2, // so that the user doesn't temporarily mouse over the indicator when moving between the tab and the menu, causing the menu to flicker.\n    background: 'transparent',\n    boxShadow: '0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14)',\n  },\n  /**\n   * Styles applied to the Popover element's `Paper` element for desktop users.\n   */\n  innerPaper: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFNavTab' })\n\n/**\n * A single navigational tab, which links to another page in the app based on the `as` and `href` props.\n * Children are displayed in a menu that is shown on mouse over on desktop devices.\n *\n * Example:\n *\n * ```js\n *  <NavTab href=\"/c/[categoryId]\" as=\"/c/shirts\" label=\"Shirts\">\n *    <div style={{ padding: 20 }}>\n *      <Link href=\"/s/[subcategoryId]\" as=\"/s/long-sleeve-shirts\">Long Sleeve Shirts</Link>\n *      <Link href=\"/s/[subcategoryId]\" as=\"/s/turtlenecks\">Turtlenecks</Link>\n *      <Link href=\"/s/[subcategoryId]\" as=\"/s/tees\">Tee Shirts</Link>\n *    </div>\n *  </NavTab>\n * ```\n *\n * Accessibility:\n *\n * This component supports keyboard navigation.  The user can open the menu by pressing the enter key when the `NavTab` is focused.\n */\nfunction NavTab({ classes, href, as, prefetch, children, ...props }) {\n  classes = useStyles({ classes })\n\n  const [overTab, setOverTab] = useState(false)\n  const [overMenu, setOverMenu] = useState(false)\n  const [anchorEl, setAnchorEl] = useState(null)\n  const [focused, setFocused] = useState(false)\n\n  const showMenu = useCallback(event => {\n    setOverTab(true)\n    setAnchorEl(event.currentTarget)\n  }, [])\n\n  // We use setTimeout here to delay the tab and menu exit events give time for the user to enter\n  // the tab or menu so that the menu doesn't flash when the user is transitioning between tab and menu.\n  const hideMenu = useCallback(() => setTimeout(() => setOverTab(false)), [])\n  const leaveMenu = useCallback(() => setTimeout(() => setOverMenu(false)), [])\n  const enterMenu = useCallback(() => setOverMenu(true), [])\n  const menuItemBlurPending = useRef(false)\n\n  // accessibility: open the menu when the user presses enter with the tab focused\n  const handleEnterKeyDown = useCallback(e => {\n    if (e.key === 'Enter') {\n      e.preventDefault()\n      setAnchorEl(e.currentTarget)\n      setFocused(true)\n    }\n  }, [])\n\n  // Keep track of when an item in the menu is focused.\n  const handleMenuItemFocus = useCallback(() => {\n    // When tabbing through menu items, the current one will blur before the next one focuses.\n    // So we need to let the event loop finish one cycle to see if another item in the menu receives focus before\n    // determining that the menu has lost focus and should be closed.\n    menuItemBlurPending.current = false\n  }, [])\n\n  // When a menu item loses focus, we close the menu if another menu item doesn't immediately gain focus\n  const handleMenuItemBlur = useCallback(() => {\n    menuItemBlurPending.current = true\n\n    setTimeout(() => {\n      if (menuItemBlurPending.current) {\n        setFocused(false)\n      }\n    })\n  }, [])\n\n  const open = overTab || overMenu || focused\n\n  // close the menu when the user navigates to a new page\n  useEffect(() => {\n    const onHistoryChange = () => handleMenuItemBlur()\n    const unsubscribe = () => Router.events.off('routeChangeStart', onHistoryChange)\n\n    if (open) {\n      Router.events.on('routeChangeStart', onHistoryChange)\n    } else {\n      unsubscribe()\n    }\n\n    return unsubscribe\n  }, [open])\n\n  return (\n    <>\n      <Link\n        className={classes.link}\n        href={href}\n        as={as}\n        onClick={hideMenu} // Does not work in dev, because next consumes focus in production everything is good\n        onMouseEnter={showMenu}\n        onMouseLeave={hideMenu}\n        prefetch={prefetch}\n      >\n        <Tab\n          onKeyDown={handleEnterKeyDown}\n          classes={{ root: classes.tab }}\n          aria-haspopup={children != null}\n          aria-expanded={open}\n          {...props}\n          TouchRippleProps={{\n            classes: {\n              root: classes.ripple,\n            },\n          }}\n        />\n      </Link>\n      {!children ? null : (\n        <Hidden xsDown>\n          <Popover\n            open={open}\n            className={classes.popover}\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'center',\n            }}\n            TransitionComponent={Fade}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'center',\n            }}\n            PaperProps={{\n              onMouseEnter: enterMenu,\n              onMouseLeave: leaveMenu,\n              onClick: leaveMenu,\n              square: true,\n              className: classes.paper,\n            }}\n          >\n            <Paper\n              className={classes.innerPaper}\n              onBlurCapture={handleMenuItemBlur}\n              onFocusCapture={handleMenuItemFocus}\n              square\n            >\n              {children}\n            </Paper>\n          </Popover>\n        </Hidden>\n      )}\n    </>\n  )\n}\n\nNavTab.propTypes = {\n  /**\n   * The link path\n   */\n  as: PropTypes.string.isRequired,\n  /**\n   * The next.js route pattern\n   */\n  href: PropTypes.string.isRequired,\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n}\n\nexport default React.memo(NavTab)\n"],"file":"NavTab.js"}