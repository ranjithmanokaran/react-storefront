"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = NavTabs;
exports.styles = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _clsx2 = _interopRequireDefault(require("clsx"));

var _styles = require("@material-ui/core/styles");

var _Tabs = _interopRequireDefault(require("@material-ui/core/Tabs"));

var _TabScrollButton = _interopRequireDefault(require("@material-ui/core/TabScrollButton"));

var _router = require("next/router");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var styles = function styles(theme) {
  return {
    /**
     * Styles applied to the root element when no tab is selected.
     */
    indicatorNoSelection: {
      display: 'none'
    },

    /**
     * Styles passed through to the `scrollButtons` rule in [`Tabs`](https://material-ui.com/api/tabs/#css)'.
     */
    scrollButtons: {
      position: 'absolute',
      height: '100%',
      right: 0,
      '&:first-child': {
        left: 0
      },
      '& svg': {
        zIndex: 1,
        width: theme.spacing(5),
        background: theme.palette.background.paper
      }
    },

    /**
     * Styles applied to the root [`Tabs`](https://material-ui.com/api/tabs/) component.
     */
    root: {
      maxWidth: theme.breakpoints.values.lg,
      flex: 1,
      position: 'relative',
      '&::before, &::after': {
        content: "''",
        top: 0,
        width: '15px',
        height: 'calc(100% - 3px)',
        position: 'absolute',
        zIndex: 1
      },
      '&::before': {
        left: 0,
        background: 'linear-gradient(to right, rgba(255, 255, 255, 1.0) 0%, rgba(255, 255, 255, 0.0) 100%)'
      },
      '&::after': {
        right: 0,
        background: 'linear-gradient(to left, rgba(255, 255, 255, 1.0) 0%, rgba(255, 255, 255, 0.0) 100%)'
      }
    },

    /**
     * Styles applied to the root element of the[`Tabs`](https://material-ui.com/api/tabs/)'
     * `ScrollButtonComponent` component.
     */
    ripple: {
      zIndex: 2
    }
  };
};

exports.styles = styles;
var useStyles = (0, _styles.makeStyles)(styles, {
  name: 'RSFNavTabs'
});
/**
 * Scrollable navigation tabs for the top of the app. All extra props are spread to the
 * underlying Material UI Tabs element.  When a tab is clicked, the "top_nav_clicked" analytics
 * event is fired.
 */

function NavTabs(_ref) {
  var _ref$classes = _ref.classes,
      classes = _ref$classes === void 0 ? {} : _ref$classes,
      children = _ref.children,
      others = (0, _objectWithoutProperties2["default"])(_ref, ["classes", "children"]);
  var _classes = classes,
      paper = _classes.paper,
      indicator = _classes.indicator,
      indicatorNoSelection = _classes.indicatorNoSelection,
      ripple = _classes.ripple,
      classNames = (0, _objectWithoutProperties2["default"])(_classes, ["paper", "indicator", "indicatorNoSelection", "ripple"]);
  classes = useStyles({
    classes: {
      paper: paper,
      indicator: indicator,
      indicatorNoSelection: indicatorNoSelection,
      ripple: ripple
    }
  });

  var _useRouter = (0, _router.useRouter)(),
      asPath = _useRouter.asPath;

  var value = children && children.findIndex(function (tab) {
    return tab.props.as === asPath.split('?')[0];
  });
  var TabScrollButton = (0, _react.useMemo)(function () {
    return function (props) {
      return /*#__PURE__*/_react["default"].createElement(_TabScrollButton["default"], (0, _extends2["default"])({}, props, {
        TouchRippleProps: {
          classes: {
            root: classes.ripple
          }
        }
      }));
    };
  }, [classes]);
  return /*#__PURE__*/_react["default"].createElement(_Tabs["default"], (0, _extends2["default"])({
    ScrollButtonComponent: TabScrollButton,
    variant: "scrollable",
    classes: _objectSpread(_objectSpread({}, classNames), {}, {
      indicator: (0, _clsx2["default"])(classes.indicator, (0, _defineProperty2["default"])({}, classes.indicatorNoSelection, value === -1))
    }),
    value: value === -1 ? false : value
  }, others), children);
}

NavTabs.propTypes = {
  /**
   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.
   */
  classes: _propTypes["default"].object,

  /**
   * Child tabs.
   */
  children: _propTypes["default"].node
};
NavTabs.defaultProps = {};
//# sourceMappingURL=NavTabs.js.map