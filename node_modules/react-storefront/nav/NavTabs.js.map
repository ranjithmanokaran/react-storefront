{"version":3,"sources":["../../src/nav/NavTabs.js"],"names":["styles","theme","indicatorNoSelection","display","scrollButtons","position","height","right","left","zIndex","width","spacing","background","palette","paper","root","maxWidth","breakpoints","values","lg","flex","content","top","ripple","useStyles","name","NavTabs","classes","children","others","indicator","classNames","asPath","value","findIndex","tab","props","as","split","TabScrollButton","propTypes","PropTypes","object","node","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { useMemo } from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Tabs } from '@material-ui/core'\nimport MuiTabScrollButton from '@material-ui/core/TabScrollButton'\nimport { useRouter } from 'next/router'\n\nexport const styles = theme => ({\n  /**\n   * Styles applied to the root element when no tab is selected.\n   */\n  indicatorNoSelection: {\n    display: 'none',\n  },\n  /**\n   * Styles passed through to the `scrollButtons` rule in [`Tabs`](https://material-ui.com/api/tabs/#css)'.\n   */\n  scrollButtons: {\n    position: 'absolute',\n    height: '100%',\n    right: 0,\n    '&:first-child': {\n      left: 0,\n    },\n    '& svg': {\n      zIndex: 1,\n      width: theme.spacing(5),\n      background: theme.palette.background.paper,\n    },\n  },\n  /**\n   * Styles applied to the root [`Tabs`](https://material-ui.com/api/tabs/) component.\n   */\n  root: {\n    maxWidth: theme.breakpoints.values.lg,\n    flex: 1,\n    position: 'relative',\n    '&::before, &::after': {\n      content: \"''\",\n      top: 0,\n      width: '15px',\n      height: 'calc(100% - 3px)',\n      position: 'absolute',\n      zIndex: 1,\n    },\n    '&::before': {\n      left: 0,\n      background:\n        'linear-gradient(to right, rgba(255, 255, 255, 1.0) 0%, rgba(255, 255, 255, 0.0) 100%)',\n    },\n    '&::after': {\n      right: 0,\n      background:\n        'linear-gradient(to left, rgba(255, 255, 255, 1.0) 0%, rgba(255, 255, 255, 0.0) 100%)',\n    },\n  },\n  /**\n   * Styles applied to the root element of the[`Tabs`](https://material-ui.com/api/tabs/)'\n   * `ScrollButtonComponent` component.\n   */\n  ripple: {\n    zIndex: 2,\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFNavTabs' })\n\n/**\n * Scrollable navigation tabs for the top of the app. All extra props are spread to the\n * underlying Material UI Tabs element.  When a tab is clicked, the \"top_nav_clicked\" analytics\n * event is fired.\n */\nexport default function NavTabs({ classes = {}, children, ...others }) {\n  const { paper, indicator, indicatorNoSelection, ripple, ...classNames } = classes\n  classes = useStyles({ classes: { paper, indicator, indicatorNoSelection, ripple } })\n\n  const { asPath } = useRouter()\n  const value = children && children.findIndex(tab => tab.props.as === asPath.split('?')[0])\n\n  const TabScrollButton = useMemo(() => {\n    return props => (\n      <MuiTabScrollButton {...props} TouchRippleProps={{ classes: { root: classes.ripple } }} />\n    )\n  }, [classes])\n\n  return (\n    <Tabs\n      ScrollButtonComponent={TabScrollButton}\n      variant=\"scrollable\"\n      classes={{\n        ...classNames,\n        indicator: clsx(classes.indicator, {\n          [classes.indicatorNoSelection]: value === -1, // To cancel weird animation when going from plp to pdp\n        }),\n      }}\n      value={value === -1 ? false : value}\n      {...others}\n    >\n      {children}\n    </Tabs>\n  )\n}\n\nNavTabs.propTypes = {\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * Child tabs.\n   */\n  children: PropTypes.node,\n}\n\nNavTabs.defaultProps = {}\n"],"file":"NavTabs.js"}