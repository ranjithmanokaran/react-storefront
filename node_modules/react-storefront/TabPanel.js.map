{"version":3,"sources":["../src/TabPanel.js"],"names":["styles","theme","root","panel","margin","spacing","hidden","display","useStyles","name","TabPanel","children","classes","scrollable","selectedProp","selected","onChange","tabsProps","tabProps","panelProps","renderPanels","setSelected","tabs","panels","onChangeHandler","event","React","Children","forEach","child","index","push","props","label","className","others","cloneElement","propTypes","PropTypes","object","bool","number","func","defaultProps","Function","prototype"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Tabs, Tab } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\n\nconst styles = theme => ({\n  /**\n   * Styles applied to the root element.\n   */\n  root: {},\n  /**\n   * Styles applied to the wrapper around each panel element.\n   */\n  panel: {\n    margin: `${theme.spacing(2)}px 0`,\n  },\n  /**\n   * Styles applied to the wrapper around each panel element when that panel is hidden.\n   */\n  hidden: {\n    display: 'none',\n  },\n})\n\nexport const useStyles = makeStyles(styles, { name: 'RSFTabPanel' })\n\n/**\n * A simple tab panel that is AMP-compatible.  Tab names are pulled from the label prop of the child elements.\n * Any type of element can be a child.\n *\n * Example:\n *\n * ```js\n *  <TabPanel>\n *    <div label=\"Description\">\n *      Description here\n *    </div>\n *    <CmsSlot label=\"Instructions\">\n *      { instructionsFromCms }\n *    </CmsSlot>\n *  </TabPanel>\n * ```\n */\nexport default function TabPanel({\n  children,\n  classes,\n  scrollable,\n  selected: selectedProp,\n  onChange,\n  tabsProps,\n  tabProps,\n  panelProps,\n  renderPanels,\n}) {\n  classes = useStyles({ classes })\n\n  const [selected, setSelected] = useState(selectedProp)\n  const tabs = []\n\n  let panels = []\n\n  const onChangeHandler = (event, selected) => {\n    setSelected(selected)\n\n    if (onChange) {\n      onChange(selected)\n    }\n  }\n\n  React.Children.forEach(children, (child, index) => {\n    tabs.push(\n      <Tab key={index} label={child.props.label} {...tabProps({ child, index, selected })} />,\n    )\n\n    const { className, ...others } = panelProps({ child, index, selected }) || {}\n\n    panels.push(\n      <div\n        key={index}\n        role=\"tabpanel\"\n        className={clsx(classes.panel, {\n          [classes.hidden]: index !== selected,\n          [className]: true,\n        })}\n        {...others}\n      >\n        {React.cloneElement(child, { label: null })}\n      </div>,\n    )\n  })\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        variant={scrollable ? 'scrollable' : null}\n        value={selected}\n        onChange={onChangeHandler}\n        {...tabsProps}\n      >\n        {tabs}\n      </Tabs>\n      {renderPanels(panels)}\n    </div>\n  )\n}\n\nTabPanel.propTypes = {\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Set to false to prevent the tabs from scrolling.\n   */\n  scrollable: PropTypes.bool,\n\n  /**\n   * Selected tab index.\n   */\n  selected: PropTypes.number,\n  /**\n   * Called when the selected tab is changed.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * A function that takes an object containing:\n   *\n   * - child: The child element\n   * - index: The index of the child\n   * - selected: The index of the currently selected element\n   *\n   * ... and returns props for the corresponding Material UI `Tab` element.\n   */\n  tabProps: PropTypes.func,\n\n  /**\n   * A function that takes an object containing:\n   *\n   * - child: The child element\n   * - index: The index of the child\n   * - selected: The index of the currently selected element\n   *\n   * ... and returns props for the corresponding panel `div` element.\n   */\n  panelProps: PropTypes.func,\n\n  /**\n   * Props for the Material UI `Tabs` element.\n   */\n  tabsProps: PropTypes.object,\n\n  /**\n   * A function that takes the panels as an argument and returns a react element to render.\n   */\n  renderPanels: PropTypes.func,\n}\n\nTabPanel.defaultProps = {\n  scrollable: true,\n  selected: 0,\n  tabProps: Function.prototype,\n  panelProps: Function.prototype,\n  renderPanels: panels => panels,\n}\n"],"file":"TabPanel.js"}