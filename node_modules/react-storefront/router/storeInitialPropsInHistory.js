"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = storeInitialPropsInHistory;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * Patches `history.pushState` and `history.replaceState` to stores the props of the
 * current main component in `history.state` before navigating.  This allows us to instantly
 * render the main component when the user goes back
 */
function storeInitialPropsInHistory() {
  if (typeof window === 'undefined') return;
  var replaceState = window.history.replaceState;

  history.replaceState = function (data, title, url) {
    var _history = history,
        state = _history.state;
    if (!state) state = {};
    replaceState.call(history, _objectSpread({
      rsf: state.rsf
    }, data), title, url);
  };
}
//# sourceMappingURL=storeInitialPropsInHistory.js.map