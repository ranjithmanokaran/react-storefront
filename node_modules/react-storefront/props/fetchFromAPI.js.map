{"version":3,"sources":["../../src/props/fetchFromAPI.js"],"names":["fetchFromAPI","req","asPath","pathname","host","process","env","API_HOST","headers","protocol","startsWith","uri","indexOf","replace","cookie","url","credentials","then","res","json"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBe,SAASA,YAAT,OAAiD;AAAA,MAAzBC,GAAyB,QAAzBA,GAAyB;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC9D,MAAMC,IAAI,GAAGH,GAAG,GAAGI,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwBN,GAAG,CAACO,OAAJ,CAAY,MAAZ,CAA3B,GAAiD,EAAjE;AAEA,MAAIC,QAAQ,GAAG,EAAf;;AAEA,MAAIR,GAAJ,EAAS;AACPQ,IAAAA,QAAQ,GAAG,UAAX;;AAEA,QAAIL,IAAI,CAACM,UAAL,CAAgB,WAAhB,KAAgCN,IAAI,CAACM,UAAL,CAAgB,WAAhB,CAApC,EAAkE;AAChED,MAAAA,QAAQ,GAAG,SAAX;AACD;AACF;;AAED,MAAIE,GAAG,GAAG,2BAAUT,MAAV,CAAV;AACA,MAAIM,OAAO,GAAG,EAAd;;AAEA,MAAIP,GAAJ,EAAS;AACP;AACA,QAAIU,GAAG,CAACC,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAA1B,EAA6B;AAC3BD,MAAAA,GAAG,GAAGA,GAAG,GAAG,oBAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,GAAG,GAAGA,GAAG,GAAG,oBAAZ;AACD;;AAEDH,IAAAA,OAAO,GAAG;AACRJ,MAAAA,IAAI,EAAEH,GAAG,CAACO,OAAJ,CAAY,MAAZ,CADE;AAER,mCAAsBL,QAAQ,CAACU,OAAT,CAAiB,KAAjB,EAAwB,EAAxB,CAAtB,CAFQ;AAGRC,MAAAA,MAAM,EAAEb,GAAG,CAACO,OAAJ,CAAYM;AAHZ,KAAV;AAKD;;AAED,MAAMC,GAAG,aAAMN,QAAN,SAAiBL,IAAjB,SAAwBO,GAAxB,CAAT;AAEA,SAAO,uBAAMI,GAAN,EAAW;AAAEC,IAAAA,WAAW,EAAE,SAAf;AAA0BR,IAAAA,OAAO,EAAPA;AAA1B,GAAX,EAAgDS,IAAhD,CAAqD,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAAxD,CAAP;AACD","sourcesContent":["import fetch from '../fetch'\nimport getAPIURL from '../api/getAPIURL'\n\n/**\n * A convenience function to be used in `getInitialProps` to fetch data for the page from an\n * API endpoint at the same path as the page being requested.  So for example, when rendering\n * `/p/1`, this function will fetch data from `/api/p/1?__v__={__NEXT_DATA__.buildId}`.\n *\n * ```js\n * import fetchFromAPI from 'react-storefront/props/fetchFromAPI'\n * import createLazyProps from 'react-storefront/props/createLazyProps'\n *\n * Product.getInitialProps = createLazyProps(opts => {\n *   return fetchFromAPI(opts)\n * })\n * ```\n *\n * Or simply:\n *\n * ```js\n * Product.getInitialProps = createLazyProps(fetchFromAPI)\n * ```\n *\n * @param {Object} opts The options object provided to `getInitialProps`\n * @return {Promise} A promise that resolves to the data that the page should display\n */\nexport default function fetchFromAPI({ req, asPath, pathname }) {\n  const host = req ? process.env.API_HOST || req.headers['host'] : ''\n\n  let protocol = ''\n\n  if (req) {\n    protocol = 'https://'\n\n    if (host.startsWith('localhost') || host.startsWith('127.0.0.1')) {\n      protocol = 'http://'\n    }\n  }\n\n  let uri = getAPIURL(asPath)\n  let headers = {}\n\n  if (req) {\n    // on the server\n    if (uri.indexOf('?') === -1) {\n      uri = uri + '?_includeAppData=1'\n    } else {\n      uri = uri + '&_includeAppData=1'\n    }\n\n    headers = {\n      host: req.headers['host'],\n      'x-next-page': `/api${pathname.replace(/\\/$/, '')}`,\n      cookie: req.headers.cookie,\n    }\n  }\n\n  const url = `${protocol}${host}${uri}`\n\n  return fetch(url, { credentials: 'include', headers }).then(res => res.json())\n}\n"],"file":"fetchFromAPI.js"}