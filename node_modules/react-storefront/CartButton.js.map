{"version":3,"sources":["../src/CartButton.js"],"names":["styles","theme","link","badge","border","padding","icon","color","palette","action","active","useStyles","name","CartButton","classes","href","as","onClick","quantity","linkProps","badgeProps","buttonProps","cartIcon","anchorProps","className","propTypes","PropTypes","string","object","node","defaultProps"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA;;;;AAEA;;;;;;;;AAEO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AAC9B;;;AAGAC,IAAAA,IAAI,EAAE,EAJwB;;AAK9B;;;;AAIAC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,iBADH;AAELC,MAAAA,OAAO,EAAE;AAFJ,KATuB;;AAa9B;;;AAGAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAEN,KAAK,CAACO,OAAN,CAAcC,MAAd,CAAqBC;AADxB;AAhBwB,GAAL;AAAA,CAApB;;;AAqBP,IAAMC,SAAS,GAAG,wBAAWX,MAAX,EAAmB;AAAEY,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAlB;AAEA;;;;;;;;;;AASe,SAASC,UAAT,OAUZ;AAAA,MATDC,OASC,QATDA,OASC;AAAA,MARDC,IAQC,QARDA,IAQC;AAAA,MAPDC,EAOC,QAPDA,EAOC;AAAA,MANDC,OAMC,QANDA,OAMC;AAAA,MALDX,IAKC,QALDA,IAKC;AAAA,MAJDY,QAIC,QAJDA,QAIC;AAAA,MAHDC,SAGC,QAHDA,SAGC;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADDC,WACC,QADDA,WACC;AACDP,EAAAA,OAAO,GAAGH,SAAS,CAAC;AAAEG,IAAAA,OAAO,EAAPA;AAAF,GAAD,CAAnB;;AACA,MAAMQ,QAAQ,GAAGhB,IAAI,iBAAI,gCAAC,wBAAD;AAAM,IAAA,SAAS,EAAEQ,OAAO,CAACR;AAAzB,IAAzB;;AAEA,sBACE,gCAAC,gBAAD,gCACMa,SAAS,CAACI,WADhB;AAEE,IAAA,SAAS,EAAE,sBAAKT,OAAO,CAACZ,IAAb,EAAmBiB,SAAS,CAACK,SAA7B,CAFb;AAGE,IAAA,IAAI,EAAET,IAHR;AAIE,IAAA,EAAE,EAAEC,EAJN;AAKE,IAAA,OAAO,EAAEC;AALX,mBAOE,gCAAC,yBAAD,EAAmBI,WAAnB,eACE,gCAAC,iBAAD;AACE,IAAA,YAAY,EAAEH;AADhB,KAEME,UAFN;AAGE,IAAA,OAAO,kCAAOA,UAAU,CAACN,OAAlB;AAA2BX,MAAAA,KAAK,EAAEW,OAAO,CAACX;AAA1C;AAHT,MAKGmB,QALH,CADF,CAPF,CADF;AAmBD;;AAEDT,UAAU,CAACY,SAAX,GAAuB;AACrB;;;AAGAV,EAAAA,IAAI,EAAEW,sBAAUC,MAJK;;AAMrB;;;AAGAb,EAAAA,OAAO,EAAEY,sBAAUE,MATE;;AAWrB;;;AAGAtB,EAAAA,IAAI,EAAEoB,sBAAUG,IAdK;;AAgBrB;;;AAGAR,EAAAA,WAAW,EAAEK,sBAAUE,MAnBF;;AAqBrB;;;AAGAR,EAAAA,UAAU,EAAEM,sBAAUE,MAxBD;;AA0BrB;;;AAGAT,EAAAA,SAAS,EAAEO,sBAAUE;AA7BA,CAAvB;AAgCAf,UAAU,CAACiB,YAAX,GAA0B;AACxBf,EAAAA,IAAI,EAAE,OADkB;AAExBK,EAAAA,UAAU,EAAE;AACVb,IAAAA,KAAK,EAAE;AADG,GAFY;AAKxBc,EAAAA,WAAW,qEACR,YADQ,EACO,MADP,2DAEF,SAFE,gBALa;AASxBF,EAAAA,SAAS,EAAE;AACTI,IAAAA,WAAW,EAAE;AAAE,iBAAW;AAAb;AADJ;AATa,CAA1B","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Link from './link/Link'\nimport ToolbarButton from './ToolbarButton'\nimport { ShoppingCart as Cart } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Badge } from '@material-ui/core'\nimport clsx from 'clsx'\n\nexport const styles = theme => ({\n  /**\n   * Styles applied to the [`Link`](/apiReference/link/Link) element used as the root.\n   */\n  link: {},\n  /**\n   * Styles passed through to the [`Badge`](https://material-ui.com/api/badge/#css) element's\n   * `badge` CSS rule.\n   */\n  badge: {\n    border: '2px solid white',\n    padding: '0 4px',\n  },\n  /**\n   * Styles applied to the button icon.\n   */\n  icon: {\n    color: theme.palette.action.active,\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFCartButton' })\n\n/**\n * A cart header button that display the number of items in the cart using a badge.\n *\n * Example:\n *\n * ```js\n * <CartButton href=\"/cart\" quantity={1} />\n * ```\n */\nexport default function CartButton({\n  classes,\n  href,\n  as,\n  onClick,\n  icon,\n  quantity,\n  linkProps,\n  badgeProps,\n  buttonProps,\n}) {\n  classes = useStyles({ classes })\n  const cartIcon = icon || <Cart className={classes.icon} />\n\n  return (\n    <Link\n      {...linkProps.anchorProps}\n      className={clsx(classes.link, linkProps.className)}\n      href={href}\n      as={as}\n      onClick={onClick}\n    >\n      <ToolbarButton {...buttonProps}>\n        <Badge\n          badgeContent={quantity}\n          {...badgeProps}\n          classes={{ ...badgeProps.classes, badge: classes.badge }}\n        >\n          {cartIcon}\n        </Badge>\n      </ToolbarButton>\n    </Link>\n  )\n}\n\nCartButton.propTypes = {\n  /**\n   * The url path to the cart page.\n   */\n  href: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Optional custom cart icon.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * Props passed through to the [`ToolbarButton`](/apiReference/ToolbarButton#props) element.\n   */\n  buttonProps: PropTypes.object,\n\n  /**\n   * Props passed through to the [`Badge`](https://material-ui.com/api/badge/#props) element.\n   */\n  badgeProps: PropTypes.object,\n\n  /**\n   * Props passed through to the [`Link`](/apiReference/link/Link#props) element.\n   */\n  linkProps: PropTypes.object,\n}\n\nCartButton.defaultProps = {\n  href: '/cart',\n  badgeProps: {\n    color: 'primary',\n  },\n  buttonProps: {\n    ['aria-label']: 'Cart',\n    color: 'inherit',\n  },\n  linkProps: {\n    anchorProps: { 'data-th': 'cart-link' },\n  },\n}\n"],"file":"CartButton.js"}