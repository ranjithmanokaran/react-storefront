{"version":3,"sources":["../src/CmsSlot.js"],"names":["styles","theme","inline","display","block","root","position","height","width","top","left","visibility","useStyles","name","CmsSlot","children","className","lazyLoadImages","prefetchLinks","others","classes","el","current","links","Array","from","querySelectorAll","link","getAttribute","e","console","warn","__html","proptypes","PropTypes","bool","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AAC9BC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AADH,KADsB;AAI9BC,IAAAA,KAAK,EAAE;AACLD,MAAAA,OAAO,EAAE;AADJ,KAJuB;AAO9BE,IAAAA,IAAI,EAAE;AACJ,6BAAuB;AACrBC,QAAAA,QAAQ,EAAE,UADW;AAGrB,iBAAS;AACPA,UAAAA,QAAQ,EAAE,UADH;AAEPC,UAAAA,MAAM,EAAE,MAFD;AAGPC,UAAAA,KAAK,EAAE,MAHA;AAIPC,UAAAA,GAAG,EAAE,CAJE;AAKPC,UAAAA,IAAI,EAAE;AALC;AAHY,OADnB;AAYJ,yBAAmB;AACjBC,QAAAA,UAAU,EAAE;AADK;AAZf;AAPwB,GAAL;AAAA,CAApB;;;AAyBP,IAAMC,SAAS,GAAG,wBAAWZ,MAAX,EAAmB;AAAEa,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAlB;AAEA;;;;;;AAKe,SAASC,OAAT,OAOZ;AAAA;;AAAA,MANDC,QAMC,QANDA,QAMC;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAJDd,MAIC,QAJDA,MAIC;AAAA,MAHDe,cAGC,QAHDA,cAGC;AAAA,MAFDC,aAEC,QAFDA,aAEC;AAAA,MADEC,MACF;AACD,MAAMC,OAAO,GAAGR,SAAS,CAACO,MAAD,CAAzB;AACA,MAAME,EAAE,GAAG,oBAAX;AAEA,wBAAU,YAAM;AACd,QAAI;AACF,UAAI,CAACA,EAAE,CAACC,OAAR,EAAiB;;AAEjB,UAAIL,cAAJ,EAAoB;AAClB,wCAAiBI,EAAE,CAACC,OAApB;AACD;;AAED,UAAIJ,aAAJ,EAAmB;AACjB,YAAMK,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWJ,EAAE,CAACC,OAAH,CAAWI,gBAAX,CAA4B,+BAA5B,CAAX,CAAd;;AAEA,kCAAiBH,KAAjB,4BAAwB;AAAnB,cAAII,IAAI,aAAR;AACH,8CAAgBA,IAAI,CAACC,YAAL,CAAkB,MAAlB,CAAhB;AACD;AACF;AACF,KAdD,CAcE,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,IAAR,CAAa,uCAAb,EAAsDF,CAAtD;AACD;AACF,GAlBD,EAkBG,CAACd,QAAD,CAlBH;AAoBA,SAAOA,QAAQ,gBACb,sEACMI,MADN;AAEE,IAAA,GAAG,EAAEE,EAFP;AAGE,IAAA,SAAS,EAAE,uBAAKL,SAAL,EAAgBI,OAAO,CAACf,IAAxB,uDACRe,OAAO,CAAClB,MADA,EACSA,MADT,2CAERkB,OAAO,CAAChB,KAFA,EAEQ,CAACF,MAFT,UAHb;AAOE,IAAA,uBAAuB,EAAE;AAAE8B,MAAAA,MAAM,EAAEjB;AAAV;AAP3B,KADa,GAUX,IAVJ;AAWD;;AACDD,OAAO,CAACmB,SAAR,GAAoB;AAClB;;;AAGA/B,EAAAA,MAAM,EAAEgC,sBAAUC,IAJA;;AAMlB;;;AAGAlB,EAAAA,cAAc,EAAEiB,sBAAUC,IATR;;AAWlB;;;AAGAjB,EAAAA,aAAa,EAAE;AAdG,CAApB;AAiBAJ,OAAO,CAACsB,YAAR,GAAuB;AACrBnB,EAAAA,cAAc,EAAE;AADK,CAAvB","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport doLazyLoadImages from './utils/lazyLoadImages'\nimport { prefetchJsonFor } from './serviceWorker'\n\nexport const styles = theme => ({\n  inline: {\n    display: 'inline',\n  },\n  block: {\n    display: 'block',\n  },\n  root: {\n    '& .rsf-presized-img': {\n      position: 'relative',\n\n      '& img': {\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        top: 0,\n        left: 0,\n      },\n    },\n    '& img[data-src]': {\n      visibility: 'hidden',\n    },\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFCmsSlot' })\n\n/**\n * A container for HTML blob content from a CMS.  Content is dangerously inserted into the DOM.\n * Pass the html as a string as the child of this component. Additional props are spread to the\n * rendered span element.\n */\nexport default function CmsSlot({\n  children,\n  className,\n  inline,\n  lazyLoadImages,\n  prefetchLinks,\n  ...others\n}) {\n  const classes = useStyles(others)\n  const el = useRef()\n\n  useEffect(() => {\n    try {\n      if (!el.current) return\n\n      if (lazyLoadImages) {\n        doLazyLoadImages(el.current)\n      }\n\n      if (prefetchLinks) {\n        const links = Array.from(el.current.querySelectorAll('a[data-rsf-prefetch=\"always\"]'))\n\n        for (let link of links) {\n          prefetchJsonFor(link.getAttribute('href'))\n        }\n      }\n    } catch (e) {\n      console.warn('error running side effects on CmsSlot', e)\n    }\n  }, [children])\n\n  return children ? (\n    <span\n      {...others}\n      ref={el}\n      className={clsx(className, classes.root, {\n        [classes.inline]: inline,\n        [classes.block]: !inline,\n      })}\n      dangerouslySetInnerHTML={{ __html: children }}\n    />\n  ) : null\n}\nCmsSlot.proptypes = {\n  /**\n   * If `true`, will use `display: inline` style.\n   */\n  inline: PropTypes.bool,\n\n  /**\n   * If `true` to lazy load images that have been preprocessed with `$.lazyLoadImages()`.\n   */\n  lazyLoadImages: PropTypes.bool,\n\n  /**\n   * If `true`, prefetch links that have a `data-rsf-prefetch` attribute.\n   */\n  prefetchLinks: false,\n}\n\nCmsSlot.defaultProps = {\n  lazyLoadImages: false,\n}\n"],"file":"CmsSlot.js"}