{"version":3,"sources":["../src/Accordion.js"],"names":["Accordion","children","findIndex","child","props","expanded","setExpanded","React","Children","map","i","cloneElement","onChange","e","preventDefault","propTypes","PropTypes","node"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;;AAiBe,SAASA,SAAT,OAAiC;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAC9C,MAAI,CAACA,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAH6C,kBAKd,qBAAS;AAAA,WAAMA,QAAQ,CAACC,SAAT,CAAmB,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,KAAN,CAAYC,QAAhB;AAAA,KAAxB,CAAN;AAAA,GAAT,CALc;AAAA;AAAA,MAKvCA,QALuC;AAAA,MAK7BC,WAL6B;;AAO9C;AAAA;AACE;AACA,sEACGC,kBAAMC,QAAN,CAAeC,GAAf,CAAmBR,QAAnB,EAA6B,UAACE,KAAD,EAAQO,CAAR,EAAc;AAC1C,0BAAOH,kBAAMI,YAAN,CAAmBR,KAAnB,EAA0B;AAC/BE,QAAAA,QAAQ,EAAEA,QAAQ,KAAKK,CADQ;AAE/BE,QAAAA,QAAQ,EAAE,kBAACC,CAAD,EAAIR,QAAJ,EAAiB;AACzBQ,UAAAA,CAAC,CAACC,cAAF;AACAR,UAAAA,WAAW,CAACD,QAAQ,GAAGK,CAAH,GAAO,IAAhB,CAAX;AACD;AAL8B,OAA1B,CAAP;AAOD,KARA,CADH;AAFF;AAcD;;AAEDV,SAAS,CAACe,SAAV,GAAsB;AACpB;;;AAGAd,EAAAA,QAAQ,EAAEe,sBAAUC;AAJA,CAAtB","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { useState } from 'react'\n\n/**\n * Accordion which only allows one child `ExpandableSection` to be open at a time\n *\n * ```js\n *  <Accordion>\n *    <ExpandableSection title=\"First\">\n *      <div>The first section</div>\n *    </ExpandableSection>\n *    <ExpandableSection title=\"Second\">\n *      <div>The second section</div>\n *    </ExpandableSection>\n *    <ExpandableSection title=\"Third\">\n *      <div>The third section</div>\n *    </ExpandableSection>\n *  </Accordion>\n * ```\n */\nexport default function Accordion({ children }) {\n  if (!children) {\n    return null\n  }\n\n  const [expanded, setExpanded] = useState(() => children.findIndex(child => child.props.expanded))\n\n  return (\n    // wrapped in a Fragment so react-docgen recognizes this as a Component:\n    <>\n      {React.Children.map(children, (child, i) => {\n        return React.cloneElement(child, {\n          expanded: expanded === i,\n          onChange: (e, expanded) => {\n            e.preventDefault()\n            setExpanded(expanded ? i : null)\n          },\n        })\n      })}\n    </>\n  )\n}\n\nAccordion.propTypes = {\n  /**\n   * A list of `ExpandableSection`s that will be controlled.\n   */\n  children: PropTypes.node,\n}\n"],"file":"Accordion.js"}