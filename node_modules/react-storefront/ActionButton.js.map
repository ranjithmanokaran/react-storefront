{"version":3,"sources":["../src/ActionButton.js"],"names":["styles","theme","label","justifyContent","alignItems","textTransform","caption","fontWeight","button","boxShadow","backgroundColor","palette","grey","value","color","text","primary","whiteSpace","textOverflow","marginLeft","useStyles","name","ActionButton","ref","children","classes","props","valueClasses","labelClasses","otherClasses","contained","propTypes","PropTypes","object","oneOfType","string","element"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Typography } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nexport const styles = theme => ({\n  /**\n   * Styles passed through to the [`Button`](https://material-ui.com/api/button/#css) element's\n   * `label` CSS rule.\n   */\n  label: {\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    textTransform: 'none',\n  },\n  /**\n   * Styles applied to the label container.\n   */\n  caption: {\n    textTransform: 'none',\n    fontWeight: 'bold',\n  },\n  /**\n   * Styles passed through to the [`Button`](https://material-ui.com/api/button/#css) element's\n   * `contained` CSS rule.\n   */\n  button: {\n    boxShadow: 'none',\n    backgroundColor: theme.palette.grey[200],\n  },\n  /**\n   * Styles applied to the values container.\n   */\n  value: {\n    color: theme.palette.text.primary,\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipses',\n    marginLeft: '10px',\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFActionButton' })\n\n/**\n * This button class displays a label and value.\n *\n * Example:\n *\n * ```js\n *  <ActionButton label=\"Sort\" value=\"Lowest Price\" onClick={openSortMenu} />\n * ```\n */\nconst ActionButton = forwardRef(({ label, value, children, classes = {}, ...props }, ref) => {\n  let { caption, value: valueClasses, button, label: labelClasses, ...otherClasses } = classes\n  classes = useStyles({ classes: { caption, value: valueClasses, button, label: labelClasses } })\n\n  return (\n    <Button\n      ref={ref}\n      variant=\"contained\"\n      classes={{\n        contained: classes.button,\n        label: classes.label,\n        ...otherClasses,\n      }}\n      {...props}\n    >\n      <Typography variant=\"button\" className={classes.caption}>\n        {label}\n      </Typography>\n      <Typography variant=\"caption\" className={classes.value}>\n        {value}\n      </Typography>\n    </Button>\n  )\n})\n\nActionButton.propTypes = {\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The label to display on the left side of the button.\n   */\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\n  /**\n   * The value to display on the right side of the button.\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n}\n\nexport default ActionButton\n"],"file":"ActionButton.js"}