{"version":3,"sources":["../../src/server/listRoutes.js"],"names":["MANIFEST_PATHS","path","join","process","cwd","listRoutes","manifest","env","NODE_ENV","manifestPath","find","fs","existsSync","JSON","parse","readFileSync","Error","createDevelopmentPagesManifest","pages","glob","sync","page","route","replace"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEA;AACA;AACA,IAAMA,cAAc,GAAG,CACrBC,iBAAKC,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,qBAAzB,CADqB,EAErBH,iBAAKC,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,OAAzB,EAAkC,QAAlC,EAA4C,qBAA5C,CAFqB,EAGrBH,iBAAKC,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,OAAzB,EAAkC,YAAlC,EAAgD,qBAAhD,CAHqB,CAAvB;;AAMe,SAASC,UAAT,GAAsB;AACnC,MAAIC,QAAJ;;AAEA,MAAIH,OAAO,CAACI,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAMC,YAAY,GAAGT,cAAc,CAACU,IAAf,CAAoB,UAAAT,IAAI;AAAA,aAAIU,eAAGC,UAAH,CAAcX,IAAd,CAAJ;AAAA,KAAxB,CAArB;AAEA;;AACA,QAAIQ,YAAJ,EAAkB;AAChBH,MAAAA,QAAQ,GAAGO,IAAI,CAACC,KAAL,CAAWH,eAAGI,YAAH,CAAgBN,YAAhB,EAA8B,OAA9B,CAAX,CAAX;AACD,KAFD,MAEO;AACL,YAAM,IAAIO,KAAJ,kDAAoDhB,cAAc,CAACE,IAAf,CAAoB,MAApB,CAApD,EAAN;AACD;AACF,GATD,MASO;AACLI,IAAAA,QAAQ,GAAGW,8BAA8B,EAAzC;AACD;;AAED,SAAO,2BAAUX,QAAV,CAAP;AACD;AAED;;;;;;;;AAMA,SAASW,8BAAT,GAA0C;AACxC,MAAMC,KAAK,GAAGC,iBAAKC,IAAL,CAAU,eAAV,EAA2B;AAAEhB,IAAAA,GAAG,EAAED,OAAO,CAACC,GAAR;AAAP,GAA3B,CAAd;;AACA,MAAME,QAAQ,GAAG,EAAjB;;AAFwC,6CAIvBY,KAJuB;AAAA;;AAAA;AAIxC,wDAAwB;AAAA,UAAfG,IAAe;AACtB,UAAMC,KAAK,GAAGD,IAAI,CAACE,OAAL,CAAa,QAAb,EAAuB,EAAvB,EAA2BA,OAA3B,CAAmC,UAAnC,EAA+C,EAA/C,CAAd;AACAjB,MAAAA,QAAQ,CAACgB,KAAD,CAAR,GAAkBD,IAAlB;AACD;AAPuC;AAAA;AAAA;AAAA;AAAA;;AASxC,SAAOf,QAAP;AACD","sourcesContent":["import getRoutes from './getRoutes'\nimport fs from 'fs'\nimport path from 'path'\nimport glob from 'glob'\n\n// Depending on the context (local dev, serverless lambda), the page manifest\n// file can be at different locations\nconst MANIFEST_PATHS = [\n  path.join(process.cwd(), 'pages-manifest.json'),\n  path.join(process.cwd(), '.next', 'server', 'pages-manifest.json'),\n  path.join(process.cwd(), '.next', 'serverless', 'pages-manifest.json'),\n]\n\nexport default function listRoutes() {\n  let manifest\n\n  if (process.env.NODE_ENV === 'production') {\n    const manifestPath = MANIFEST_PATHS.find(path => fs.existsSync(path))\n\n    /* istanbul ignore else */\n    if (manifestPath) {\n      manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf-8'))\n    } else {\n      throw new Error(`Could not find pages-manifests.json in ${MANIFEST_PATHS.join(' or ')}`)\n    }\n  } else {\n    manifest = createDevelopmentPagesManifest()\n  }\n\n  return getRoutes(manifest)\n}\n\n/**\n * Creates the equivalent of pages-manifest.json in development.  Since\n * next.js incrementally compiles pages on demand in development, pages-manifest may\n * not have all of the pages until they are visited and thus cannot be used by useSimpleNavigation\n * reliably in development.\n */\nfunction createDevelopmentPagesManifest() {\n  const pages = glob.sync('pages/**/*.js', { cwd: process.cwd() })\n  const manifest = {}\n\n  for (let page of pages) {\n    const route = page.replace(/^pages/, '').replace(/\\.[^/]+$/, '')\n    manifest[route] = page\n  }\n\n  return manifest\n}\n"],"file":"listRoutes.js"}