{"version":3,"sources":["../src/profile.js"],"names":["profile","label","cb","process","env","NODE_ENV","start","Date","getTime","result","end","console","log","global","rsf_profile"],"mappings":";;;;;;;AAAA;;;;;;AAMe,SAASA,OAAT,CAAiBC,KAAjB,EAAwBC,EAAxB,EAA4B;AACzC,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,WAAOH,EAAE,EAAT;AACD,GAFD,MAEO;AACL,QAAMI,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAd;AACA,QAAMC,MAAM,GAAGP,EAAE,EAAjB;AACA,QAAMQ,GAAG,GAAG,IAAIH,IAAJ,GAAWC,OAAX,EAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ,YAAsBS,GAAG,GAAGJ,KAA5B;AACA,WAAOG,MAAP;AACD;AACF;;AAEDI,MAAM,CAACC,WAAP,GAAqBd,OAArB","sourcesContent":["/**\n * Executes the callback and returns its result while logging the execution time to the console.\n * @param {String} label A string to preface the console.log\n * @param {Function} cb A function to execute\n * @return {Object} The result of the function\n */\nexport default function profile(label, cb) {\n  if (process.env.NODE_ENV === 'production') {\n    return cb()\n  } else {\n    const start = new Date().getTime()\n    const result = cb()\n    const end = new Date().getTime()\n    console.log(label, `${end - start} ms`)\n    return result\n  }\n}\n\nglobal.rsf_profile = profile\n"],"file":"profile.js"}