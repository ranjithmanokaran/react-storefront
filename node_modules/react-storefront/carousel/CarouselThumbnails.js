"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.styles = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _clsx2 = _interopRequireDefault(require("clsx"));

var _Tabs = _interopRequireDefault(require("@material-ui/core/Tabs"));

var _Tab = _interopRequireDefault(require("@material-ui/core/Tab"));

var _styles = require("@material-ui/core/styles");

var _useMediaQuery = _interopRequireDefault(require("@material-ui/core/useMediaQuery"));

var _mod = _interopRequireDefault(require("../utils/mod"));

var _Image = _interopRequireDefault(require("../Image"));

var styles = function styles(theme) {
  var _tabsRootLeft, _tabsRootRight;

  return {
    /**
     * Styles applied to the root element.
     */
    thumbs: {
      display: 'flex',
      justifyContent: 'center'
    },

    /**
     * Styles applied to each thumbnail element.
     */
    thumb: {
      width: 50,
      height: 50,
      boxSizing: 'content-box'
    },

    /**
     * Styles passed through to the [`Tabs`](https://material-ui.com/api/tabs/#css) element's
     * `indicator` CSS rule.
     */
    tabsIndicator: {
      display: 'none',
      backgroundColor: theme.palette.primary.main,
      height: '3px',
      transition: 'left 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'
    },

    /**
     * Styles applied to the root element of the Tabs element
     */
    tabsRoot: {},

    /**
     * Styles applied the to the root element of the Tabs element when `thumbnailPosition` is `left` or `right`.
     */
    tabsVertical: (0, _defineProperty2["default"])({}, theme.breakpoints.up('sm'), {
      flexDirection: 'column'
    }),

    /**
     * Styles applied to the root element of the Tabs element when `thumbnailPosition` is `left`.
     */
    tabsRootLeft: (_tabsRootLeft = {}, (0, _defineProperty2["default"])(_tabsRootLeft, theme.breakpoints.down('xs'), {
      marginTop: theme.spacing(2)
    }), (0, _defineProperty2["default"])(_tabsRootLeft, theme.breakpoints.up('sm'), {
      marginRight: theme.spacing(2)
    }), _tabsRootLeft),

    /**
     * Styles applied to the root element of the Tabs element when `thumbnailPosition` is `right`.
     */
    tabsRootRight: (_tabsRootRight = {}, (0, _defineProperty2["default"])(_tabsRootRight, theme.breakpoints.down('xs'), {
      marginTop: theme.spacing(2)
    }), (0, _defineProperty2["default"])(_tabsRootRight, theme.breakpoints.up('sm'), {
      marginLeft: theme.spacing(2)
    }), _tabsRootRight),

    /**
     * Styles applied to the root element of the Tabs element when `thumbnailPosition` is `top`.
     */
    tabsRootTop: {
      marginBottom: theme.spacing(2)
    },

    /**
     * Styles applied to the root element of the Tabs element when `thumbnailPosition` is `bottom`.
     */
    tabsRootBottom: {
      marginTop: theme.spacing(2)
    },

    /**
     * Styles passed through to each [`Tab`](https://material-ui.com/api/tabs/#css) element's
     * `root` CSS rule.
     */
    tabRoot: {
      minWidth: 'auto',
      padding: 0,
      outline: 'none',
      opacity: 0.7,
      transition: 'opacity linear 100ms',
      '&:hover': {
        opacity: 0.9
      }
    },

    /**
     * Styles passed through to each [`Tab`](https://material-ui.com/api/tabs/#css) element's
     * `selected` CSS rule.
     */
    selectedTab: {
      opacity: 1
    },

    /**
     * Styles passed through to each [`Tab`](https://material-ui.com/api/tabs/#css) element's
     * `wrapper` CSS rule.
     */
    tabWrapper: {
      margin: '0 2px',
      border: '1px solid transparent',
      '$selectedTab &': {
        border: "1px solid rgba(0,0,0,0.3)"
      }
    }
  };
};

exports.styles = styles;
var useStyles = (0, _styles.makeStyles)(styles, {
  name: 'RSFCarouselThumbnails'
});
/**
 * A set of thumbnails to show below a [`Carousel`](/apiReference/carousel/Carousel). Thumbnails can
 * be clicked to switch to the given slide. Internally, `CarouselThumbnails` uses MaterialUI's
 * [`Tabs`](https://material-ui.com/api/tabs) component to indicate which slide is selected
 */

function CarouselThumbnails(_ref) {
  var _clsx;

  var thumbnails = _ref.thumbnails,
      selected = _ref.selected,
      setSelected = _ref.setSelected,
      classes = _ref.classes,
      className = _ref.className,
      thumbnailPosition = _ref.thumbnailPosition,
      ImageComponent = _ref.ImageComponent;
  var styles = useStyles({
    classes: classes
  });
  var theme = (0, _styles.useTheme)();
  var isSmall = (0, _useMediaQuery["default"])(theme.breakpoints.down('xs'));
  var isVertical = !isSmall && ['left', 'right'].includes(thumbnailPosition);
  var count = thumbnails.length;
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _clsx2["default"])(className, styles.thumbs)
  }, /*#__PURE__*/_react["default"].createElement(_Tabs["default"], {
    value: selected !== false ? (0, _mod["default"])(selected, count) : false,
    variant: "scrollable",
    onChange: function onChange(_, index) {
      return setSelected(index);
    },
    orientation: isVertical ? 'vertical' : 'horizontal',
    classes: {
      root: (0, _clsx2["default"])(styles.tabsRoot, (_clsx = {}, (0, _defineProperty2["default"])(_clsx, styles.tabsVertical, isVertical), (0, _defineProperty2["default"])(_clsx, styles.tabsRootLeft, thumbnailPosition === 'left'), (0, _defineProperty2["default"])(_clsx, styles.tabsRootRight, thumbnailPosition === 'right'), (0, _defineProperty2["default"])(_clsx, styles.tabsRootTop, thumbnailPosition === 'top'), (0, _defineProperty2["default"])(_clsx, styles.tabsRootBottom, thumbnailPosition === 'bottom'), _clsx)),
      indicator: styles.tabsIndicator
    }
  }, thumbnails.map(function (_ref2, i) {
    var src = _ref2.src,
        alt = _ref2.alt;

    var icon = /*#__PURE__*/_react["default"].createElement(ImageComponent, {
      contain: true,
      className: styles.thumb,
      src: src,
      alt: alt
    });

    return /*#__PURE__*/_react["default"].createElement(_Tab["default"], {
      classes: {
        root: styles.tabRoot,
        wrapper: styles.tabWrapper,
        selected: styles.selectedTab
      },
      key: i,
      icon: icon
    });
  })));
}

CarouselThumbnails.propTypes = {
  /**
   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.
   */
  classes: _propTypes["default"].object,

  /**
   * CSS class to apply to the root element.
   */
  className: _propTypes["default"].string,

  /**
   * Index of the currently selected slide in the [`Carousel`](/apiReference/carousel/Carousel).
   */
  selected: _propTypes["default"].number,

  /**
   * Function to change the value of [`selected`](#prop-selected).
   */
  setSelected: _propTypes["default"].func,

  /**
   * Array of objects containing the data for an image to be used for each thumbnail.
   */
  thumbnails: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    src: _propTypes["default"].string,
    alt: _propTypes["default"].string
  })),

  /**
   * Position of the thumbnails, relative to the main carousel image.
   */
  thumbnailPosition: _propTypes["default"].oneOf(['bottom', 'top', 'left', 'right']),

  /**
   * The component type to use to display images.
   */
  ImageComponent: _propTypes["default"].elementType
};
CarouselThumbnails.defaultProps = {
  ImageComponent: _Image["default"]
};
var _default = CarouselThumbnails;
exports["default"] = _default;
//# sourceMappingURL=CarouselThumbnails.js.map