{"version":3,"sources":["../../src/carousel/CarouselDots.js"],"names":["styles","theme","dots","position","bottom","textAlign","width","dot","backgroundColor","palette","text","primary","height","borderWidth","borderStyle","borderColor","background","paper","borderRadius","display","margin","transitionDuration","dotSelected","useStyles","name","CarouselDots","selected","count","classes","i","push","propTypes","PropTypes","object","number","isRequired","React","memo"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvB;;;AAGAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE,UADN;AAEJC,MAAAA,MAAM,EAAE,KAFJ;AAGJC,MAAAA,SAAS,EAAE,QAHP;AAIJC,MAAAA,KAAK,EAAE;AAJH,KAJiB;;AAWvB;;;AAGAC,IAAAA,GAAG,EAAE;AACHC,MAAAA,eAAe,EAAE,4BAAKP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC,OAAxB,EAAiC,IAAjC,CADd;AAEHL,MAAAA,KAAK,EAAE,CAFJ;AAGHM,MAAAA,MAAM,EAAE,CAHL;AAIHC,MAAAA,WAAW,EAAE,KAJV;AAKHC,MAAAA,WAAW,EAAE,OALV;AAMHC,MAAAA,WAAW,EAAEd,KAAK,CAACQ,OAAN,CAAcO,UAAd,CAAyBC,KANnC;AAOHC,MAAAA,YAAY,EAAE,KAPX;AAQHC,MAAAA,OAAO,EAAE,cARN;AASHC,MAAAA,MAAM,EAAE,OATL;AAUH;AACAC,MAAAA,kBAAkB,EAAE;AAXjB,KAdkB;;AA4BvB;;;AAGAC,IAAAA,WAAW,EAAE;AACXd,MAAAA,eAAe,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC;AADzB;AA/BU,GAAL;AAAA,CAApB;;AAoCA,IAAMY,SAAS,GAAG,wBAAWvB,MAAX,EAAmB;AAAEwB,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAlB;AAEA;;;;;AAIA,SAASC,YAAT,OAAoD;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAClD,MAAM1B,IAAI,GAAG,EAAb;AACA0B,EAAAA,OAAO,GAAGL,SAAS,CAAC;AAAEK,IAAAA,OAAO,EAAPA;AAAF,GAAD,CAAnB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAApB,EAA2BE,CAAC,EAA5B,EAAgC;AAAA;;AAC9B3B,IAAAA,IAAI,CAAC4B,IAAL,eACE;AACE,MAAA,GAAG,EAAED,CADP;AAEE,MAAA,SAAS,EAAE,4EACRD,OAAO,CAACrB,GADA,EACM,IADN,2CAERqB,OAAO,CAACN,WAFA,EAEcI,QAAQ,KAAKG,CAF3B;AAFb,MADF;AASD;;AAED,sBAAO;AAAK,IAAA,SAAS,EAAED,OAAO,CAAC1B;AAAxB,KAA+BA,IAA/B,CAAP;AACD;;AAEDuB,YAAY,CAACM,SAAb,GAAyB;AACvB;;;AAGAH,EAAAA,OAAO,EAAEI,sBAAUC,MAJI;;AAMvB;;;AAGAN,EAAAA,KAAK,EAAEK,sBAAUE,MAAV,CAAiBC,UATD;;AAWvB;;;AAGAT,EAAAA,QAAQ,EAAEM,sBAAUE,MAAV,CAAiBC;AAdJ,CAAzB;;4BAiBeC,kBAAMC,IAAN,CAAWZ,YAAX,C","sourcesContent":["import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\n\nconst styles = theme => ({\n  /**\n   * Styles applied to the root element.\n   */\n  dots: {\n    position: 'absolute',\n    bottom: '5px',\n    textAlign: 'center',\n    width: '100%',\n  },\n\n  /**\n   * Styles applied to each dot element.\n   */\n  dot: {\n    backgroundColor: fade(theme.palette.text.primary, 0.25),\n    width: 8,\n    height: 8,\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor: theme.palette.background.paper,\n    borderRadius: '50%',\n    display: 'inline-block',\n    margin: '0 2px',\n    // Same duration as SwipeableViews animation\n    transitionDuration: '0.35s',\n  },\n\n  /**\n   * Styles applied to the dot representing the selected slide.\n   */\n  dotSelected: {\n    backgroundColor: theme.palette.text.primary,\n  }\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFCarouselDots' })\n\n/**\n * An overlay shown at the bottom of a [`Carousel`](/apiReference/carousel/Carousel) that shows a\n * sequence of dots representing the slides in the Carousel.\n */\nfunction CarouselDots({ selected, count, classes }) {\n  const dots = []\n  classes = useStyles({ classes })\n\n  for (let i = 0; i < count; i++) {\n    dots.push(\n      <div\n        key={i}\n        className={clsx({\n          [classes.dot]: true,\n          [classes.dotSelected]: selected === i,\n        })}\n      />,\n    )\n  }\n\n  return <div className={classes.dots}>{dots}</div>\n}\n\nCarouselDots.propTypes = {\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The total number of dots to show.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * The index of the selected dot.\n   */\n  selected: PropTypes.number.isRequired,\n}\n\nexport default React.memo(CarouselDots)\n"],"file":"CarouselDots.js"}