{"version":3,"sources":["../../src/carousel/Lightbox.js"],"names":["Transition","React","forwardRef","props","ref","styles","theme","root","content","padding","display","flexDirection","paper","flex","background","useStyles","name","Lightbox","classes","children","onClose","open","TransitionComponent","zIndex","modal","propTypes","PropTypes","object","node","isRequired","func","bool","elementType","defaultProps","memo"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAGA,IAAMA,UAAU,gBAAGC,kBAAMC,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAClD,sBAAO,gCAAC,gBAAD;AAAM,IAAA,QAAQ,EAAE,GAAhB;AAAqB,IAAA,GAAG,EAAEA;AAA1B,KAAmCD,KAAnC,EAAP;AACD,CAFkB,CAAnB;;AAIA,IAAME,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvB;;;AAGAC,IAAAA,IAAI,EAAE,EAJiB;;AAMvB;;;AAGAC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,CADF;AAEPC,MAAAA,OAAO,EAAE,MAFF;AAGPC,MAAAA,aAAa,EAAE;AAHR,KATc;;AAevB;;;;AAIAC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,UAAU,EAAE;AAFP;AAnBgB,GAAL;AAAA,CAApB;;AAyBA,IAAMC,SAAS,GAAG,wBAAWV,MAAX,EAAmB;AAAEW,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAlB;AAEA;;;;;AAIA,SAASC,QAAT,OAA6E;AAAA,MAAzDC,OAAyD,QAAzDA,OAAyD;AAAA,MAAhDC,QAAgD,QAAhDA,QAAgD;AAAA,MAAtCC,OAAsC,QAAtCA,OAAsC;AAAA,MAA7BC,IAA6B,QAA7BA,IAA6B;AAAA,MAAvBC,mBAAuB,QAAvBA,mBAAuB;AAC3EJ,EAAAA,OAAO,GAAGH,SAAS,CAAC;AAAEG,IAAAA,OAAO,EAAPA;AAAF,GAAD,CAAnB;AACA,MAAMZ,KAAK,GAAG,2BAAd;AAEA,sBACE,gCAAC,kBAAD;AACE,IAAA,IAAI,EAAEe,IADR;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,OAAO,EAAE;AACPT,MAAAA,KAAK,EAAEM,OAAO,CAACN;AADR,KAHX;AAME,IAAA,mBAAmB,EAAEU,mBANvB;AAOE,IAAA,SAAS,EAAEJ,OAAO,CAACX,IAPrB;AAQE,IAAA,KAAK,EAAE;AAAEgB,MAAAA,MAAM,EAAEjB,KAAK,CAACiB,MAAN,CAAaC,KAAb,GAAqB;AAA/B;AART,kBAUE,gCAAC,yBAAD,qBACE,gCAAC,sBAAD;AAAY,IAAA,OAAO,EAAEJ;AAArB,kBACE,gCAAC,iBAAD,OADF,CADF,CAVF,eAeE,gCAAC,yBAAD;AAAe,IAAA,SAAS,EAAEF,OAAO,CAACV;AAAlC,KAA4CW,QAA5C,CAfF,CADF;AAmBD;;AAEDF,QAAQ,CAACQ,SAAT,GAAqB;AACnB;;;AAGAP,EAAAA,OAAO,EAAEQ,sBAAUC,MAJA;;AAMnB;;;AAGAR,EAAAA,QAAQ,EAAEO,sBAAUE,IAAV,CAAeC,UATN;;AAWnB;;;AAGAT,EAAAA,OAAO,EAAEM,sBAAUI,IAdA;;AAgBnB;;;AAGAT,EAAAA,IAAI,EAAEK,sBAAUK,IAAV,CAAeF,UAnBF;;AAqBnB;;;AAGAP,EAAAA,mBAAmB,EAAEI,sBAAUM;AAxBZ,CAArB;AA2BAf,QAAQ,CAACgB,YAAT,GAAwB;AACtBX,EAAAA,mBAAmB,EAAEtB;AADC,CAAxB;;4BAIeC,kBAAMiC,IAAN,CAAWjB,QAAX,C","sourcesContent":["import useTheme from '@material-ui/core/styles/useTheme'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport { Dialog, DialogActions, DialogContent, IconButton, Zoom } from '@material-ui/core'\n\nconst Transition = React.forwardRef((props, ref) => {\n  return <Zoom duration={500} ref={ref} {...props} />\n})\n\nconst styles = theme => ({\n  /**\n   * Styles applied to the root element.\n   */\n  root: {},\n\n  /**\n   * Styles applied to the content element of the modal.\n   */\n  content: {\n    padding: 0,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n\n  /**\n   * Styles passed through to the `paper` CSS rule of the [`Dialog`](https://material-ui.com/api/dialog/#css)\n   * root element.\n   */\n  paper: {\n    flex: 1,\n    background: 'rgba(255,255,255,0.9)',\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFLightbox' })\n\n/**\n * A modal that opens to give a full-screen view of the elements within a\n * [`Carousel`](/apiReference/carousel/Carousel).\n */\nfunction Lightbox({ classes, children, onClose, open, TransitionComponent }) {\n  classes = useStyles({ classes })\n  const theme = useTheme()\n\n  return (\n    <Dialog\n      open={open}\n      fullScreen\n      classes={{\n        paper: classes.paper,\n      }}\n      TransitionComponent={TransitionComponent}\n      className={classes.root}\n      style={{ zIndex: theme.zIndex.modal + 10 }}\n    >\n      <DialogActions>\n        <IconButton onClick={onClose}>\n          <Close />\n        </IconButton>\n      </DialogActions>\n      <DialogContent className={classes.content}>{children}</DialogContent>\n    </Dialog>\n  )\n}\n\nLightbox.propTypes = {\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Child nodes to show inside the Lightbox.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * A function to call when the Lightbox is closed.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the Lightbox is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used for the [transition](https://material-ui.com/components/transitions/#transitioncomponent-prop).\n   */\n  TransitionComponent: PropTypes.elementType,\n}\n\nLightbox.defaultProps = {\n  TransitionComponent: Transition,\n}\n\nexport default React.memo(Lightbox)\n"],"file":"Lightbox.js"}