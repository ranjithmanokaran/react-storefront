{"version":3,"sources":["../../src/carousel/MediaCarousel.js"],"names":["THUMBNAIL_IMAGE_ID","styles","theme","root","display","flexDirection","flex","breakpoints","up","overflow","rootSideThumbs","mediaWrap","height","width","justifyContent","alignItems","maxHeight","maxWidth","objectFit","thumbnail","position","top","left","thumbnailsLeft","order","thumbnailsTop","lightboxCarousel","lightboxThumbs","paddingBottom","spacing","useStyles","name","MediaCarousel","props","thumbnails","thumbsClassName","thumbnailPosition","magnifyHintClassName","videoProps","imageProps","lightboxProps","lightboxClassName","classes","media","magnifyProps","id","CarouselComponent","ImageComponent","MediaComponent","CarouselThumbnailsComponent","others","imagesLoaded","setImagesLoaded","ref","over","setOver","selected","setSelected","video","setVideo","lightboxActive","setLightboxActive","isSmall","down","isTouchScreen","isThumbsSide","includes","full","type","timeout","handleMouseEnter","current","window","setTimeout","handleMouseLeave","clearTimeout","onFullSizeImagesLoaded","onClickCarousel","evt","defaultPrevented","firstImage","querySelector","addEventListener","removeEventListener","belowAdornments","push","some","item","magnify","MAX_WIDTH","showHint","innerWidth","mediaWidth","Object","assign","autoplay","className","slideStyle","handleLightboxClose","body","map","i","magnifySrc","src","fill","contain","propTypes","PropTypes","object","bool","shape","string","alt","oneOf","elementType","arrayOf","defaultProps","Media","Image","Carousel","CarouselThumbnails","controls","autoPlay"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { useCallback, useEffect, useState, useRef } from 'react'\nimport clsx from 'clsx'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport Carousel from './Carousel'\nimport Image from '../Image'\nimport Lightbox from './Lightbox'\nimport Media from './Media'\nimport MagnifyHint from './MagnifyHint'\nimport CarouselThumbnails from './CarouselThumbnails'\nimport get from 'lodash/get'\n\nconst THUMBNAIL_IMAGE_ID = '__rsf-placeholder-thumbnail'\n\nexport const styles = theme => ({\n  /**\n   * Styles applied to the root component.\n   */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n    [theme.breakpoints.up('sm')]: {\n      overflow: 'hidden',\n    },\n  },\n  /**\n   * Styles applied to the root component when `thumbnailPosition` is `left` or `right`.\n   */\n  rootSideThumbs: {\n    [theme.breakpoints.up('sm')]: {\n      flexDirection: 'row',\n    },\n  },\n  /**\n   * Styles applied to the wrapper element of each media component.\n   */\n  mediaWrap: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    '& img': {\n      maxHeight: '100%',\n      maxWidth: '100%',\n      objectFit: 'contain',\n    },\n  },\n  /**\n   * Styles applied to each of the thumbnail elements.\n   */\n  thumbnail: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n  },\n  /**\n   * Styles applied to the thumbnail component when thumbnailPosition is `left`.\n   */\n  thumbnailsLeft: {\n    [theme.breakpoints.up('sm')]: {\n      order: -1,\n    },\n  },\n  /**\n   * Styles applied to the thumbnail component when thumbnailPosition is `top`.\n   */\n  thumbnailsTop: {\n    order: -1,\n  },\n  /**\n   * Styles applied to the carousel component when the lightbox is shown.\n   */\n  lightboxCarousel: {\n    flex: 1,\n    justifyContent: 'center',\n    overflow: 'hidden',\n  },\n  /**\n   * Styles applied to the thumbnails in the lightbox.\n   */\n  lightboxThumbs: {\n    paddingBottom: theme.spacing(2),\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFMediaCarousel' })\n\n/**\n * A carousel that displays images and videos for a product.  Specify\n * images and videos via the media prop, which should be of the form:\n *\n * ```js\n *  <MediaCarousel\n *    media={[\n *      { src: 'https://domain.com/path/to/image.jpg', alt: 'Red Shirt', type: 'image' },\n *      { src: 'https://domain.com/path/to/image.mpeg', alt: 'Demonstration', type: 'video' },\n *    ]}\n *    thumbnail={{\n *      src: 'https://domain.com/path/to/thumbnail.jpg', alt: 'thumbnail'\n *    }}\n *  />\n * ```\n *\n * To display a low-res thumbnail while high res images are loading, specify a `thumbnail` prop with `src` and `alt`\n *\n * Alternatively, you can provide a `product` prop as an object with `media` and `thumbnail` values that\n * adhere to the formats described above.\n *\n * ```js\n *  <MediaCarousel\n *      media={[\n *        { src: 'https://domain.com/path/to/image.jpg', alt: 'Red Shirt', type: 'image' },\n *        { src: 'https://domain.com/path/to/image.mpeg', alt: 'Demonstration', type: 'video' },\n *      ],\n *      thumbnail: {\n *        src: 'https://domain.com/path/to/thumbnail.jpg', alt: 'thumbnail'\n *      }\n *    }]}\n *  />\n * ```\n */\nfunction MediaCarousel(props) {\n  let {\n    thumbnails,\n    thumbnail,\n    thumbsClassName,\n    thumbnailPosition,\n    magnifyHintClassName,\n    videoProps,\n    imageProps,\n    lightboxProps,\n    lightboxClassName,\n    classes,\n    media,\n    magnifyProps,\n    id,\n    CarouselComponent,\n    ImageComponent,\n    MediaComponent,\n    CarouselThumbnailsComponent,\n    ...others\n  } = props\n\n  const [imagesLoaded, setImagesLoaded] = useState(false)\n  const styles = useStyles({ classes })\n  const ref = useRef(null)\n  const [over, setOver] = useState(false)\n  const [selected, setSelected] = useState(0)\n  const [video, setVideo] = useState(false)\n  const [lightboxActive, setLightboxActive] = useState()\n  const theme = useTheme()\n  const isSmall = useMediaQuery(theme.breakpoints.down('xs'))\n  const isTouchScreen = useMediaQuery('(hover:none)')\n  const isThumbsSide = ['right', 'left'].includes(thumbnailPosition)\n\n  useEffect(() => {\n    // Reset selection index when media changes\n    setSelected(0)\n  }, [media])\n\n  useEffect(() => {\n    if (media && media.full && media.full[selected] && media.full[selected].type === 'video') {\n      setVideo(true)\n    } else {\n      setVideo(false)\n    }\n  }, [selected])\n\n  const timeout = useRef(null)\n\n  const handleMouseEnter = useCallback(() => {\n    timeout.current = window.setTimeout(() => {\n      setOver(true)\n      timeout.current = null\n    }, 250)\n  }, [])\n\n  const handleMouseLeave = useCallback(() => {\n    setOver(false)\n\n    if (timeout.current) {\n      window.clearTimeout(timeout.current)\n    }\n  }, [])\n\n  const onFullSizeImagesLoaded = useCallback(() => {\n    setImagesLoaded(true)\n  }, [])\n\n  const onClickCarousel = useCallback(evt => {\n    if (!evt.defaultPrevented && !video) {\n      setLightboxActive(true)\n    }\n  })\n\n  useEffect(() => {\n    if (!ref.current || imagesLoaded || !thumbnail) return\n    const firstImage = ref.current.querySelector('img')\n    if (firstImage && firstImage.id !== THUMBNAIL_IMAGE_ID) {\n      firstImage.addEventListener('load', onFullSizeImagesLoaded)\n      return () => firstImage.removeEventListener('load', onFullSizeImagesLoaded)\n    }\n  }, [media, imagesLoaded, thumbnail])\n\n  const belowAdornments = []\n\n  if (thumbnail && !imagesLoaded) {\n    belowAdornments.push(\n      <ImageComponent\n        id={THUMBNAIL_IMAGE_ID}\n        key=\"thumbnail\"\n        className={styles.thumbnail}\n        fill\n        {...thumbnail}\n      />,\n    )\n  }\n\n  if (media && media.full && media.full.some(item => item.magnify)) {\n    // we use the media's magnify.width prop to test if the image is larger than the screen size, and\n    // hide the magnify hint if so. this is a magic large number just used to ensure that the hint is\n    // shown if the width property is not defined for the given media\n    const MAX_WIDTH = 10000\n    let showHint = true\n    if (lightboxActive) {\n      const { innerWidth } = window\n      const mediaWidth = get(media.full[selected], 'magnify.width', MAX_WIDTH)\n      if (mediaWidth <= innerWidth) {\n        showHint = false\n      }\n    }\n    if (showHint && !video) {\n      belowAdornments.push(\n        <MagnifyHint\n          key=\"magnify-hint\"\n          over={over}\n          disableExpand={lightboxActive}\n          className={magnifyHintClassName}\n        />,\n      )\n    }\n  }\n\n  if (lightboxActive) {\n    Object.assign(others, {\n      autoplay: false,\n      className: clsx(\n        others.className,\n        styles.lightboxCarousel,\n        lightboxActive && lightboxClassName,\n      ),\n      height: isSmall ? '100%' : null,\n      slideStyle: { ...(others.slideStyle || {}), display: 'flex', justifyContent: 'center' },\n    })\n  }\n\n  const handleLightboxClose = useCallback(() => {\n    setLightboxActive(false)\n  }, [])\n\n  const body = (\n    <div\n      className={clsx(styles.root, {\n        [styles.rootSideThumbs]: !lightboxActive && isThumbsSide,\n      })}\n    >\n      <CarouselComponent\n        id={id}\n        ref={ref}\n        belowAdornments={belowAdornments}\n        classes={classes}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        onClick={onClickCarousel}\n        selected={selected}\n        setSelected={setSelected}\n        height={'100%'}\n        {...others}\n      >\n        {get(media, 'full', []).map((item, i) => {\n          const magnifySrc = get(item, 'magnify.src', item.src)\n\n          return (\n            <MediaComponent\n              key={i}\n              magnifyProps={magnifyProps}\n              {...item}\n              src={lightboxActive ? magnifySrc : item.src}\n              imageProps={\n                lightboxActive\n                  ? {\n                      fill: false,\n                      contain: true,\n                      src: magnifySrc,\n                    }\n                  : imageProps\n              }\n              videoProps={videoProps}\n            />\n          )\n        })}\n      </CarouselComponent>\n      {thumbnails && media && (\n        <CarouselThumbnailsComponent\n          className={clsx(\n            thumbsClassName,\n            lightboxActive && styles.lightboxThumbs,\n            !lightboxActive && thumbnailPosition === 'left' && styles.thumbnailsLeft,\n            !lightboxActive && thumbnailPosition === 'top' && styles.thumbnailsTop,\n          )}\n          bind={`${id}.index`}\n          carouselId={id}\n          selected={selected}\n          setSelected={setSelected}\n          thumbnails={media.thumbnails}\n          thumbnailPosition={lightboxActive ? 'bottom' : thumbnailPosition}\n        />\n      )}\n    </div>\n  )\n\n  return (\n    <>\n      {body}\n      <Lightbox {...lightboxProps} open={!!lightboxActive} onClose={handleLightboxClose}>\n        {body}\n      </Lightbox>\n    </>\n  )\n}\n\nMediaCarousel.propTypes = {\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the carousel will have thumbnails below it.\n   */\n  thumbnails: PropTypes.bool,\n  /**\n   * Data for an image to be used for a thumbnail when the images are not yet loaded.\n   */\n  thumbnail: PropTypes.shape({\n    src: PropTypes.string,\n    alt: PropTypes.string,\n  }),\n  /**\n   * An optional `className` to use for the thumbnails component.\n   */\n  thumbsClassName: PropTypes.string,\n  /**\n   * An optional `className` to use for the carousel component when the lightbox is open.\n   */\n  lightboxClassName: PropTypes.string,\n  /**\n   * Position of thumbnails, relative to the main carousel image. For small screens, the position\n   * will revert to `top` when this value is set to `left` or `right`.\n   *\n   * This property will have no effect in Amp.\n   */\n  thumbnailPosition: PropTypes.oneOf(['bottom', 'top', 'left', 'right']),\n  /**\n   * A component type to use for the thumbnails.\n   */\n  CarouselThumbnailsComponent: PropTypes.elementType,\n\n  /**\n   * An optional `className` to use for the [`MagnifyHint`](/apiReference/carousel/MagnifyHint) component.\n   */\n  magnifyHintClassName: PropTypes.string,\n  /**\n   * Props passed through to each [`Media`](/apiReference/carousel/Media)'s video component.\n   */\n  videoProps: PropTypes.object,\n  /**\n   * Props passed through to each [`Media`](/apiReference/carousel/Media)'s\n   * [`imageProps`](/apiReference/carousel/Media#prop-imageProps).\n   */\n  imageProps: PropTypes.object,\n  /**\n   * Data for all the media objects to show in the carousel.\n   */\n  media: PropTypes.shape({\n    full: PropTypes.arrayOf(PropTypes.object),\n    thumbnails: PropTypes.arrayOf(PropTypes.object),\n  }),\n  /**\n   * Props passed through to each [`Media`](/apiReference/carousel/Media)'s\n   * [`magnifyProps`](/apiReference/carousel/Media#prop-magnifyProps).\n   */\n  magnifyProps: PropTypes.object,\n  /**\n   * A component type to use for each media object in the carousel.\n   */\n  MediaComponent: PropTypes.elementType,\n\n  /**\n   * Props passed through to the [`Lightbox`](/apiReference/carousel/Lightbox).\n   */\n  lightboxProps: PropTypes.object,\n\n  /**\n   * An `id` attribute to use for the carousel's root element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * A component type to use for the main carousel component.\n   */\n  CarouselComponent: PropTypes.elementType,\n\n  /**\n   * The component type to use to display images.\n   */\n  ImageComponent: PropTypes.elementType,\n}\n\nMediaCarousel.defaultProps = {\n  lightboxProps: {},\n  magnifyProps: {},\n  thumbnails: true,\n  thumbnailPosition: 'bottom',\n  MediaComponent: Media,\n  ImageComponent: Image,\n  CarouselComponent: Carousel,\n  CarouselThumbnailsComponent: CarouselThumbnails,\n  videoProps: {\n    controls: true,\n    autoPlay: false,\n  },\n}\n\nexport default MediaCarousel\n"],"file":"MediaCarousel.js"}