"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Box;
exports.Hbox = Hbox;
exports.Vbox = Vbox;
exports.styles = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _clsx2 = _interopRequireDefault(require("clsx"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@material-ui/core/styles");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * A flex container.  All additional props are spread to the style of the underlying div.
 */
var styles = function styles(theme) {
  return {
    /**
     * Styles applied to the root element.
     */
    root: {
      display: 'flex'
    },

    /**
     * Styles applied to the root element if [`split`](#prop-split) is `true`.
     */
    split: {
      justifyContent: 'space-between',
      alignItems: 'center'
    }
  };
};

exports.styles = styles;
var useStyles = (0, _styles.makeStyles)(styles, 'RSFBox');

function Box(_ref) {
  var className = _ref.className,
      classes = _ref.classes,
      _ref$split = _ref.split,
      split = _ref$split === void 0 ? false : _ref$split,
      children = _ref.children,
      style = _ref.style,
      align = _ref.align,
      justify = _ref.justify,
      other = (0, _objectWithoutProperties2["default"])(_ref, ["className", "classes", "split", "children", "style", "align", "justify"]);
  classes = useStyles({
    classes: classes
  });
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: (0, _clsx2["default"])(classes.root, className, (0, _defineProperty2["default"])({}, classes.split, split)),
    style: _objectSpread(_objectSpread({
      alignItems: align,
      justifyContent: justify
    }, other), style)
  }, children);
}

Box.propTypes = {
  /**
   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.
   */
  classes: _propTypes["default"].object,

  /**
   * If `true`, split items on opposite sides of the box by applying justify-content: 'space-between'
   */
  split: _propTypes["default"].bool,

  /**
   * CSS value for align-items
   */
  align: _propTypes["default"].oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),

  /**
   * CSS value for justify-content
   */
  justify: _propTypes["default"].oneOf(['flex-start', 'flex-end', 'center', 'space-around', 'space-between', 'initial', 'inherit', 'stretch', 'baseline'])
};
Box.defaultProps = {
  align: 'center',
  justify: 'flex-start'
};
/**
 * A flex container with horizontal layout. All additional props are spread to the style
 * of the underlying div.
 */

function Hbox(props) {
  props = _objectSpread(_objectSpread({}, props), {}, {
    flexDirection: 'row'
  });
  return /*#__PURE__*/_react["default"].createElement(Box, props);
}

Hbox.propTypes = {
  /**
   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.
   */
  classes: _propTypes["default"].object,

  /**
   * True to split items on opposite sides of the box by applying `justify-content: 'space-between'`.
   */
  split: _propTypes["default"].bool,

  /**
   * CSS value for `align-items` style.
   */
  align: _propTypes["default"].oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),

  /**
   * CSS value for `justify-content` style
   */
  justify: _propTypes["default"].oneOf(['flex-start', 'flex-end', 'center', 'space-around', 'space-between', 'initial', 'inherit', 'stretch', 'baseline'])
};
Hbox.defaultProps = {
  align: 'center',
  justify: 'flex-start'
};
/**
 * A flex container with vertical layout. All additional props are spread to
 * the style of the underlying div.
 */

function Vbox(props) {
  props = _objectSpread(_objectSpread({}, props), {}, {
    flexDirection: 'column'
  });
  return /*#__PURE__*/_react["default"].createElement(Box, props);
}

Vbox.propTypes = {
  /**
   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.
   */
  classes: _propTypes["default"].object,

  /**
   * CSS value for `align-items` style.
   */
  align: _propTypes["default"].oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),

  /**
   * CSS value for `justify-content` style.
   */
  justify: _propTypes["default"].oneOf(['flex-start', 'flex-end', 'center', 'space-around', 'space-between', 'initial', 'inherit', 'stretch', 'baseline'])
};
Vbox.defaultProps = {
  align: 'center',
  justify: 'flex-start'
};
//# sourceMappingURL=Box.js.map