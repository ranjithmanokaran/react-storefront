"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = BackToTop;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _throttle = _interopRequireDefault(require("lodash/throttle"));

var _ArrowUpward = _interopRequireDefault(require("@material-ui/icons/ArrowUpward"));

var _Fab = _interopRequireDefault(require("@material-ui/core/Fab"));

var _Fade = _interopRequireDefault(require("@material-ui/core/Fade"));

var _styles = require("@material-ui/core/styles");

var styles = function styles() {
  return {
    /**
     * Styles applied to the root element.
     */
    root: {
      zIndex: 1,
      position: 'fixed',
      bottom: 24,
      right: 16
    },

    /**
     * Styles applied to the floating action button element.
     */
    fab: {
      background: 'rgba(0,0,0,.85)',
      '&:hover': {
        background: 'rgb(0,0,0)'
      }
    },

    /**
     * Styles applied to the icon element.
     */
    icon: {
      color: 'white'
    }
  };
};

var useStyles = (0, _styles.makeStyles)(styles, {
  name: 'RSFBackToTop'
});
/**
 * A floating action button that appears when the user scrolls down,
 * which scrolls back to the top of the page when clicked.
 */

function BackToTop(_ref) {
  var Icon = _ref.Icon,
      showUnderY = _ref.showUnderY,
      instantBehaviorUnderY = _ref.instantBehaviorUnderY,
      classes = _ref.classes,
      fadeTime = _ref.fadeTime,
      size = _ref.size;

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      visible = _useState2[0],
      setVisible = _useState2[1];

  var el = (0, _react.useRef)();
  classes = useStyles({
    classes: classes
  });
  (0, _react.useEffect)(function () {
    var onScroll = (0, _throttle["default"])(function () {
      setVisible(getScrollY() > showUnderY && el.current.parentElement && el.current.parentElement.offsetParent != null);
    }, 200);
    window.addEventListener('scroll', onScroll, {
      passive: true
    });
    return function () {
      return window.removeEventListener('scroll', onScroll);
    };
  }, []);

  var scrollToTop = function scrollToTop() {
    var behavior = getScrollY() > instantBehaviorUnderY ? 'auto' : 'smooth';
    window.scrollTo({
      top: 0,
      left: 0,
      behavior: behavior
    });
  };

  Icon = Icon || _ArrowUpward["default"];
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: classes.root,
    ref: el
  }, /*#__PURE__*/_react["default"].createElement(_Fade["default"], {
    "in": visible,
    timeout: fadeTime
  }, /*#__PURE__*/_react["default"].createElement(_Fab["default"], {
    className: classes.fab,
    size: size,
    onClick: scrollToTop,
    title: "back to top"
  }, /*#__PURE__*/_react["default"].createElement(Icon, {
    className: classes.icon
  }))));
}

BackToTop.propTypes = {
  /**
   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.
   */
  classes: _propTypes["default"].object,

  /**
   * The icon to use within the `Fab` component.
   */
  Icon: _propTypes["default"].elementType,

  /**
   * Value which controls where along the Y position the `BackToTop` component is shown.
   */
  showUnderY: _propTypes["default"].number,

  /**
   * When the scroll position is less than this value, the page will smoothly scroll back up. If
   * the scroll position is more than this value, the page will immediately scroll back up.
   */
  instantBehaviorUnderY: _propTypes["default"].number,

  /**
   * Duration of the fade in/out animation for the icon.
   */
  fadeTime: _propTypes["default"].number,

  /**
   * Controls size of component.
   */
  size: _propTypes["default"].oneOf(['small', 'medium', 'large'])
};
BackToTop.defaultProps = {
  showUnderY: 250,
  instantBehaviorUnderY: 3000,
  fadeTime: 320,
  size: 'medium'
};

function getScrollY() {
  return window.scrollY || window.pageYOffset;
}
//# sourceMappingURL=BackToTop.js.map