{"version":3,"sources":["../../src/utils/withCaching.js"],"names":["withCaching","handler","maxAgeSeconds","req","res","setHeader"],"mappings":";;;;;;;AAAA;;;;;;;;AAQe,SAASA,WAAT,CAAqBC,OAArB,EAA8BC,aAA9B,EAA6C;AAC1D,SAAO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnB,QAAIF,aAAJ,EAAmB;AACjBE,MAAAA,GAAG,CAACC,SAAJ,CAAc,oBAAd,qBAAgDH,aAAhD;AACD;;AAED,WAAOD,OAAO,CAACE,GAAD,EAAMC,GAAN,CAAd;AACD,GAND;AAOD","sourcesContent":["/**\n * Creates a cancelable event handler that will run unless the provided\n * handler calls `e.preventDefault()`.\n *\n * @param {Function} handler The original event handle supplied to the component\n * @param {Number} maxAgeSeconds The time in seconds that a result should be kept in the service worker cache.\n * @return {Function}\n */\nexport default function withCaching(handler, maxAgeSeconds) {\n  return (req, res) => {\n    if (maxAgeSeconds) {\n      res.setHeader('x-sw-cache-control', `max-age: ${maxAgeSeconds}`)\n    }\n\n    return handler(req, res)\n  }\n}\n"],"file":"withCaching.js"}