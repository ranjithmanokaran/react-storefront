{"version":3,"sources":["../../src/plp/FilterHeader.js"],"names":["styles","theme","header","borderBottom","palette","divider","breakpoints","down","padding","spacing","up","title","typography","h6","flex","textTransform","fontWeight","clear","caption","display","border","marginLeft","textDecoration","backgroundColor","useStyles","name","FilterHeader","props","clearLinkText","hideClearLink","submitOnChange","classes","SearchResultsContext","actions","filters","pageData","length","clearFilters","Object","values","propTypes","PropTypes","object","string","bool","defaultProps"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA;;AAAA,SAAK;AACvB;;;AAGAC,IAAAA,MAAM;AACJC,MAAAA,YAAY,sBAAeF,KAAK,CAACG,OAAN,CAAcC,OAA7B;AADR,iDAEHJ,KAAK,CAACK,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAFG,EAE4B;AAC9BC,MAAAA,OAAO,YAAKP,KAAK,CAACQ,OAAN,CAAc,CAAd,CAAL,gBAA2BR,KAAK,CAACQ,OAAN,CAAc,CAAd,CAA3B;AADuB,KAF5B,6CAKHR,KAAK,CAACK,WAAN,CAAkBI,EAAlB,CAAqB,IAArB,CALG,EAK0B;AAC5BF,MAAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AADmB,KAL1B,WAJiB;;AAavB;;;AAGAE,IAAAA,KAAK,yDACFV,KAAK,CAACK,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CADE,oBAEEN,KAAK,CAACW,UAAN,CAAiBC,EAFnB,6CAIFZ,KAAK,CAACK,WAAN,CAAkBI,EAAlB,CAAqB,IAArB,CAJE,EAI2B;AAC5BI,MAAAA,IAAI,EAAE,CADsB;AAE5BC,MAAAA,aAAa,EAAE,WAFa;AAG5BC,MAAAA,UAAU,EAAE;AAHgB,KAJ3B,UAhBkB;;AA0BvB;;;AAGAC,IAAAA,KAAK,kCACAhB,KAAK,CAACW,UAAN,CAAiBM,OADjB;AAEHC,MAAAA,OAAO,EAAE,OAFN;AAGHC,MAAAA,MAAM,EAAE,MAHL;AAIHZ,MAAAA,OAAO,EAAE,CAJN;AAKHa,MAAAA,UAAU,EAAE,MALT;AAMHC,MAAAA,cAAc,EAAE,WANb;AAOHC,MAAAA,eAAe,EAAE;AAPd;AA7BkB,GAAL;AAAA,CAApB;;AAwCA,IAAMC,SAAS,GAAG,wBAAWxB,MAAX,EAAmB;AAAEyB,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAlB;AAEA;;;;AAGe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,MAClChB,KADkC,GACsBgB,KADtB,CAClChB,KADkC;AAAA,MAC3BiB,aAD2B,GACsBD,KADtB,CAC3BC,aAD2B;AAAA,MACZC,aADY,GACsBF,KADtB,CACZE,aADY;AAAA,MACGC,cADH,GACsBH,KADtB,CACGG,cADH;AAE1C,MAAMC,OAAO,GAAGP,SAAS,CAACG,KAAK,CAACI,OAAP,CAAzB;;AAF0C,oBAMtC,uBAAWC,gCAAX,CANsC;AAAA,MAIxCC,OAJwC,eAIxCA,OAJwC;AAAA,MAK5BC,OAL4B,eAKxCC,QALwC,CAK5BD,OAL4B;;AAQ1C,SAAO,oBACL;AAAA,wBACE,gCAAC,SAAD;AAAM,MAAA,OAAO,EAAC,QAAd;AAAuB,MAAA,SAAS,EAAEH,OAAO,CAAC7B;AAA1C,oBACE;AAAK,MAAA,SAAS,EAAE6B,OAAO,CAACpB;AAAxB,OAAgCA,KAAhC,CADF,EAEGkB,aAAa,IAAI,CAACK,OAAlB,IAA6BA,OAAO,CAACE,MAAR,KAAmB,CAAhD,GAAoD,IAApD,gBACC;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMH,OAAO,CAACI,YAAR,CAAqBP,cAArB,CAAN;AAAA,OAAjB;AAA6D,MAAA,SAAS,EAAEC,OAAO,CAACd;AAAhF,OACGW,aADH,CAHJ,CADF;AAAA,GADK,GAWJM,OAXI,6CAWQI,MAAM,CAACC,MAAP,CAAcZ,KAAd,CAXR,GAAP;AAaD;;AAEDD,YAAY,CAACc,SAAb,GAAyB;AACvB;;;AAGAT,EAAAA,OAAO,EAAEU,sBAAUC,MAJI;;AAKvB;;;AAGA/B,EAAAA,KAAK,EAAE8B,sBAAUE,MARM;;AASvB;;;AAGAb,EAAAA,cAAc,EAAEW,sBAAUG,IAZH;;AAavB;;;AAGAf,EAAAA,aAAa,EAAEY,sBAAUG,IAhBF;;AAiBvB;;;AAGAhB,EAAAA,aAAa,EAAEa,sBAAUE;AApBF,CAAzB;AAuBAjB,YAAY,CAACmB,YAAb,GAA4B;AAC1BlC,EAAAA,KAAK,EAAE,WADmB;AAE1BiB,EAAAA,aAAa,EAAE;AAFW,CAA5B","sourcesContent":["import React, { useMemo, useContext } from 'react'\nimport { Hbox } from '../Box'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport SearchResultsContext from './SearchResultsContext'\n\nconst styles = theme => ({\n  /**\n   * Styles applied to the root element.\n   */\n  header: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    [theme.breakpoints.down('xs')]: {\n      padding: `${theme.spacing(2)}px ${theme.spacing(4)}px`,\n    },\n    [theme.breakpoints.up('sm')]: {\n      padding: theme.spacing(1, 2, 2, 2),\n    },\n  },\n  /**\n   * Styles applied to the title element.\n   */\n  title: {\n    [theme.breakpoints.down('xs')]: {\n      ...theme.typography.h6,\n    },\n    [theme.breakpoints.up('sm')]: {\n      flex: 1,\n      textTransform: 'uppercase',\n      fontWeight: 'bold',\n    },\n  },\n  /**\n   * Styles applied to the clear link.\n   */\n  clear: {\n    ...theme.typography.caption,\n    display: 'block',\n    border: 'none',\n    padding: 0,\n    marginLeft: '10px',\n    textDecoration: 'underline',\n    backgroundColor: 'transparent',\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFFilterHeader' })\n\n/**\n * A header to be placed at the top of the [`Filter`](/apiReference/plp/Filter).\n */\nexport default function FilterHeader(props) {\n  const { title, clearLinkText, hideClearLink, submitOnChange } = props\n  const classes = useStyles(props.classes)\n  const {\n    actions,\n    pageData: { filters },\n  } = useContext(SearchResultsContext)\n\n  return useMemo(\n    () => (\n      <Hbox justify=\"center\" className={classes.header}>\n        <div className={classes.title}>{title}</div>\n        {hideClearLink || !filters || filters.length === 0 ? null : (\n          <button onClick={() => actions.clearFilters(submitOnChange)} className={classes.clear}>\n            {clearLinkText}\n          </button>\n        )}\n      </Hbox>\n    ),\n    [filters, ...Object.values(props)],\n  )\n}\n\nFilterHeader.propTypes = {\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * An optional title to display at the top of the component.\n   */\n  title: PropTypes.string,\n  /**\n   * Set to `true` to refresh the results when the user toggles a filter.\n   */\n  submitOnChange: PropTypes.bool,\n  /**\n   * If `true`, the clear link is hidden.\n   */\n  hideClearLink: PropTypes.bool,\n  /**\n   * Text to use for the clear link.\n   */\n  clearLinkText: PropTypes.string,\n}\n\nFilterHeader.defaultProps = {\n  title: 'Filter By',\n  clearLinkText: 'clear all',\n}\n"],"file":"FilterHeader.js"}