{"version":3,"sources":["../../src/plp/Sort.js"],"names":["styles","theme","container","padding","option","boxShadow","width","margin","useStyles","name","Sort","variant","classes","onSelect","SearchResultsContext","pageData","sort","sortOptions","setSort","actions","handleClick","e","defaultPrevented","renderButtons","map","i","code","renderMenu","propTypes","PropTypes","object","func","oneOf","defaultProps","Function","prototype","props","ref"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef, useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, MenuItem } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport SearchResultsContext from './SearchResultsContext'\n\nexport const styles = theme => ({\n  /**\n   * Styles applied to the root container if [`variant`](#prop-variant) is `'buttons'`.\n   */\n  container: {\n    padding: '15px 0 0 15px',\n  },\n  /**\n   * Styles applied to each option if [`variant`](#prop-variant) is `'buttons'`.\n   */\n  option: {\n    boxShadow: 'none',\n    width: 'calc(50% - 15px)',\n    margin: '0 15px 15px 0',\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFSort' })\n\n/**\n * UI for sorting a list of products.  This component can be used on its own, or you can use\n * [`SortButton`](/apiReference/plp/SortButton) to automatically display this component in a drawer\n * that slides up from the bottom of the viewport.\n */\nfunction Sort({ variant, classes, onSelect }) {\n  classes = useStyles({ classes })\n\n  const {\n    pageData: { sort, sortOptions },\n    actions: { setSort },\n  } = useContext(SearchResultsContext)\n\n  const handleClick = (option, e) => {\n    onSelect(option, e)\n\n    if (!e.defaultPrevented) {\n      setSort(option)\n    }\n  }\n\n  const renderButtons = () => (\n    <div className={classes.container}>\n      {sortOptions &&\n        sortOptions.map((option, i) => (\n          <Button\n            className={classes.option}\n            color={sort === option.code ? 'primary' : 'default'}\n            variant=\"contained\"\n            onClick={e => handleClick(option, e)}\n            key={i}\n          >\n            {option.name}\n          </Button>\n        ))}\n    </div>\n  )\n\n  const renderMenu = () => (\n    <>\n      {sortOptions &&\n        sortOptions.map((option, i) => (\n          <MenuItem key={i} onClick={e => handleClick(option, e)}>\n            {option.name}\n          </MenuItem>\n        ))}\n    </>\n  )\n\n  if (variant === 'buttons') {\n    return renderButtons()\n  } else if (variant === 'menu-items') {\n    return renderMenu()\n  } else {\n    return null\n  }\n}\n\nSort.propTypes = {\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * A function to call when a sort option is selected.  The option and event are passed.\n   * The default behavior can be prevented by called `preventDefault()` on the passed in event.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Controls how sort options are displayed.\n   */\n  variant: PropTypes.oneOf(['menu-items', 'buttons']),\n}\n\nSort.defaultProps = {\n  onSelect: Function.prototype,\n  variant: 'buttons',\n}\n\nexport default memo(forwardRef((props, ref) => <Sort {...props} />))\n"],"file":"Sort.js"}