"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = FilterHeader;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _Box = require("../Box");

var _styles = require("@material-ui/core/styles");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _SearchResultsContext = _interopRequireDefault(require("./SearchResultsContext"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var styles = function styles(theme) {
  var _header, _title;

  return {
    /**
     * Styles applied to the root element.
     */
    header: (_header = {
      borderBottom: "1px solid ".concat(theme.palette.divider)
    }, (0, _defineProperty2["default"])(_header, theme.breakpoints.down('xs'), {
      padding: "".concat(theme.spacing(2), "px ").concat(theme.spacing(4), "px")
    }), (0, _defineProperty2["default"])(_header, theme.breakpoints.up('sm'), {
      padding: theme.spacing(1, 2, 2, 2)
    }), _header),

    /**
     * Styles applied to the title element.
     */
    title: (_title = {}, (0, _defineProperty2["default"])(_title, theme.breakpoints.down('xs'), _objectSpread({}, theme.typography.h6)), (0, _defineProperty2["default"])(_title, theme.breakpoints.up('sm'), {
      flex: 1,
      textTransform: 'uppercase',
      fontWeight: 'bold'
    }), _title),

    /**
     * Styles applied to the clear link.
     */
    clear: _objectSpread(_objectSpread({}, theme.typography.caption), {}, {
      display: 'block',
      border: 'none',
      padding: 0,
      marginLeft: '10px',
      textDecoration: 'underline',
      backgroundColor: 'transparent'
    })
  };
};

var useStyles = (0, _styles.makeStyles)(styles, {
  name: 'RSFFilterHeader'
});
/**
 * A header to be placed at the top of the [`Filter`](/apiReference/plp/Filter).
 */

function FilterHeader(props) {
  var title = props.title,
      clearLinkText = props.clearLinkText,
      hideClearLink = props.hideClearLink,
      submitOnChange = props.submitOnChange;
  var classes = useStyles(props.classes);

  var _useContext = (0, _react.useContext)(_SearchResultsContext["default"]),
      actions = _useContext.actions,
      filters = _useContext.pageData.filters;

  return (0, _react.useMemo)(function () {
    return /*#__PURE__*/_react["default"].createElement(_Box.Hbox, {
      justify: "center",
      className: classes.header
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: classes.title
    }, title), hideClearLink || !filters || filters.length === 0 ? null : /*#__PURE__*/_react["default"].createElement("button", {
      onClick: function onClick() {
        return actions.clearFilters(submitOnChange);
      },
      className: classes.clear
    }, clearLinkText));
  }, [filters].concat((0, _toConsumableArray2["default"])(Object.values(props))));
}

FilterHeader.propTypes = {
  /**
   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.
   */
  classes: _propTypes["default"].object,

  /**
   * An optional title to display at the top of the component.
   */
  title: _propTypes["default"].string,

  /**
   * Set to `true` to refresh the results when the user toggles a filter.
   */
  submitOnChange: _propTypes["default"].bool,

  /**
   * If `true`, the clear link is hidden.
   */
  hideClearLink: _propTypes["default"].bool,

  /**
   * Text to use for the clear link.
   */
  clearLinkText: _propTypes["default"].string
};
FilterHeader.defaultProps = {
  title: 'Filter By',
  clearLinkText: 'clear all'
};
//# sourceMappingURL=FilterHeader.js.map