"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.styles = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _ActionButton = _interopRequireDefault(require("../ActionButton"));

var _SearchResultsContext = _interopRequireDefault(require("./SearchResultsContext"));

var _Filter = _interopRequireDefault(require("./Filter"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Drawer = _interopRequireDefault(require("../drawer/Drawer"));

var _styles = require("@material-ui/core/styles");

var _router = require("next/router");

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var styles = function styles(theme) {
  return {
    /**
     * Styles applied to the drawer element.
     */
    drawer: {
      height: '75vh'
    }
  };
};

exports.styles = styles;
var useStyles = (0, _styles.makeStyles)(styles, {
  name: 'RSFFilterButton'
});
/**
 * A button that when clicked, opens a drawer containing the `Filter` view. Current filters
 * are displayed in the button text.
 */

function FilterButton(_ref) {
  var classes = _ref.classes,
      title = _ref.title,
      drawerProps = _ref.drawerProps,
      onClick = _ref.onClick,
      href = _ref.href,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["classes", "title", "drawerProps", "onClick", "href"]);
  classes = useStyles({
    classes: classes
  });

  var _useContext = (0, _react.useContext)(_SearchResultsContext["default"]),
      _useContext$pageData = _useContext.pageData,
      filters = _useContext$pageData.filters,
      facets = _useContext$pageData.facets,
      actions = _useContext.actions;

  var openFilter = (0, _router.useRouter)().query.openFilter === '1';

  var _useState = (0, _react.useState)({
    open: openFilter,
    mountDrawer: openFilter
  }),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];

  var open = state.open,
      mountDrawer = state.mountDrawer;

  var _useStyles = useStyles(classes),
      clear = _useStyles.clear,
      clearDisabled = _useStyles.clearDisabled,
      drawer = _useStyles.drawer,
      buttonClasses = (0, _objectWithoutProperties2["default"])(_useStyles, ["clear", "clearDisabled", "drawer"]);

  var toggleOpen = function toggleOpen(open) {
    setState(_objectSpread(_objectSpread({}, state), {}, {
      open: open,
      mountDrawer: mountDrawer || true
    }));
  };

  var handleClick = function handleClick(e) {
    if (onClick) {
      onClick(e);
    }

    if (!e.defaultPrevented) {
      toggleOpen(true);
    }
  };

  var handleViewResultsClick = (0, _react.useCallback)(function () {
    toggleOpen(false);
    actions.applyFilters();
  }, [actions]);

  var getFilterList = function getFilterList() {
    if (!filters || !facets || filters.length === 0) return null;
    if (filters.length > 1) return "".concat(filters.length, " selected");
    var selected = filters[0];

    var _iterator = _createForOfIteratorHelper(facets),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var group = _step.value;

        var _iterator2 = _createForOfIteratorHelper(group.options),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var option = _step2.value;

            if (selected === option.code) {
              return option.name;
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return null;
  };

  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_ActionButton["default"], (0, _extends2["default"])({
    label: title,
    href: href,
    value: getFilterList(),
    classes: buttonClasses,
    onClick: handleClick
  }, props)), !href && /*#__PURE__*/_react["default"].createElement(_Drawer["default"], {
    classes: {
      paper: classes.drawer
    },
    anchor: "bottom",
    open: open,
    onClose: toggleOpen.bind(null, false),
    ModalProps: {
      keepMounted: true
    }
  }, mountDrawer && /*#__PURE__*/_react["default"].createElement(_Filter["default"], (0, _extends2["default"])({
    onViewResultsClick: handleViewResultsClick
  }, drawerProps))));
}

FilterButton.propTypes = {
  /**
   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.
   */
  classes: _propTypes["default"].object,

  /**
   * Props for the underlying `Filter` component.
   */
  drawerProps: _propTypes["default"].object,

  /**
   * The label for the button and the drawer header.
   */
  title: _propTypes["default"].string,

  /**
   * When specified, clicking the button will navigate to the specified URL with a full page reload.
   */
  href: _propTypes["default"].string,

  /**
   * A function that will be called when the button is clicked.
   */
  onClick: _propTypes["default"].func
};
FilterButton.defaultProps = {
  title: 'Filter',
  drawerProps: {}
};

var _default = /*#__PURE__*/(0, _react.memo)(FilterButton);

exports["default"] = _default;
//# sourceMappingURL=FilterButton.js.map