"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = FilterFooter;
exports.styles = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _styles = require("@material-ui/core/styles");

var _Button = _interopRequireDefault(require("@material-ui/core/Button"));

var _Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

var _Box = require("../Box");

var _SearchResultsContext = _interopRequireDefault(require("./SearchResultsContext"));

var styles = function styles(theme) {
  return {
    /**
     * Styles applied to the root element.
     */
    root: {
      backgroundColor: theme.palette.secondary.main,
      padding: '12px 20px',
      color: 'white',
      justifyContent: 'space-between',
      alignItems: 'center'
    },

    /**
     * Styles applied to the "# items found" label.
     */
    itemsFound: {
      color: theme.palette.secondary.contrastText
    }
  };
};

exports.styles = styles;
var useStyles = (0, _styles.makeStyles)(styles, {
  name: 'RSFFilterFooter'
});
/**
 * A footer to be placed at the bottom of the [`Filter`](/apiReference/plp/Filter).
 */

function FilterFooter(props) {
  var classes = props.classes,
      submitOnChange = props.submitOnChange,
      onViewResultsClick = props.onViewResultsClick;
  classes = useStyles({
    classes: classes
  });

  var _useContext = (0, _react.useContext)(_SearchResultsContext["default"]),
      _useContext$pageData = _useContext.pageData,
      filters = _useContext$pageData.filters,
      filtersChanged = _useContext$pageData.filtersChanged;

  if (!filters || !filtersChanged || submitOnChange) return null;
  return /*#__PURE__*/_react["default"].createElement(_Box.Hbox, {
    className: classes.root,
    justify: "space-between"
  }, /*#__PURE__*/_react["default"].createElement(_Typography["default"], {
    variant: "subtitle1",
    className: classes.itemsFound
  }, filters.length || 'No', " filter", filters.length === 1 ? '' : 's', " selected"), /*#__PURE__*/_react["default"].createElement(_Button["default"], {
    variant: "contained",
    size: "large",
    color: "default",
    onClick: onViewResultsClick
  }, "View Results"));
}

FilterFooter.propTypes = {
  /**
   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.
   */
  classes: _propTypes["default"].object,

  /**
   * Set to `true` if the filters will be submitted when changed. In this case, the footer will not be shown.
   */
  submitOnChange: _propTypes["default"].bool,

  /**
   * Function to call when the "View Results" button is clicked.
   */
  onViewResultsClick: _propTypes["default"].func
};
//# sourceMappingURL=FilterFooter.js.map