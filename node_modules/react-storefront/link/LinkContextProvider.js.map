{"version":3,"sources":["../../src/link/LinkContextProvider.js"],"names":["LinkContextProvider","children","linkPageData","onRouteChangeComplete","current","undefined","Router","events","on","off"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;AAGe,SAASA,mBAAT,OAA2C;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACxD,MAAMC,YAAY,GAAG,mBAAO,IAAP,CAArB;AAEA,wBAAU,YAAM;AACd,QAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,aAAOD,YAAY,CAACE,OAAb,GAAuBC,SAA9B;AAAA,KAA9B;;AACAC,uBAAOC,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCL,qBAAxC;;AAEA,WAAO,YAAM;AACXG,yBAAOC,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCN,qBAAzC;AACD,KAFD;AAGD,GAPD,EAOG,EAPH;AASA,sBAAO,gCAAC,uBAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAED;AAA7B,KAA4CD,QAA5C,CAAP;AACD","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport LinkContext from './LinkContext'\nimport Router from 'next/router'\n\n/**\n * Provides a context that allows links to pass data directly to pages via the `pageData` prop.\n */\nexport default function LinkContextProvider({ children }) {\n  const linkPageData = useRef(null)\n\n  useEffect(() => {\n    const onRouteChangeComplete = () => (linkPageData.current = undefined)\n    Router.events.on('routeChangeComplete', onRouteChangeComplete)\n\n    return () => {\n      Router.events.off('routeChangeComplete', onRouteChangeComplete)\n    }\n  }, [])\n\n  return <LinkContext.Provider value={linkPageData}>{children}</LinkContext.Provider>\n}\n"],"file":"LinkContextProvider.js"}