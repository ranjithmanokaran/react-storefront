{"version":3,"sources":["../src/LazyHydrate.js"],"names":["fuiEvents","touchEvents","eventOptions","once","capture","passive","registries","getRegistryCount","length","window","__lazyHydrateNavigated","LazyStyles","styles","map","registry","applyScope","sheet","rules","index","rule","type","selectorText","id","__html","toString","LazyStylesProvider","children","generateClassName","seed","SheetsRegistry","push","Map","Router","events","on","LazyHydrateInstance","className","ssrOnly","props","isHydrated","hydrated","childRef","setHydrated","hydrate","removeSSRStyles","stylesheet","document","getElementById","remove","current","visible","disconnect","handler","clearEventListeners","forEach","removeEventListener","onUnmount","addEventListener","display","LazyHydrate","defaultProps","propTypes","PropTypes","string","isRequired","bool","oneOf"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport useIntersectionObserver from './hooks/useIntersectionObserver'\nimport { StylesProvider, createGenerateClassName } from '@material-ui/core/styles'\nimport { SheetsRegistry } from 'jss'\nimport Router from 'next/router'\nimport isBrowser from './utils/isBrowser'\nimport minifyStyles from './utils/minifyStyles'\nimport { useAmp } from 'next/amp'\n\nconst fuiEvents = ['mouseover', 'touchstart', 'scroll']\nconst touchEvents = ['touchstart', 'mouseover']\nconst eventOptions = { once: true, capture: true, passive: true }\n\nlet registries = []\n\n// Only used for testing\nexport function getRegistryCount() {\n  return registries.length\n}\n\nif (isBrowser()) {\n  window.__lazyHydrateNavigated = false\n}\n\n/*\n  This component renders the server side rendered stylesheets for the\n  lazy hydrated components. Once they become hydrated, these stylesheets\n  will be removed.\n*/\nexport function LazyStyles() {\n  /* istanbul ignore next */\n  if (useAmp()) return null\n\n  let styles = null\n  try {\n    styles = (\n      <>\n        {registries.map(registry => {\n          function applyScope(sheet) {\n            for (let rule of sheet.rules.index) {\n              if (rule.type === 'conditional') {\n                applyScope(rule)\n              } else {\n                rule.selectorText = `#${registry.id} ${rule.selectorText}`\n              }\n            }\n          }\n\n          // Apply these styles only to the wrapped component\n          for (let sheet of registry.registry) {\n            applyScope(sheet)\n          }\n\n          return (\n            <style\n              key={registry.id}\n              id={registry.id}\n              dangerouslySetInnerHTML={{ __html: minifyStyles(registry.toString()) }}\n            />\n          )\n        })}\n      </>\n    )\n  } finally {\n    // Clear registeries so we do not leak memory\n    registries = []\n  }\n  return styles\n}\n\nfunction LazyStylesProvider({ id, children }) {\n  const generateClassName = createGenerateClassName({\n    seed: id,\n  })\n  const registry = new SheetsRegistry()\n  registry.id = id\n  registries.push(registry)\n  return (\n    <StylesProvider\n      sheetsManager={new Map()}\n      serverGenerateClassName={generateClassName}\n      sheetsRegistry={registry}\n    >\n      {children}\n    </StylesProvider>\n  )\n}\n\nRouter.events.on('routeChangeStart', () => {\n  window.__lazyHydrateNavigated = true\n})\n\nfunction LazyHydrateInstance({ id, className, ssrOnly, children, on, ...props }) {\n  function isHydrated() {\n    if (isBrowser()) {\n      // If rendering after client side navigation\n      if (window.__lazyHydrateNavigated) return true\n      // return true\n      if (ssrOnly) return false\n      return !!props.hydrated\n    } else {\n      return true\n    }\n  }\n\n  const childRef = useRef(null)\n  const [hydrated, setHydrated] = useState(isHydrated())\n\n  function hydrate() {\n    if (!hydrated) {\n      setHydrated(true)\n      removeSSRStyles()\n    }\n  }\n\n  function removeSSRStyles() {\n    // Remove the server side generated stylesheet\n    const stylesheet = window.document.getElementById(id)\n\n    if (stylesheet) {\n      stylesheet.remove()\n    }\n  }\n\n  // hydrate if the hydrated prop is changed to true\n  useEffect(() => {\n    if (props.hydrated) {\n      hydrate()\n    }\n  }, [props.hydrated, ssrOnly])\n\n  if (on === 'visible') {\n    useIntersectionObserver(\n      // As root node does not have any box model, it cannot intersect.\n      () => childRef.current.children[0],\n      (visible, disconnect) => {\n        if (visible) {\n          hydrate()\n          disconnect()\n        }\n      },\n      [],\n      // Fallback to eager hydration\n      /* istanbul ignore next */\n      () => hydrate(),\n    )\n  }\n\n  useEffect(() => {\n    if (hydrated) return\n\n    const handler = () => {\n      hydrate()\n      clearEventListeners()\n    }\n\n    const clearEventListeners = () => {\n      if (on === 'touch') {\n        touchEvents.forEach(type => {\n          childRef.current.removeEventListener(type, handler, eventOptions)\n        })\n      } else if (on === 'fui') {\n        fuiEvents.forEach(type => {\n          window.removeEventListener(type, handler, eventOptions)\n        })\n      }\n    }\n\n    const onUnmount = () => {\n      // remove the SSR styles since the next time this component renders it will already be hydrated\n      removeSSRStyles()\n      clearEventListeners()\n    }\n\n    if (on === 'fui') {\n      fuiEvents.forEach(type => window.addEventListener(type, handler, eventOptions))\n    } else if (on === 'touch') {\n      touchEvents.forEach(type => childRef.current.addEventListener(type, handler, eventOptions))\n    }\n\n    return onUnmount\n  }, [on])\n\n  if (hydrated) {\n    return (\n      <div ref={childRef} id={id} className={className} style={{ display: 'contents' }}>\n        {children}\n      </div>\n    )\n  } else {\n    return (\n      <div\n        ref={childRef}\n        id={id}\n        className={className}\n        style={{ display: 'contents' }}\n        suppressHydrationWarning\n        dangerouslySetInnerHTML={{ __html: '' }}\n      />\n    )\n  }\n}\n\n/**\n * LazyHydrate a component based on a specified trigger\n *\n * Example usage:\n *\n *  <LazyHydrate id=\"foo\">\n *    <div>some expensive component</div>\n *  </LazyHydrate>\n *\n */\n\nfunction LazyHydrate({ children, ...props }) {\n  /* istanbul ignore next */\n  if (useAmp()) return children\n\n  return (\n    <LazyHydrateInstance {...props}>\n      {/* LazyStylesProvider should not be used in the browser. Once components \n      are hydrated, their styles will automatically be managed by the app's main \n      StyleProvider. Using LazyStylesProvider in the browser will result in duplicated\n      and conflicting styles in lazy components once they are hydrated. */}\n      {isBrowser() ? children : <LazyStylesProvider {...props}>{children}</LazyStylesProvider>}\n    </LazyHydrateInstance>\n  )\n}\n\nLazyHydrate.defaultProps = {\n  on: 'visible',\n}\n\nLazyHydrate.propTypes = {\n  // Identification of component\n  id: PropTypes.string.isRequired,\n  // Control the hydration of the component externally with this prop\n  hydrated: PropTypes.bool,\n  // Force component to never hydrate\n  ssrOnly: PropTypes.bool,\n  /* \n    Event to trigger hydration\n    eventOptions\n      - `visible` triggers hydration when component comes into the viewport\n      - `touch` triggers hydration on touchstart or mouseover\n      - `fui` (default) triggers hydration when user first interacts with page\n  */\n  on: PropTypes.oneOf(['visible', 'touch', 'fui']),\n}\n\nexport default LazyHydrate\n"],"file":"LazyHydrate.js"}