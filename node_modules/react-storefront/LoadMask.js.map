{"version":3,"sources":["../src/LoadMask.js"],"names":["styles","theme","root","position","top","left","height","width","display","justifyContent","alignItems","background","palette","zIndex","fullscreen","loadMaskOffsetTop","bottom","modal","marginTop","opacity","transparent","backgroundColor","alignTop","paddingTop","show","useStyles","name","LoadMask","classes","style","className","children","align","document","body","overflow","progress","propTypes","PropTypes","object","bool","oneOf","defaultProps"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAGO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AAC9B;;;AAGAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE,UADN;AAEJC,MAAAA,GAAG,EAAE,CAFD;AAGJC,MAAAA,IAAI,EAAE,CAHF;AAIJC,MAAAA,MAAM,EAAE,MAJJ;AAKJC,MAAAA,KAAK,EAAE,MALH;AAMJC,MAAAA,OAAO,EAAE,MANL;AAOJC,MAAAA,cAAc,EAAE,QAPZ;AAQJC,MAAAA,UAAU,EAAE,QARR;AASJC,MAAAA,UAAU,EAAEV,KAAK,CAACW,OAAN,CAAcD,UAAd,WATR;AAUJE,MAAAA,MAAM,EAAE;AAVJ,KAJwB;;AAgB9B;;;AAGAC,IAAAA,UAAU,EAAE;AACVR,MAAAA,MAAM,yBAAkBL,KAAK,CAACc,iBAAxB,QADI;AAEVC,MAAAA,MAAM,EAAE,SAFE;AAGVH,MAAAA,MAAM,EAAEZ,KAAK,CAACY,MAAN,CAAaI,KAAb,GAAqB,EAHnB;AAIV,yBAAmB;AACjBd,QAAAA,QAAQ,EAAE,OADO;AAEjBe,QAAAA,SAAS,EAAE,CAFM;AAGjBC,QAAAA,OAAO,EAAE;AAHQ;AAJT,KAnBkB;;AA6B9B;;;AAGAC,IAAAA,WAAW,EAAE;AACXC,MAAAA,eAAe,EAAE;AADN,KAhCiB;;AAmC9B;;;AAGAC,IAAAA,QAAQ,EAAE;AACRZ,MAAAA,UAAU,EAAE,YADJ;AAERa,MAAAA,UAAU,EAAE;AAFJ,KAtCoB;;AA0C9B;;;AAGAC,IAAAA,IAAI,EAAE;AACJhB,MAAAA,OAAO,EAAE;AADL;AA7CwB,GAAL;AAAA,CAApB;;;AAkDP,IAAMiB,SAAS,GAAG,wBAAWzB,MAAX,EAAmB;AAAE0B,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAlB;AAEA;;;;AAGe,SAASC,QAAT,OASZ;AAAA;;AAAA,MARDC,OAQC,QARDA,OAQC;AAAA,MAPDJ,IAOC,QAPDA,IAOC;AAAA,MANDK,KAMC,QANDA,KAMC;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAJDC,QAIC,QAJDA,QAIC;AAAA,MAHDjB,UAGC,QAHDA,UAGC;AAAA,MAFDM,WAEC,QAFDA,WAEC;AAAA,MADDY,KACC,QADDA,KACC;AACDJ,EAAAA,OAAO,GAAGH,SAAS,CAAC;AAAEG,IAAAA,OAAO,EAAPA;AAAF,GAAD,CAAnB;AAEA,wBAAU,YAAM;AACd,QAAId,UAAJ,EAAgB;AACdmB,MAAAA,QAAQ,CAACC,IAAT,CAAcL,KAAd,CAAoBM,QAApB,GAA+BX,IAAI,GAAG,QAAH,GAAc,SAAjD;AACD;AACF,GAJD,EAIG,CAACA,IAAD,EAAOV,UAAP,CAJH;AAMA,wBAAU;AAAA,WAAM,YAAM;AACpB,UAAIA,UAAJ,EAAgB;AACdmB,QAAAA,QAAQ,CAACC,IAAT,CAAcL,KAAd,CAAoBM,QAApB,GAA+B,SAA/B;AACD;AACF,KAJS;AAAA,GAAV;AAMA,sBACE;AACE,IAAA,KAAK,EAAEN,KADT;AAEE,IAAA,SAAS,EAAE,uBAAKC,SAAL,EAAgBF,OAAO,CAAC1B,IAAxB,uDACR0B,OAAO,CAACJ,IADA,EACOA,IAAI,KAAK,KADhB,2CAERI,OAAO,CAACd,UAFA,EAEaA,UAFb,2CAGRc,OAAO,CAACR,WAHA,EAGcA,WAHd,2CAIRQ,OAAO,CAACN,QAJA,EAIWU,KAAK,KAAK,KAJrB;AAFb,KASGD,QAAQ,iBAAI,gCAAC,4BAAD;AAAkB,IAAA,SAAS,EAAEH,OAAO,CAACQ,QAArC;AAA+C,IAAA,KAAK,EAAC;AAArD,IATf,CADF;AAaD;;AAEDT,QAAQ,CAACU,SAAT,GAAqB;AACnB;;;AAGAT,EAAAA,OAAO,EAAEU,sBAAUC,MAJA;;AAMnB;;;AAGAf,EAAAA,IAAI,EAAEc,sBAAUE,IATG;;AAWnB;;;AAGA1B,EAAAA,UAAU,EAAEwB,sBAAUE,IAdH;;AAgBnB;;;AAGApB,EAAAA,WAAW,EAAEkB,sBAAUE,IAnBJ;;AAqBnB;;;AAGAR,EAAAA,KAAK,EAAEM,sBAAUG,KAAV,CAAgB,CAAC,QAAD,EAAW,KAAX,CAAhB;AAxBY,CAArB;AA2BAd,QAAQ,CAACe,YAAT,GAAwB;AACtB5B,EAAAA,UAAU,EAAE,KADU;AAEtBM,EAAAA,WAAW,EAAE,KAFS;AAGtBY,EAAAA,KAAK,EAAE;AAHe,CAAxB","sourcesContent":["import React, { useEffect } from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CircularProgress } from '@material-ui/core'\n\nexport const styles = theme => ({\n  /**\n   * Styles applied to the root element.\n   */\n  root: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    display: 'none',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: theme.palette.background.default,\n    zIndex: 1,\n  },\n  /**\n   * Styles applied to the root element when [`fullscreen`](#prop-fullscreen) is `true`.\n   */\n  fullscreen: {\n    height: `calc(100vh - ${theme.loadMaskOffsetTop}px)`,\n    bottom: 'initial',\n    zIndex: theme.zIndex.modal - 20,\n    'body.moov-amp &': {\n      position: 'fixed',\n      marginTop: 0,\n      opacity: 0.8,\n    },\n  },\n  /**\n   * Styles applied to the root element when [`transparent`](#prop-transparent) is `true`.\n   */\n  transparent: {\n    backgroundColor: 'rgba(255,255,255,0.5)',\n  },\n  /**\n   * Styles applied to the root element when [`align`](#prop-align) is `'top'`.\n   */\n  alignTop: {\n    alignItems: 'flex-start',\n    paddingTop: '200px',\n  },\n  /**\n   * Styles applied to the root element when [`show`](#prop-show) is `true`.\n   */\n  show: {\n    display: 'flex',\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFLoadMask' })\n\n/**\n * A load mask to display when fetching data from the server.\n */\nexport default function LoadMask({\n  classes,\n  show,\n  style,\n  className,\n  children,\n  fullscreen,\n  transparent,\n  align,\n}) {\n  classes = useStyles({ classes })\n\n  useEffect(() => {\n    if (fullscreen) {\n      document.body.style.overflow = show ? 'hidden' : 'visible'\n    }\n  }, [show, fullscreen])\n\n  useEffect(() => () => {\n    if (fullscreen) {\n      document.body.style.overflow = 'visible'\n    }\n  })\n\n  return (\n    <div\n      style={style}\n      className={clsx(className, classes.root, {\n        [classes.show]: show !== false,\n        [classes.fullscreen]: fullscreen,\n        [classes.transparent]: transparent,\n        [classes.alignTop]: align === 'top',\n      })}\n    >\n      {children || <CircularProgress className={classes.progress} color=\"secondary\" />}\n    </div>\n  )\n}\n\nLoadMask.propTypes = {\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If defined, `true` will display the load mask, while `false` will be hide it.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Set to `true` to toggle the overflow style on the body when showing.\n   */\n  fullscreen: PropTypes.bool,\n\n  /**\n   * Set to `true` to show partially background through the load mask\n   */\n  transparent: PropTypes.bool,\n\n  /**\n   * Set to `'top'` to show the spinner near the top.\n   */\n  align: PropTypes.oneOf(['center', 'top']),\n}\n\nLoadMask.defaultProps = {\n  fullscreen: false,\n  transparent: false,\n  align: 'center',\n}\n"],"file":"LoadMask.js"}