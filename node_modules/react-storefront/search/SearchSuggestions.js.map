{"version":3,"sources":["../../src/search/SearchSuggestions.js"],"names":["styles","theme","root","flex","position","overflowY","group","margin","spacing","useStyles","name","SearchSuggestions","classes","render","SearchContext","state","loading","groups","map","caption","propTypes","PropTypes","object","defaultProps"],"mappings":";;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AAC9B;;;AAGAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAE,CADF;AAEJC,MAAAA,QAAQ,EAAE,UAFN;AAGJC,MAAAA,SAAS,EAAE;AAHP,KAJwB;;AAS9B;;;AAGAC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AADH;AAZuB,GAAL;AAAA,CAApB;;;AAgBP,IAAMC,SAAS,GAAG,wBAAWT,MAAX,EAAmB;AAAEU,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAlB;;AAEe,SAASC,iBAAT,OAAgD;AAAA,MAAnBC,OAAmB,QAAnBA,OAAmB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAC7DD,EAAAA,OAAO,GAAGH,SAAS,CAAC;AAAEG,IAAAA,OAAO,EAAPA;AAAF,GAAD,CAAnB;;AAD6D,oBAE3C,uBAAWE,yBAAX,CAF2C;AAAA,MAErDC,KAFqD,eAErDA,KAFqD;;AAI7D,sBACE,+EACE,gCAAC,oBAAD;AAAU,IAAA,IAAI,EAAEA,KAAK,CAACC,OAAtB;AAA+B,IAAA,WAAW;AAA1C,IADF,eAEE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACV;AAAxB,KACGW,MAAM,GACHA,MAAM,CAACE,KAAD,CADH,GAEHA,KAAK,CAACE,MAAN,IACAF,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiB,UAAAZ,KAAK;AAAA,wBACpB;AAAK,MAAA,GAAG,EAAEA,KAAK,CAACa,OAAhB;AAAyB,MAAA,SAAS,EAAEP,OAAO,CAACN;AAA5C,oBACE,gCAAC,iCAAD,EAA2BA,KAA3B,CADF,CADoB;AAAA,GAAtB,CAJN,CAFF,CADF;AAeD;;AAEDK,iBAAiB,CAACS,SAAlB,GAA8B;AAC5B;;;AAGAR,EAAAA,OAAO,EAAES,sBAAUC;AAJS,CAA9B;AAOAX,iBAAiB,CAACY,YAAlB,GAAiC,EAAjC","sourcesContent":["import React, { useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SearchSuggestionGroup from './SearchSuggestionGroup'\nimport SearchContext from './SearchContext'\nimport LoadMask from '../LoadMask'\nimport PropTypes from 'prop-types'\n\nexport const styles = theme => ({\n  /**\n   * Styles applied to the root element.\n   */\n  root: {\n    flex: 1,\n    position: 'relative',\n    overflowY: 'auto',\n  },\n  /**\n   * Styles applied to each of the group wrapper elements.\n   */\n  group: {\n    margin: theme.spacing(0, 0, 2, 0),\n  },\n})\nconst useStyles = makeStyles(styles, { name: 'RSFSearchSuggestions' })\n\nexport default function SearchSuggestions({ classes, render }) {\n  classes = useStyles({ classes })\n  const { state } = useContext(SearchContext)\n\n  return (\n    <>\n      <LoadMask show={state.loading} transparent />\n      <div className={classes.root}>\n        {render\n          ? render(state)\n          : state.groups &&\n            state.groups.map(group => (\n              <div key={group.caption} className={classes.group}>\n                <SearchSuggestionGroup {...group} />\n              </div>\n            ))}\n      </div>\n    </>\n  )\n}\n\nSearchSuggestions.propTypes = {\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n}\n\nSearchSuggestions.defaultProps = {}\n"],"file":"SearchSuggestions.js"}