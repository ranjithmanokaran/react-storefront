{"version":3,"sources":["../../src/search/SearchSuggestionGroup.js"],"names":["styles","theme","root","listStyle","margin","spacing","fontWeight","color","caption","textTransform","paddingBottom","borderBottom","palette","divider","list","padding","display","overflowX","useStyles","name","SearchSuggestionGroup","classes","ui","links","children","map","item","i","propTypes","PropTypes","object","node","arrayOf","shape","as","string","href","text","pageData","thumbnail","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Typography from '@material-ui/core/Typography'\nimport PropTypes from 'prop-types'\nimport SearchSuggestionItem from './SearchSuggestionItem'\n\nexport const styles = theme => ({\n  /**\n   * Styles applied to the root element.\n   */\n  root: {\n    listStyle: 'none',\n    margin: theme.spacing(2),\n    '& a strong': {\n      fontWeight: 'bold',\n      color: 'inherit',\n    },\n  },\n  /**\n   * Styles applied to the group's caption element.\n   */\n  caption: {\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n    paddingBottom: 5,\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    margin: theme.spacing(0, 0, 1, 0),\n  },\n  /**\n   * Styles applied to the group's list element.\n   */\n  list: {\n    '&[data-ui=list]': {\n      padding: 0,\n      margin: theme.spacing(0, 0, 4, 0),\n    },\n    '&[data-ui=thumbnails]': {\n      display: 'flex',\n      listStyle: 'none',\n      margin: '0 -15px',\n      padding: '0 10px',\n      overflowX: 'auto',\n      '& > li': {\n        margin: '5px',\n      },\n    },\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFSearchSuggestionGroup' })\n\nexport default function SearchSuggestionGroup({ classes, ui, caption, links, children }) {\n  classes = useStyles({ classes })\n\n  return (\n    <div className={classes.root}>\n      <Typography className={classes.caption}>{caption}</Typography>\n      <ul className={classes.list} data-ui={ui}>\n        {children\n          ? children\n          : links.map((item, i) => <SearchSuggestionItem item={item} ui={ui} key={i} />)}\n      </ul>\n    </div>\n  )\n}\n\nSearchSuggestionGroup.propTypes = {\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * Child nodes that can be used for the suggestion group instead of mapping the [links](#prop-links).\n   */\n  children: PropTypes.node,\n  /**\n   * An array of props to pass to a [SearchSuggestionItem](/apiReference/search/SearchSuggestionItem)\n   * with data for suggested searches.\n   */\n  links: PropTypes.arrayOf(\n    PropTypes.shape({\n      as: PropTypes.string,\n      href: PropTypes.string,\n      text: PropTypes.string,\n      pageData: PropTypes.object,\n      thumbnail: PropTypes.object,\n    }),\n  ),\n  /**\n   * A title for the list.\n   */\n  caption: PropTypes.string.isRequired,\n}\n\nSearchSuggestionGroup.defaultProps = {}\n"],"file":"SearchSuggestionGroup.js"}