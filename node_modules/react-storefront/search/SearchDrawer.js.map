{"version":3,"sources":["../../src/search/SearchDrawer.js"],"names":["styles","theme","paper","display","closeButton","color","palette","primary","contrastText","useStyles","name","SearchDrawer","DrawerComponent","classes","open","onClose","children","handleNavigation","propTypes","PropTypes","object","node","bool","func","isRequired","elementType","defaultProps","Drawer"],"mappings":";;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AAC9B;;;AAGAC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE;AADJ,KAJuB;;AAO9B;;;AAGAC,IAAAA,WAAW,EAAE;AACXC,MAAAA,KAAK,EAAEJ,KAAK,CAACK,OAAN,CAAcC,OAAd,CAAsBC;AADlB;AAViB,GAAL;AAAA,CAApB;;;AAeP,IAAMC,SAAS,GAAG,wBAAWT,MAAX,EAAmB;AAAEU,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAlB;;AAEe,SAASC,YAAT,OAA6E;AAAA,MAArDC,eAAqD,QAArDA,eAAqD;AAAA,MAApCC,OAAoC,QAApCA,OAAoC;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC1FH,EAAAA,OAAO,GAAGJ,SAAS,CAAC;AAAEI,IAAAA,OAAO,EAAPA;AAAF,GAAD,CAAnB;;AAEA,MAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,QAAIF,OAAJ,EAAa;AACXA,MAAAA,OAAO;AACR;AACF,GAJD;;AAMA,sCAAmBE,gBAAnB;AAEA,sBACE,gCAAC,eAAD;AAAiB,IAAA,OAAO,EAAEJ,OAA1B;AAAmC,IAAA,IAAI,EAAEC,IAAzC;AAA+C,IAAA,MAAM,EAAC,QAAtD;AAA+D,IAAA,OAAO,EAAEC,OAAxE;AAAiF,IAAA,UAAU;AAA3F,KACGC,QADH,CADF;AAKD;;AAEDL,YAAY,CAACO,SAAb,GAAyB;AACvB;;;AAGAL,EAAAA,OAAO,EAAEM,sBAAUC,MAJI;;AAMvB;;;AAGAJ,EAAAA,QAAQ,EAAEG,sBAAUE,IATG;;AAWvB;;;AAGAP,EAAAA,IAAI,EAAEK,sBAAUG,IAdO;;AAgBvB;;;AAGAP,EAAAA,OAAO,EAAEI,sBAAUI,IAAV,CAAeC,UAnBD;;AAqBvB;;;AAGAZ,EAAAA,eAAe,EAAEO,sBAAUM;AAxBJ,CAAzB;AA2BAd,YAAY,CAACe,YAAb,GAA4B;AAC1Bd,EAAAA,eAAe,EAAEe;AADS,CAA5B","sourcesContent":["import React from 'react'\nimport Drawer from '../drawer/Drawer'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport useNavigationEvent from 'react-storefront/hooks/useNavigationEvent'\n\nexport const styles = theme => ({\n  /**\n   * Styles applied to the paper component in the [Drawer](/apiReference/drawer/Drawer).\n   */\n  paper: {\n    display: 'flex',\n  },\n  /**\n   * Styles applied to the root element in the [DrawerCloseButton](/apiReference/drawer/DrawerCloseButton).\n   */\n  closeButton: {\n    color: theme.palette.primary.contrastText,\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFSearch' })\n\nexport default function SearchDrawer({ DrawerComponent, classes, open, onClose, children }) {\n  classes = useStyles({ classes })\n\n  const handleNavigation = () => {\n    if (onClose) {\n      onClose()\n    }\n  }\n\n  useNavigationEvent(handleNavigation)\n\n  return (\n    <DrawerComponent classes={classes} open={open} anchor=\"bottom\" onClose={onClose} fullscreen>\n      {children}\n    </DrawerComponent>\n  )\n}\n\nSearchDrawer.propTypes = {\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Children to be rendered inside the drawer.\n   */\n  children: PropTypes.node,\n\n  /**\n   * If `true`, the search drawer should be open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * A function that is called when the user closes the drawer.\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * A component type to use for the drawer.\n   */\n  DrawerComponent: PropTypes.elementType,\n}\n\nSearchDrawer.defaultProps = {\n  DrawerComponent: Drawer,\n}\n"],"file":"SearchDrawer.js"}