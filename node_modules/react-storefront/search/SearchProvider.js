"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = SearchProvider;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _SearchContext = _interopRequireDefault(require("./SearchContext"));

var _fetch2 = _interopRequireDefault(require("../fetch"));

var _useDebounce = _interopRequireDefault(require("../utils/useDebounce"));

var _fetchLatest = require("../utils/fetchLatest");

var _getAPIURL = _interopRequireDefault(require("../api/getAPIURL"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var fetch = (0, _fetchLatest.fetchLatest)(_fetch2["default"]);

function SearchProvider(_ref) {
  var children = _ref.children,
      query = _ref.query,
      initialGroups = _ref.initialGroups,
      active = _ref.active,
      minQueryLength = _ref.minQueryLength,
      debounceTime = _ref.debounceTime;

  var _useState = (0, _react.useState)({
    groups: initialGroups,
    loading: true
  }),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];

  var debouncedQuery = (0, _useDebounce["default"])(query, debounceTime);

  var fetchSuggestions = /*#__PURE__*/function () {
    var _ref2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(text) {
      var url, _yield$fetch$then, groups;

      return _regenerator["default"].wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              setState(function (state) {
                return _objectSpread(_objectSpread({}, state), {}, {
                  loading: true
                });
              });
              url = (0, _getAPIURL["default"])("/suggestions?q=".concat(encodeURIComponent(text.trim())));
              _context.next = 5;
              return fetch(url, {
                credentials: 'include'
              }).then(function (res) {
                return res.json();
              });

            case 5:
              _yield$fetch$then = _context.sent;
              groups = _yield$fetch$then.groups;
              setState(function (state) {
                return _objectSpread(_objectSpread({}, state), {}, {
                  loading: false,
                  groups: groups
                });
              });
              _context.next = 13;
              break;

            case 10:
              _context.prev = 10;
              _context.t0 = _context["catch"](0);

              if (!_fetchLatest.StaleResponseError.is(_context.t0)) {
                setState(function (state) {
                  return _objectSpread(_objectSpread({}, state), {}, {
                    loading: false
                  });
                });
              }

            case 13:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[0, 10]]);
    }));

    return function fetchSuggestions(_x) {
      return _ref2.apply(this, arguments);
    };
  }();

  (0, _react.useEffect)(function () {
    if (active && (debouncedQuery.length >= minQueryLength || !debouncedQuery)) {
      fetchSuggestions(debouncedQuery);
    }
  }, [active, debouncedQuery]);
  var context = {
    query: debouncedQuery,
    state: state,
    setState: setState,
    fetchSuggestions: fetchSuggestions
  };
  return /*#__PURE__*/_react["default"].createElement(_SearchContext["default"].Provider, {
    value: context
  }, children);
}

SearchProvider.propTypes = {
  open: _propTypes["default"].bool,
  initialGroups: _propTypes["default"].array,

  /**
   * Minimum length of search query to fetch. Default is 3
   */
  minQueryLength: _propTypes["default"].number,

  /**
   * Default is 250
   */
  debounceTime: _propTypes["default"].number
};
SearchProvider.defaultProps = {
  minQueryLength: 3,
  debounceTime: 250
};
//# sourceMappingURL=SearchProvider.js.map