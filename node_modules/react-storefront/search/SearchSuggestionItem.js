"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = SearchSuggestionItem;
exports.styles = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _makeStyles = _interopRequireDefault(require("@material-ui/core/styles/makeStyles"));

var _Link = _interopRequireDefault(require("../link/Link"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Image = _interopRequireDefault(require("../Image"));

var _SearchContext = _interopRequireDefault(require("./SearchContext"));

var _Highlight = _interopRequireDefault(require("../Highlight"));

var styles = function styles(theme) {
  return {
    root: {
      margin: theme.spacing(2, 0),
      listStyle: 'none',
      padding: 0,
      '& [data-ui=thumbnails]': {
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'flex-start'
      }
    },
    thumbnail: {
      marginBottom: '10px',
      display: 'none',
      '[data-ui=thumbnails] &': {
        display: 'block',
        '& img': {
          height: 120,
          width: 120,
          minWidth: 120
        }
      }
    },
    text: {},
    highlight: {
      backgroundColor: 'rgba(0,0,0,0.05)',
      borderRadius: '2px',
      color: theme.palette.secondary.main
    }
  };
};

exports.styles = styles;
var useStyles = (0, _makeStyles["default"])(styles, {
  name: 'RSFSearchSuggestionItem'
});

function SearchSuggestionItem(_ref) {
  var ImageComponent = _ref.ImageComponent,
      classes = _ref.classes,
      item = _ref.item,
      ui = _ref.ui,
      thumbnailProps = _ref.thumbnailProps,
      children = _ref.children;
  classes = useStyles({
    classes: classes
  });

  var _useContext = (0, _react.useContext)(_SearchContext["default"]),
      query = _useContext.query;

  return /*#__PURE__*/_react["default"].createElement("li", {
    className: classes.root
  }, /*#__PURE__*/_react["default"].createElement(_Link["default"], {
    as: item.as,
    href: item.href,
    pageData: item.pageData
  }, children ? children : /*#__PURE__*/_react["default"].createElement("a", {
    href: item.as
  }, /*#__PURE__*/_react["default"].createElement("div", {
    "data-ui": ui
  }, /*#__PURE__*/_react["default"].createElement(ImageComponent, (0, _extends2["default"])({
    className: classes.thumbnail
  }, thumbnailProps, item.thumbnail)), /*#__PURE__*/_react["default"].createElement(_Highlight["default"], {
    className: classes.text,
    query: query,
    text: item.text,
    classes: classes
  })))));
}

SearchSuggestionItem.propTypes = {
  /**
   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.
   */
  classes: _propTypes["default"].object,

  /**
   * Child nodes that can be used for the link body. If not included, will default to using the
   * [item](prop-item)'s `thumbnail` and `text`.
   */
  children: _propTypes["default"].node,

  /**
   * Contains all the metadata needed to display the search suggestion item.
   */
  item: _propTypes["default"].shape({
    as: _propTypes["default"].string,
    href: _propTypes["default"].string,
    text: _propTypes["default"].string,
    pageData: _propTypes["default"].object,
    thumbnail: _propTypes["default"].object
  }),

  /**
   * Props to be passed to the image for thumbnails.
   */
  thumbnailProps: _propTypes["default"].object,

  /**
   * The component type to use to display images.
   */
  ImageComponent: _propTypes["default"].elementType
};
SearchSuggestionItem.defaultProps = {
  ImageComponent: _Image["default"]
};
//# sourceMappingURL=SearchSuggestionItem.js.map