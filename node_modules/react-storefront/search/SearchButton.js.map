{"version":3,"sources":["../../src/search/SearchButton.js"],"names":["styles","theme","icon","color","palette","action","active","large","fontSize","useStyles","name","SearchButton","children","classes","other","label","propTypes","PropTypes","object","node"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;;;;;AAGA;;AAEO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AAC9B;;;AAGAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAEF,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC;AADxB,KAJwB;;AAO9B;;;AAGAC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL;AAVuB,GAAL;AAAA,CAApB;;;AAeP,IAAMC,SAAS,GAAG,wBAAWT,MAAX,EAAmB;AAAEU,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAlB;AAEA;;;;AAGe,SAASC,YAAT,OAAuD;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAATC,KAAS;AACpED,EAAAA,OAAO,GAAGJ,SAAS,CAAC;AAAEI,IAAAA,OAAO,EAAPA;AAAF,GAAD,CAAnB;AAEA,sBACE,gCAAC,sBAAD;AAAY,kBAAW,QAAvB;AAAgC,IAAA,KAAK,EAAC,SAAtC;AAAgD,IAAA,OAAO,EAAE;AAAEE,MAAAA,KAAK,EAAEF,OAAO,CAACN;AAAjB;AAAzD,KAAuFO,KAAvF,GACGF,QAAQ,iBAAI,gCAAC,kBAAD;AAAQ,IAAA,SAAS,EAAEC,OAAO,CAACX;AAA3B,IADf,CADF;AAKD;;AAEDS,YAAY,CAACK,SAAb,GAAyB;AACvB;;;AAGAH,EAAAA,OAAO,EAAEI,sBAAUC,MAJI;;AAMvB;;;AAGAN,EAAAA,QAAQ,EAAEK,sBAAUE;AATG,CAAzB","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport { IconButton } from '@material-ui/core'\nimport { Search } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles'\n\nexport const styles = theme => ({\n  /**\n   * Styles applied to the icon, if [children](#prop-children) is empty.\n   */\n  icon: {\n    color: theme.palette.action.active,\n  },\n  /**\n   * Styles applied to the element containing the button's label.\n   */\n  large: {\n    fontSize: '28px',\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFSearchButton' })\n\n/**\n * A button that can be used to open a search drawer.\n */\nexport default function SearchButton({ children, classes, ...other }) {\n  classes = useStyles({ classes })\n\n  return (\n    <IconButton aria-label=\"Search\" color=\"inherit\" classes={{ label: classes.large }} {...other}>\n      {children || <Search className={classes.icon} />}\n    </IconButton>\n  )\n}\n\nSearchButton.propTypes = {\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Optional content to use for the button contents. If empty, a search icon is used.\n   */\n  children: PropTypes.node,\n}\n"],"file":"SearchButton.js"}