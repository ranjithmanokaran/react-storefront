{"version":3,"sources":["../../src/search/SearchProvider.js"],"names":["fetch","_fetch","SearchProvider","children","query","initialGroups","active","minQueryLength","debounceTime","groups","loading","state","setState","debouncedQuery","fetchSuggestions","text","url","encodeURIComponent","trim","credentials","then","res","json","StaleResponseError","is","length","context","propTypes","open","PropTypes","bool","array","number","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,KAAK,GAAG,8BAAYC,kBAAZ,CAAd;;AAEe,SAASC,cAAT,OAOZ;AAAA,MANDC,QAMC,QANDA,QAMC;AAAA,MALDC,KAKC,QALDA,KAKC;AAAA,MAJDC,aAIC,QAJDA,aAIC;AAAA,MAHDC,MAGC,QAHDA,MAGC;AAAA,MAFDC,cAEC,QAFDA,cAEC;AAAA,MADDC,YACC,QADDA,YACC;;AAAA,kBACyB,qBAAS;AACjCC,IAAAA,MAAM,EAAEJ,aADyB;AAEjCK,IAAAA,OAAO,EAAE;AAFwB,GAAT,CADzB;AAAA;AAAA,MACMC,KADN;AAAA,MACaC,QADb;;AAMD,MAAMC,cAAc,GAAG,6BAAYT,KAAZ,EAAmBI,YAAnB,CAAvB;;AAEA,MAAMM,gBAAgB;AAAA,8FAAG,iBAAMC,IAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAErBH,cAAAA,QAAQ,CAAC,UAAAD,KAAK;AAAA,uDACTA,KADS;AAEZD,kBAAAA,OAAO,EAAE;AAFG;AAAA,eAAN,CAAR;AAKMM,cAAAA,GAPe,GAOT,oDAA4BC,kBAAkB,CAACF,IAAI,CAACG,IAAL,EAAD,CAA9C,EAPS;AAAA;AAAA,qBAQIlB,KAAK,CAACgB,GAAD,EAAM;AAAEG,gBAAAA,WAAW,EAAE;AAAf,eAAN,CAAL,CAAuCC,IAAvC,CAA4C,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eAA/C,CARJ;;AAAA;AAAA;AAQbb,cAAAA,MARa,qBAQbA,MARa;AAUrBG,cAAAA,QAAQ,CAAC,UAAAD,KAAK;AAAA,uDACTA,KADS;AAEZD,kBAAAA,OAAO,EAAE,KAFG;AAGZD,kBAAAA,MAAM,EAANA;AAHY;AAAA,eAAN,CAAR;AAVqB;AAAA;;AAAA;AAAA;AAAA;;AAgBrB,kBAAI,CAACc,gCAAmBC,EAAnB,aAAL,EAA+B;AAC7BZ,gBAAAA,QAAQ,CAAC,UAAAD,KAAK;AAAA,yDACTA,KADS;AAEZD,oBAAAA,OAAO,EAAE;AAFG;AAAA,iBAAN,CAAR;AAID;;AArBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAhBI,gBAAgB;AAAA;AAAA;AAAA,KAAtB;;AAyBA,wBAAU,YAAM;AACd,QAAIR,MAAM,KAAKO,cAAc,CAACY,MAAf,IAAyBlB,cAAzB,IAA2C,CAACM,cAAjD,CAAV,EAA4E;AAC1EC,MAAAA,gBAAgB,CAACD,cAAD,CAAhB;AACD;AACF,GAJD,EAIG,CAACP,MAAD,EAASO,cAAT,CAJH;AAMA,MAAMa,OAAO,GAAG;AACdtB,IAAAA,KAAK,EAAES,cADO;AAEdF,IAAAA,KAAK,EAALA,KAFc;AAGdC,IAAAA,QAAQ,EAARA,QAHc;AAIdE,IAAAA,gBAAgB,EAAhBA;AAJc,GAAhB;AAOA,sBAAO,gCAAC,yBAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEY;AAA/B,KAAyCvB,QAAzC,CAAP;AACD;;AAEDD,cAAc,CAACyB,SAAf,GAA2B;AACzBC,EAAAA,IAAI,EAAEC,sBAAUC,IADS;AAEzBzB,EAAAA,aAAa,EAAEwB,sBAAUE,KAFA;;AAGzB;;;AAGAxB,EAAAA,cAAc,EAAEsB,sBAAUG,MAND;;AAOzB;;;AAGAxB,EAAAA,YAAY,EAAEqB,sBAAUG;AAVC,CAA3B;AAaA9B,cAAc,CAAC+B,YAAf,GAA8B;AAC5B1B,EAAAA,cAAc,EAAE,CADY;AAE5BC,EAAAA,YAAY,EAAE;AAFc,CAA9B","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport SearchContext from './SearchContext'\nimport _fetch from '../fetch'\nimport useDebounce from '../utils/useDebounce'\nimport { fetchLatest, StaleResponseError } from '../utils/fetchLatest'\nimport getAPIURL from '../api/getAPIURL'\n\nconst fetch = fetchLatest(_fetch)\n\nexport default function SearchProvider({\n  children,\n  query,\n  initialGroups,\n  active,\n  minQueryLength,\n  debounceTime,\n}) {\n  const [state, setState] = useState({\n    groups: initialGroups,\n    loading: true,\n  })\n\n  const debouncedQuery = useDebounce(query, debounceTime)\n\n  const fetchSuggestions = async text => {\n    try {\n      setState(state => ({\n        ...state,\n        loading: true,\n      }))\n\n      const url = getAPIURL(`/suggestions?q=${encodeURIComponent(text.trim())}`)\n      const { groups } = await fetch(url, { credentials: 'include' }).then(res => res.json())\n\n      setState(state => ({\n        ...state,\n        loading: false,\n        groups,\n      }))\n    } catch (e) {\n      if (!StaleResponseError.is(e)) {\n        setState(state => ({\n          ...state,\n          loading: false,\n        }))\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (active && (debouncedQuery.length >= minQueryLength || !debouncedQuery)) {\n      fetchSuggestions(debouncedQuery)\n    }\n  }, [active, debouncedQuery])\n\n  const context = {\n    query: debouncedQuery,\n    state,\n    setState,\n    fetchSuggestions,\n  }\n\n  return <SearchContext.Provider value={context}>{children}</SearchContext.Provider>\n}\n\nSearchProvider.propTypes = {\n  open: PropTypes.bool,\n  initialGroups: PropTypes.array,\n  /**\n   * Minimum length of search query to fetch. Default is 3\n   */\n  minQueryLength: PropTypes.number,\n  /**\n   * Default is 250\n   */\n  debounceTime: PropTypes.number,\n}\n\nSearchProvider.defaultProps = {\n  minQueryLength: 3,\n  debounceTime: 250,\n}\n"],"file":"SearchProvider.js"}