{"version":3,"sources":["../../src/search/SearchField.js"],"names":["styles","theme","root","display","alignItems","inputWrap","flexGrow","border","borderRadius","backgroundColor","palette","background","paper","margin","height","input","flex","padding","spacing","typography","body1","outline","breakpoints","up","borderColor","divider","zIndex","transition","primary","main","inputClearIcon","paddingRight","searchFab","width","marginLeft","color","text","secondary","hidden","useStyles","name","SearchField","ref","ariaLabel","classes","onChange","submitButtonVariant","showClearButton","SubmitButtonComponent","SubmitButtonIcon","clearButtonProps","inputProps","value","onFocus","submitButtonProps","others","inputRef","empty","trim","length","handleInputFocus","current","setSelectionRange","handleClearClick","e","target","searchReset","Button","searchButton","Fab","propTypes","PropTypes","string","object","elementType","oneOf","bool","func","defaultProps","SearchSubmitButton","placeholder"],"mappings":"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","sourcesContent":["import React, { useRef, forwardRef } from 'react'\nimport { makeStyles, fade } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport { IconButton } from '@material-ui/core'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport SearchSubmitButton from './SearchSubmitButton'\nimport { Fab, Button } from '@material-ui/core'\nimport clsx from 'clsx'\n\nexport const styles = theme => ({\n  /**\n   * Styles applied to the root element.\n   */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  /**\n   * Styles applied to the wrapper element.\n   */\n  inputWrap: {\n    display: 'flex',\n    flexGrow: 1,\n    border: 0,\n    borderRadius: '35px',\n    backgroundColor: theme.palette.background.paper,\n    margin: 0,\n    height: '48px',\n  },\n  /**\n   * Styles applied to the input element.\n   */\n  input: {\n    border: 'none',\n    background: 'none',\n    flex: 1,\n    padding: theme.spacing(0, 2.5, 0, 2.5),\n    ...theme.typography.body1,\n    '&:focus': {\n      outline: 'none',\n    },\n    [theme.breakpoints.up('sm')]: {\n      border: '1px solid',\n      borderColor: theme.palette.divider,\n      borderRadius: theme.spacing(1),\n      margin: theme.spacing(0.5, 0, 0.5, 0),\n      zIndex: 9999,\n      transition: 'border-color linear 0.1s',\n      '&:hover': {\n        borderColor: fade(theme.palette.divider, 0.25),\n      },\n      '&:focus': {\n        borderColor: theme.palette.primary.main,\n      },\n    },\n  },\n\n  /**\n   * Styles applied to the input if showClearnButton prop is true.\n   */\n  inputClearIcon: {\n    paddingRight: 0,\n  },\n\n  /**\n   * Styles applied to the submit button element if [submitButtonVariant](#prop-submitButtonVariant)\n   * is `'fab'`.\n   */\n  searchFab: {\n    height: '48px',\n    width: '48px',\n    marginLeft: '10px',\n    backgroundColor: theme.palette.background.paper,\n    color: theme.palette.text.secondary,\n  },\n  /**\n   * Styles applied to the clear and submit buttons if the search field is empty.\n   */\n  hidden: {\n    display: 'none',\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFSearchField' })\n\n/**\n * A search text field. Additional props are spread to the underlying\n * [Input](https://material-ui.com/api/input/).\n */\nconst SearchField = forwardRef(\n  (\n    {\n      ariaLabel,\n      classes,\n      onChange,\n      submitButtonVariant,\n      showClearButton,\n      SubmitButtonComponent,\n      SubmitButtonIcon,\n      clearButtonProps,\n      inputProps,\n      value,\n      onFocus,\n      submitButtonProps,\n      ...others\n    },\n    ref,\n  ) => {\n    classes = useStyles({ classes })\n    const inputRef = ref || useRef(null)\n    const empty = value.trim().length === 0\n\n    const handleInputFocus = () => {\n      if (onFocus) {\n        onFocus()\n      }\n\n      inputRef.current.setSelectionRange(0, inputRef.current.value.length)\n    }\n\n    const handleClearClick = () => {\n      onChange('')\n    }\n\n    return (\n      <div className={classes.root} data-empty={value.trim().length === 0 ? 'on' : 'off'}>\n        <div className={classes.inputWrap}>\n          <input\n            {...others}\n            aria-label={ariaLabel}\n            type=\"text\"\n            value={value}\n            onChange={e => onChange(e.target.value)}\n            onFocus={handleInputFocus}\n            ref={inputRef}\n            className={clsx(classes.input, showClearButton && classes.inputClearIcon)}\n            {...inputProps}\n          />\n          {showClearButton ? (\n            <IconButton\n              {...clearButtonProps}\n              onClick={handleClearClick}\n              rel=\"clear\"\n              className={clsx({\n                [classes.searchReset]: true,\n                [classes.hidden]: empty,\n              })}\n            >\n              <ClearIcon rel=\"clear\" />\n            </IconButton>\n          ) : (\n            submitButtonVariant === 'icon' && (\n              <SubmitButtonComponent\n                Component={Button}\n                className={clsx({\n                  [classes.searchButton]: true,\n                  [classes.hidden]: empty,\n                })}\n                text={value}\n                {...submitButtonProps}\n              />\n            )\n          )}\n        </div>\n        {submitButtonVariant === 'fab' && (\n          <SubmitButtonComponent\n            Component={Fab}\n            className={clsx({\n              [classes.searchFab]: true,\n              [classes.hidden]: empty,\n            })}\n            text={value}\n            ButtonIcon={SubmitButtonIcon}\n            {...submitButtonProps}\n          />\n        )}\n      </div>\n    )\n  },\n)\n\nSearchField.propTypes = {\n  /**\n   * Label for accessibility, defaults to search-text\n   */\n  ariaLabel: PropTypes.string,\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component to use for the submit button.\n   */\n  SubmitButtonComponent: PropTypes.elementType,\n  /**\n   * An icon to use for the submit button.\n   */\n  SubmitButtonIcon: PropTypes.elementType,\n  /**\n   * The type of submit button to display.\n   */\n  submitButtonVariant: PropTypes.oneOf(['icon', 'fab', 'none']),\n  /**\n   * If `true`, show the clear button when text is entered.\n   */\n  showClearButton: PropTypes.bool,\n  /**\n   * Additional props for the clear button.\n   */\n  clearButtonProps: PropTypes.object,\n  /**\n   * Additional props for the Material UI [Input](https://material-ui.com/api/input/).\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Additional props for the submit button.\n   */\n  submitButtonProps: PropTypes.object,\n  /**\n   * A function to call when the search query value is changed.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Input value.\n   */\n  value: PropTypes.string,\n  /**\n   * A function to call when input is focused.\n   */\n  onFocus: PropTypes.func,\n}\n\nSearchField.defaultProps = {\n  SubmitButtonComponent: SearchSubmitButton,\n  submitButtonVariant: 'fab',\n  showClearButton: true,\n  placeholder: 'Search...',\n  ariaLabel: 'search-text',\n  name: 'q',\n  value: '',\n}\n\nexport default SearchField\n"],"file":"SearchField.js"}