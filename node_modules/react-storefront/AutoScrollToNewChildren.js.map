{"version":3,"sources":["../src/AutoScrollToNewChildren.js"],"names":["AutoScrollToNewChildren","children","childCount","React","Children","count","priorChildCount","setPriorChildCount","firstNewChild","current","scrollIntoView","behavior","map","child","index"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;;;AAIA,IAAMA,uBAAuB,GAAG,SAA1BA,uBAA0B,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAChD,MAAMC,UAAU,GAAGC,kBAAMC,QAAN,CAAeC,KAAf,CAAqBJ,QAArB,CAAnB;;AADgD,kBAEF,qBAASC,UAAT,CAFE;AAAA;AAAA,MAEzCI,eAFyC;AAAA,MAExBC,kBAFwB;;AAGhD,MAAMC,aAAa,GAAG,mBAAO,IAAP,CAAtB;AAEA,wBAAU,YAAM;AACd,QAAI,CAACF,eAAL,EAAsB;AACpBC,MAAAA,kBAAkB,CAACL,UAAD,CAAlB;AACD,KAFD,MAEO,IAAIA,UAAU,GAAGI,eAAjB,EAAkC;AACvCE,MAAAA,aAAa,CAACC,OAAd,CAAsBC,cAAtB,CAAqC;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAArC;AACAJ,MAAAA,kBAAkB,CAACL,UAAD,CAAlB;AACD;AACF,GAPD,EAOG,CAACA,UAAD,EAAaK,kBAAb,EAAiCD,eAAjC,CAPH;AASA;AAAA;AACE;AACA,sEACGH,kBAAMC,QAAN,CAAeQ,GAAf,CAAmBX,QAAnB,EAA6B,UAACY,KAAD,EAAQC,KAAR,EAAkB;AAC9C,0BACE,kEACGD,KADH,EAEGC,KAAK,KAAKR,eAAV,gBAA4B;AAAK,QAAA,GAAG,EAAEE;AAAV,QAA5B,GAA0D,IAF7D,CADF;AAMD,KAPA,CADH;AAFF;AAaD,CA3BD;;eA6BeR,uB","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\n\n/**\n * A wrapper component which scrolls the first new child into view when\n * the number of children increases.\n */\nconst AutoScrollToNewChildren = ({ children }) => {\n  const childCount = React.Children.count(children)\n  const [priorChildCount, setPriorChildCount] = useState(childCount)\n  const firstNewChild = useRef(null)\n\n  useEffect(() => {\n    if (!priorChildCount) {\n      setPriorChildCount(childCount)\n    } else if (childCount > priorChildCount) {\n      firstNewChild.current.scrollIntoView({ behavior: 'smooth' })\n      setPriorChildCount(childCount)\n    }\n  }, [childCount, setPriorChildCount, priorChildCount])\n\n  return (\n    // wrapped in a Fragment so react-docgen recognizes this as a Component:\n    <>\n      {React.Children.map(children, (child, index) => {\n        return (\n          <>\n            {child}\n            {index === priorChildCount ? <div ref={firstNewChild} /> : null}\n          </>\n        )\n      })}\n    </>\n  )\n}\n\nexport default AutoScrollToNewChildren\n"],"file":"AutoScrollToNewChildren.js"}