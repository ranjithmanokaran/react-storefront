{"version":3,"sources":["../src/QuantitySelector.js"],"names":["styles","theme","root","backgroundColor","palette","divider","border","width","padding","icon","fontSize","position","button","height","subtract","marginRight","spacing","add","marginLeft","input","color","text","primary","grey","textAlign","outline","display","useStyles","name","QuantitySelector","classes","addIcon","addButtonProps","subtractIcon","subtractButtonProps","value","minValue","maxValue","onChange","inputProps","ariaLabel","quantitySelector","inputClasses","handleChange","propTypes","PropTypes","string","object","element","number","func","defaultProps","Function","prototype"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Add, Remove } from '@material-ui/icons'\nimport { IconButton } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\n\nexport const styles = theme => ({\n  /**\n   * Styles applied to the root element.\n   */\n  root: {\n    backgroundColor: theme.palette.divider,\n    border: 'none',\n    width: '110px',\n    padding: 0,\n  },\n  /**\n   * Styles applied to the icon elements.\n   */\n  icon: {\n    fontSize: '1.3125rem',\n    position: 'relative',\n  },\n  /**\n   * Styles applied to the icon button elements.\n   */\n  button: {\n    height: '36px',\n    width: '36px',\n    padding: 0,\n  },\n  /**\n   * Styles applied to the subtract icon button element.\n   */\n  subtract: { marginRight: theme.spacing(-4.5) },\n  /**\n   * Styles applied to the add icon button element.\n   */\n  add: { marginLeft: theme.spacing(-4.5) },\n  /**\n   * Styles applied to the text input element.\n   */\n  input: {\n    width: 100,\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.grey[200],\n    textAlign: 'center',\n    padding: theme.spacing(1, 0, 1, 0),\n    border: 'none',\n    fontSize: theme.spacing(2),\n    outline: 'none',\n    '&::before': {\n      display: 'none',\n    },\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFQuantitySelector' })\n\n/**\n * A quantity selector with plus and minus buttons.\n */\nexport default function QuantitySelector({\n  name,\n  classes,\n  addIcon,\n  addButtonProps,\n  subtractIcon,\n  subtractButtonProps,\n  value,\n  minValue,\n  maxValue,\n  onChange,\n  inputProps,\n  ariaLabel,\n}) {\n  classes = useStyles({ classes })\n  const { quantitySelector, icon, button, ...inputClasses } = classes\n\n  if (!value) value = 1\n\n  function handleChange(value) {\n    if (value >= minValue && value <= maxValue) {\n      onChange(value)\n    }\n  }\n\n  return (\n    <>\n      <IconButton\n        size=\"small\"\n        classes={{ root: button }}\n        className={classes.subtract}\n        onClick={() => handleChange(value - 1)}\n        aria-label={`add one ${ariaLabel}`}\n        {...subtractButtonProps}\n      >\n        {subtractIcon || <Remove classes={{ root: icon }} />}\n      </IconButton>\n      <input\n        onChange={handleChange}\n        value={value}\n        name={name}\n        {...{ 'aria-label': ariaLabel }}\n        className={clsx([classes.input, inputClasses])}\n        {...inputProps}\n        readOnly\n      />\n      <IconButton\n        size=\"small\"\n        classes={{ root: button }}\n        className={classes.add}\n        onClick={() => handleChange(value + 1)}\n        aria-label={`subtract one ${ariaLabel}`}\n        {...addButtonProps}\n      >\n        {addIcon || <Add classes={{ root: icon }} />}\n      </IconButton>\n    </>\n  )\n}\n\nQuantitySelector.propTypes = {\n  /**\n   * The name to apply to the input when rendering AMP.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component. See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The plus icon.\n   */\n  addIcon: PropTypes.element,\n\n  /**\n   * The minus icon.\n   */\n  subtractIcon: PropTypes.element,\n\n  /**\n   * The current value.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The minimum value.\n   */\n  minValue: PropTypes.number,\n\n  /**\n   * The maximum value.\n   */\n  maxValue: PropTypes.number,\n\n  /**\n   * Called when the value is changed.  The new value is passed as the only argument\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The accessibility label.  Add and subtract button `aria-label` values are derived from this as\n   * `\"add one {ariaLabel}\"` and `\"subtract one {ariaLabel}\"`.\n   */\n  ariaLabel: PropTypes.string,\n}\n\nQuantitySelector.defaultProps = {\n  name: 'quantity',\n  onChange: Function.prototype,\n  addButtonProps: {},\n  subtractButtonProps: {},\n  inputProps: {},\n  minValue: 1,\n  maxValue: 100,\n  ariaLabel: 'quantity',\n}\n"],"file":"QuantitySelector.js"}