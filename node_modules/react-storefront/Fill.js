"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Fill;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _styles = require("@material-ui/core/styles");

var _clsx = _interopRequireDefault(require("clsx"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    /**
     * Styles applied to the root element.
     */
    root: {
      position: 'relative',
      width: '100%'
    },

    /**
     * Styles applied to the wrapper element for the children.
     */
    child: {
      position: 'absolute',
      top: 0,
      left: 0,
      width: '100%',
      height: '100%',
      '& > *': {
        width: '100%',
        height: '100%'
      }
    }
  };
});
/**
 * This component sizes the height of the child element as a percentage of its width.  It expects
 * only a single child.
 *
 * Example:
 *
 * ```js
 *  <Fill height="100%">
 *    <div>this element's height will be the same as its width.</div>
 *  </Fill>
 * ```
 */

function Fill(_ref) {
  var height = _ref.height,
      children = _ref.children,
      className = _ref.className,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["height", "children", "className"]);
  children = _react.Children.only(children);

  if (height == null) {
    return children;
  }

  var classes = useStyles();
  return /*#__PURE__*/_react["default"].createElement("div", (0, _extends2["default"])({
    className: (0, _clsx["default"])(classes.root, className)
  }, props), /*#__PURE__*/_react["default"].createElement("div", {
    style: {
      paddingTop: height
    }
  }), /*#__PURE__*/_react["default"].createElement("div", {
    className: classes.child
  }, children));
}

Fill.propTypes = {
  /**
   * The height as a percentage of the width in a css compatible expression.  For example:
   * `"100%"` or `"calc(100% + 50px)"`, etc...  If omitted, this component does nothing except render
   * the provided child.
   */
  height: _propTypes["default"].string
};
//# sourceMappingURL=Fill.js.map