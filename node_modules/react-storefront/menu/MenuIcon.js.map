{"version":3,"sources":["../../src/menu/MenuIcon.js"],"names":["styles","theme","root","position","height","width","boxSizing","display","flexDirection","alignItems","marginTop","top","backgroundColor","palette","text","secondary","borderRadius","transitionProperty","transitionDuration","transitions","duration","standard","transitionTimingFunction","content","bottom","active","transform","opacity","withLabel","hidden","visible","label","fontSize","lineHeight","fontWeight","letterSpacing","color","useStyles","name","MenuIcon","classes","open","amp","renderIcon","propTypes","PropTypes","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useAmp } from 'next/amp'\n\nexport const styles = theme => ({\n  root: {\n    position: 'relative',\n    height: '24px',\n    width: '24px',\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n\n    '& .rsf-hamburger': {\n      display: 'block',\n      marginTop: '5px',\n    },\n\n    '& .rsf-hamburger-box': {\n      width: '20px',\n      height: '20px',\n      display: 'block',\n      position: 'relative',\n    },\n\n    '& .rsf-hamburger-inner': {\n      display: 'block',\n      top: '50%',\n      marginTop: '-4px',\n    },\n\n    '& .rsf-hamburger-inner, & .rsf-hamburger-inner::before, & .rsf-hamburger-inner::after': {\n      width: '20px',\n      height: '2px',\n      backgroundColor: theme.palette.text.secondary,\n      borderRadius: '4px',\n      position: 'absolute',\n      transitionProperty: 'transform',\n      transitionDuration: theme.transitions.duration.standard,\n      transitionTimingFunction: 'ease',\n    },\n\n    '& .rsf-hamburger-inner::before, & .rsf-hamburger-inner::after': {\n      content: '\"\"',\n      display: 'block',\n    },\n\n    '& .rsf-hamburger-inner::before': {\n      top: '-10px',\n    },\n\n    '& .rsf-hamburger-inner::after': {\n      bottom: '-10px',\n    },\n\n    '& .rsf-hamburger .rsf-hamburger-inner': {\n      top: '5px',\n    },\n\n    '& .rsf-hamburger .rsf-hamburger-inner::before': {\n      top: '5px',\n      transitionProperty: 'transform, opacity',\n      transitionTimingFunction: 'ease',\n      transitionDuration: theme.transitions.duration.standard,\n    },\n\n    '& .rsf-hamburger .rsf-hamburger-inner::after': {\n      top: '10px',\n    },\n  },\n\n  active: {\n    '& .rsf-hamburger .rsf-hamburger-inner': {\n      transform: 'translate3d(0, 5px, 0) rotate(45deg)',\n    },\n\n    '& .rsf-hamburger .rsf-hamburger-inner::before': {\n      transform: 'rotate(-45deg) translate3d(-5.71429px, -5px, 0)',\n      opacity: 0,\n    },\n\n    '& .rsf-hamburger .rsf-hamburger-inner::after': {\n      transform: 'translate3d(0, -10px, 0) rotate(-90deg)',\n    },\n  },\n\n  withLabel: {\n    '& .rsf-hamburger': {\n      marginTop: '0',\n    },\n  },\n\n  hidden: {\n    display: 'none',\n  },\n\n  visible: {\n    display: 'block',\n  },\n\n  label: {\n    fontSize: '9px',\n    lineHeight: '9px',\n    fontWeight: 'bold',\n    letterSpacing: '0px',\n    marginTop: '-3px',\n    color: theme.palette.text.secondary,\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFMenuIcon' })\n\n/**\n * A menu icon that animates transitions between open and closed states.\n */\nexport default function MenuIcon({ classes, label, open }) {\n  const amp = useAmp()\n  classes = useStyles({ classes })\n\n  const renderIcon = open => {\n    return (\n      <div\n        className={clsx({\n          [classes.root]: true,\n          [classes.active]: open,\n          [classes.withLabel]: label,\n        })}\n      >\n        <div className=\"rsf-hamburger\">\n          <span className=\"rsf-hamburger-box\">\n            <span className=\"rsf-hamburger-inner\" />\n          </span>\n        </div>\n        {label && <div className={classes.label}>menu</div>}\n      </div>\n    )\n  }\n\n  if (amp) {\n    return (\n      <>\n        <div\n          className={classes.visible}\n          amp-bind={`class=>!rsfMenuState.open ? '${classes.visible}' : '${classes.hidden}'`}\n        >\n          {renderIcon(false)}\n        </div>\n        <div\n          className={classes.hidden}\n          amp-bind={`class=>rsfMenuState.open ? '${classes.visible}' : '${classes.hidden}'`}\n        >\n          {renderIcon(true)}\n        </div>\n      </>\n    )\n  } else {\n    return renderIcon(open)\n  }\n}\n\nMenuIcon.propTypes = {\n  /**\n   * Set to true when the menu is open, otherwise false\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Set to `false` to hide the text \"menu\" underneath the button when the menu is closed.\n   */\n  label: PropTypes.bool,\n}\n\nMenuIcon.defaultProps = {\n  open: false,\n  label: false,\n}\n"],"file":"MenuIcon.js"}