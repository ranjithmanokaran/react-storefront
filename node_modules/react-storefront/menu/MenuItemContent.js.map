{"version":3,"sources":["../../src/menu/MenuItemContent.js"],"names":["styles","theme","listItem","textTransform","lineHeight","fontSize","typography","body1","listItemImage","width","height","marginRight","listItemIcon","minWidth","loadingIcon","display","useStyles","name","MenuItemContent","props","MenuContext","renderItemContent","onItemClick","classes","item","depth","leaf","listItemProps","contents","image","text","loading","padding","bind","root","className","propTypes","PropTypes","object"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { ListItem, ListItemText, ListItemIcon, CircularProgress } from '@material-ui/core'\nimport MenuContext from './MenuContext'\nimport MenuExpanderIcon from './MenuExpanderIcon'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nexport const styles = theme => ({\n  listItem: {\n    textTransform: 'uppercase',\n    lineHeight: '1.5',\n    fontSize: theme.typography.body1.fontSize,\n  },\n\n  listItemImage: {\n    width: '40px',\n    height: '40px',\n    marginRight: 0,\n  },\n\n  listItemIcon: {\n    marginRight: 0,\n    minWidth: 0,\n  },\n\n  loadingIcon: {\n    display: 'block',\n  },\n})\n\nconst useStyles = makeStyles(styles, { name: 'RSFMenuItemContent' })\n\nexport default function MenuItemContent(props) {\n  const { renderItemContent, onItemClick } = useContext(MenuContext)\n  const classes = useStyles(props)\n\n  let { item, depth, leaf, listItemProps } = props\n  let contents\n\n  if (renderItemContent) {\n    contents = renderItemContent(item, leaf)\n  }\n\n  if (!contents) {\n    if (leaf) {\n      contents = (\n        <>\n          {item.image && (\n            <ListItemIcon>\n              <img className={classes.listItemImage} alt={item.text} src={item.image} />\n            </ListItemIcon>\n          )}\n          <ListItemText primary={item.text} disableTypography />\n        </>\n      )\n    } else {\n      contents = (\n        <>\n          {item.image && (\n            <ListItemIcon>\n              <img className={classes.listItemImage} alt={item.text} src={item.image} />\n            </ListItemIcon>\n          )}\n          <ListItemText className={classes.listItem} primary={item.text} disableTypography />\n          <ListItemIcon className={classes.listItemIcon}>\n            {item.loading ? (\n              <CircularProgress\n                style={{ height: 24, width: 24, padding: 4 }}\n                color=\"secondary\"\n                className={classes.loadingIcon}\n              />\n            ) : (\n              <MenuExpanderIcon {...props} />\n            )}\n          </ListItemIcon>\n        </>\n      )\n    }\n  }\n\n  return (\n    <ListItem\n      onClick={leaf ? null : onItemClick.bind(null, item, depth)}\n      button\n      divider\n      classes={{\n        root: clsx(classes.listItem, item.className),\n      }}\n      {...listItemProps}\n    >\n      {contents}\n    </ListItem>\n  )\n}\n\nMenuItemContent.propTypes = {\n  /**\n   * Additional props for the underlying ListItem\n   */\n  listItemProps: PropTypes.object,\n}\n"],"file":"MenuItemContent.js"}