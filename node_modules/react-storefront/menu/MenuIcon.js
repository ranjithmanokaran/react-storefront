"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = MenuIcon;
exports.styles = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _clsx2 = _interopRequireDefault(require("clsx"));

var _styles = require("@material-ui/core/styles");

var _amp = require("next/amp");

var styles = function styles(theme) {
  return {
    root: {
      position: 'relative',
      height: '24px',
      width: '24px',
      boxSizing: 'border-box',
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
      '& .rsf-hamburger': {
        display: 'block',
        marginTop: '5px'
      },
      '& .rsf-hamburger-box': {
        width: '20px',
        height: '20px',
        display: 'block',
        position: 'relative'
      },
      '& .rsf-hamburger-inner': {
        display: 'block',
        top: '50%',
        marginTop: '-4px'
      },
      '& .rsf-hamburger-inner, & .rsf-hamburger-inner::before, & .rsf-hamburger-inner::after': {
        width: '20px',
        height: '2px',
        backgroundColor: theme.palette.text.secondary,
        borderRadius: '4px',
        position: 'absolute',
        transitionProperty: 'transform',
        transitionDuration: theme.transitions.duration.standard,
        transitionTimingFunction: 'ease'
      },
      '& .rsf-hamburger-inner::before, & .rsf-hamburger-inner::after': {
        content: '""',
        display: 'block'
      },
      '& .rsf-hamburger-inner::before': {
        top: '-10px'
      },
      '& .rsf-hamburger-inner::after': {
        bottom: '-10px'
      },
      '& .rsf-hamburger .rsf-hamburger-inner': {
        top: '5px'
      },
      '& .rsf-hamburger .rsf-hamburger-inner::before': {
        top: '5px',
        transitionProperty: 'transform, opacity',
        transitionTimingFunction: 'ease',
        transitionDuration: theme.transitions.duration.standard
      },
      '& .rsf-hamburger .rsf-hamburger-inner::after': {
        top: '10px'
      }
    },
    active: {
      '& .rsf-hamburger .rsf-hamburger-inner': {
        transform: 'translate3d(0, 5px, 0) rotate(45deg)'
      },
      '& .rsf-hamburger .rsf-hamburger-inner::before': {
        transform: 'rotate(-45deg) translate3d(-5.71429px, -5px, 0)',
        opacity: 0
      },
      '& .rsf-hamburger .rsf-hamburger-inner::after': {
        transform: 'translate3d(0, -10px, 0) rotate(-90deg)'
      }
    },
    withLabel: {
      '& .rsf-hamburger': {
        marginTop: '0'
      }
    },
    hidden: {
      display: 'none'
    },
    visible: {
      display: 'block'
    },
    label: {
      fontSize: '9px',
      lineHeight: '9px',
      fontWeight: 'bold',
      letterSpacing: '0px',
      marginTop: '-3px',
      color: theme.palette.text.secondary
    }
  };
};

exports.styles = styles;
var useStyles = (0, _styles.makeStyles)(styles, {
  name: 'RSFMenuIcon'
});
/**
 * A menu icon that animates transitions between open and closed states.
 */

function MenuIcon(_ref) {
  var classes = _ref.classes,
      label = _ref.label,
      open = _ref.open;
  var amp = (0, _amp.useAmp)();
  classes = useStyles({
    classes: classes
  });

  var renderIcon = function renderIcon(open) {
    var _clsx;

    return /*#__PURE__*/_react["default"].createElement("div", {
      className: (0, _clsx2["default"])((_clsx = {}, (0, _defineProperty2["default"])(_clsx, classes.root, true), (0, _defineProperty2["default"])(_clsx, classes.active, open), (0, _defineProperty2["default"])(_clsx, classes.withLabel, label), _clsx))
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "rsf-hamburger"
    }, /*#__PURE__*/_react["default"].createElement("span", {
      className: "rsf-hamburger-box"
    }, /*#__PURE__*/_react["default"].createElement("span", {
      className: "rsf-hamburger-inner"
    }))), label && /*#__PURE__*/_react["default"].createElement("div", {
      className: classes.label
    }, "menu"));
  };

  if (amp) {
    return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement("div", {
      className: classes.visible,
      "amp-bind": "class=>!rsfMenuState.open ? '".concat(classes.visible, "' : '").concat(classes.hidden, "'")
    }, renderIcon(false)), /*#__PURE__*/_react["default"].createElement("div", {
      className: classes.hidden,
      "amp-bind": "class=>rsfMenuState.open ? '".concat(classes.visible, "' : '").concat(classes.hidden, "'")
    }, renderIcon(true)));
  } else {
    return renderIcon(open);
  }
}

MenuIcon.propTypes = {
  /**
   * Set to true when the menu is open, otherwise false
   */
  open: _propTypes["default"].bool,

  /**
   * Set to `false` to hide the text "menu" underneath the button when the menu is closed.
   */
  label: _propTypes["default"].bool
};
MenuIcon.defaultProps = {
  open: false,
  label: false
};
//# sourceMappingURL=MenuIcon.js.map