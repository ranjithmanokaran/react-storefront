"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var _default = function _default(theme) {
  return {
    drawer: {
      zIndex: theme.zIndex.modal + 20,
      display: 'flex',
      flexDirection: 'column',
      borderTop: "".concat(theme.headerHeight, "px solid transparent"),
      'body.moov-safari &': {
        // Turning off momentum scrolling on iOS here to fix frozen body issue
        // Source: https://moovweb.atlassian.net/browse/PRPL-342
        '-webkit-overflow-scrolling': 'auto'
      }
    },
    list: {
      flex: 'none',
      overflowY: 'auto',
      overflowX: 'hidden',
      maxHeight: '100%',
      padding: 0
    },
    listPadding: {
      padding: 0
    },
    header: {
      position: 'absolute',
      left: '10px',
      top: '12px'
    },
    icon: {
      marginRight: '0',
      width: 24
    },
    headerText: {
      textAlign: 'center',
      fontWeight: '600',
      textTransform: 'uppercase',
      fontSize: theme.typography.body1.fontSize
    },
    bodyWrap: {
      display: 'flex',
      flex: 1,
      flexDirection: 'row',
      transition: 'all ease-out .2s',
      maxHeight: '100%'
    },
    hidden: {
      display: 'none'
    },
    visible: {
      display: 'block'
    },
    link: {
      display: 'block',
      textDecoration: 'none',
      color: 'inherit'
    },
    leaf: _objectSpread({
      textTransform: 'none'
    }, theme.typography.body1),
    drawerFixed: {
      top: 0,
      height: '100vh',
      borderTop: 'none'
    }
  };
};

exports["default"] = _default;
//# sourceMappingURL=menuStyles.js.map