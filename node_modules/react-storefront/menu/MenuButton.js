"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = MenuButton;
exports.styles = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _Hidden = _interopRequireDefault(require("@material-ui/core/Hidden"));

var _styles = require("@material-ui/core/styles");

var _ToolbarButton = _interopRequireDefault(require("../ToolbarButton"));

var _MenuIcon = _interopRequireDefault(require("./MenuIcon"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _clsx = _interopRequireDefault(require("clsx"));

var styles = function styles(theme) {
  return {
    link: {
      textDecoration: 'none'
    }
  };
};

exports.styles = styles;
var useStyles = (0, _styles.makeStyles)(styles, {
  name: 'RSFMenuButton'
});
/**
 * The button that controls that opens and closes the main app menu.
 */

function MenuButton(_ref) {
  var MenuIcon = _ref.MenuIcon,
      menuIconProps = _ref.menuIconProps,
      open = _ref.open,
      onClick = _ref.onClick,
      classes = _ref.classes,
      className = _ref.className,
      style = _ref.style;
  classes = useStyles({
    classes: classes
  });
  return /*#__PURE__*/_react["default"].createElement(_Hidden["default"], {
    mdUp: true,
    implementation: "css",
    key: "menuButton"
  }, /*#__PURE__*/_react["default"].createElement("a", {
    on: "tap:AMP.setState({ rsfMenuState: { open: !rsfMenuState.open, list: '@' } }), rsfMenu.toggle",
    className: (0, _clsx["default"])(classes.link, className),
    style: style
  }, /*#__PURE__*/_react["default"].createElement(_ToolbarButton["default"], {
    "aria-label": "Menu",
    color: "inherit",
    onClick: onClick,
    icon: /*#__PURE__*/_react["default"].createElement(MenuIcon, (0, _extends2["default"])({
      open: open
    }, menuIconProps))
  })));
}

MenuButton.propTypes = {
  /**
   * A react component to use for the menu icon
   */
  MenuIcon: _propTypes["default"].elementType,

  /**
   * Props for the menu icon
   */
  menuIconProps: _propTypes["default"].object
};
MenuButton.defaultProps = {
  MenuIcon: _MenuIcon["default"],
  menuIconProps: {}
};
//# sourceMappingURL=MenuButton.js.map