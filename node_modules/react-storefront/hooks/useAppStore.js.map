{"version":3,"sources":["../../src/hooks/useAppStore.js"],"names":["useAppStore","props","result","appData","_","setState"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;;;;;;AAOe,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AACzC,MAAMC,MAAM,GAAG,qBAASD,KAAK,CAACE,OAAf,CAAf;;AADyC,gDAEnBD,MAFmB;AAAA,MAElCE,CAFkC;AAAA,MAE/BC,QAF+B;;AAIzC,wBAAU,YAAM;AACd,QAAIJ,KAAK,CAACE,OAAV,EAAmB;AACjBE,MAAAA,QAAQ,CAACJ,KAAK,CAACE,OAAP,CAAR;AACD;AACF,GAJD,EAIG,CAACF,KAAK,CAACE,OAAP,CAJH;AAMA,SAAOD,MAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react'\n\n/**\n * Provides a store for app-level data that is shared by all pages, such as\n * the main menu, nav, and footer items.\n * @param {Object} props Data fetched from `getInitialProps`, which should include an `appData` key.\n * @return {Array} A state and an updater function, similar to the result of React's `useState` hook.\n * The state will contain the value of `appData` returned by `getInitialProps`.\n */\nexport default function useAppStore(props) {\n  const result = useState(props.appData)\n  const [_, setState] = result\n\n  useEffect(() => {\n    if (props.appData) {\n      setState(props.appData)\n    }\n  }, [props.appData])\n\n  return result\n}\n"],"file":"useAppStore.js"}