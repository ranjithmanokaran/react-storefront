"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = useStateFromProp;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = require("react");

/**
 * The same as React's `useState`, but automatically updated when the specified prop value changes.
 * @param {Object} prop
 * @return {Array} The same as what's returned from React's useState hook.
 */
function useStateFromProp(prop) {
  var state = (0, _react.useState)(prop);

  var _state = (0, _slicedToArray2["default"])(state, 2),
      _value = _state[0],
      setValue = _state[1];

  var mounted = (0, _react.useRef)(false);
  (0, _react.useEffect)(function () {
    if (mounted.current) {
      setValue(prop);
    }

    mounted.current = true;
  }, [prop]);
  return state;
}
//# sourceMappingURL=useStateFromProp.js.map