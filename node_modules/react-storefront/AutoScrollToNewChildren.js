"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

/**
 * A wrapper component which scrolls the first new child into view when
 * the number of children increases.
 */
var AutoScrollToNewChildren = function AutoScrollToNewChildren(_ref) {
  var children = _ref.children;

  var childCount = _react["default"].Children.count(children);

  var _useState = (0, _react.useState)(childCount),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      priorChildCount = _useState2[0],
      setPriorChildCount = _useState2[1];

  var firstNewChild = (0, _react.useRef)(null);
  (0, _react.useEffect)(function () {
    if (!priorChildCount) {
      setPriorChildCount(childCount);
    } else if (childCount > priorChildCount) {
      firstNewChild.current.scrollIntoView({
        behavior: 'smooth'
      });
      setPriorChildCount(childCount);
    }
  }, [childCount, setPriorChildCount, priorChildCount]);
  return (
    /*#__PURE__*/
    // wrapped in a Fragment so react-docgen recognizes this as a Component:
    _react["default"].createElement(_react["default"].Fragment, null, _react["default"].Children.map(children, function (child, index) {
      return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, child, index === priorChildCount ? /*#__PURE__*/_react["default"].createElement("div", {
        ref: firstNewChild
      }) : null);
    }))
  );
};

var _default = AutoScrollToNewChildren;
exports["default"] = _default;
//# sourceMappingURL=AutoScrollToNewChildren.js.map