{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useContext } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Row from 'react-storefront/Row';\nimport clsx from 'clsx';\nimport CartItem from '../components/cart/CartItem';\nimport { createLazyProps, fetchFromAPI } from 'react-storefront/props';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { price } from 'react-storefront/utils/format';\nimport Spacer from 'react-storefront/Spacer';\nimport Link from 'react-storefront/link/Link';\nimport { Hbox } from 'react-storefront/Box';\nimport SessionContext from 'react-storefront/session/SessionContext';\nimport get from 'lodash/get';\n\nconst styles = theme => ({\n  root: {\n    paddingBottom: '64px'\n  },\n  checkoutPanel: {\n    backgroundColor: theme.palette.grey['200'],\n    borderRadius: theme.shape.borderRadius,\n    padding: `${theme.spacing(2)}px`\n  },\n  total: {\n    fontWeight: 'bold'\n  },\n  checkoutButton: {\n    width: '100%'\n  },\n  docked: {\n    [theme.breakpoints.down('xs')]: {\n      fontSize: theme.typography.subtitle1.fontSize,\n      padding: `${theme.spacing(2)}px`,\n      position: 'fixed',\n      left: 0,\n      bottom: 0,\n      width: '100%',\n      zIndex: 10,\n      borderRadius: '0',\n      boxShadow: 'none'\n    }\n  }\n});\n\nconst useStyles = makeStyles(styles);\nexport default function Cart(props) {\n  const classes = useStyles();\n  const {\n    session,\n    actions\n  } = useContext(SessionContext);\n  const items = get(session, 'cart.items');\n\n  const handleUpdateQuantity = (product, quantity) => {\n    actions.updateCart({\n      item: product,\n      quantity\n    });\n  };\n\n  const handleRemove = product => {\n    actions.removeCartItem({\n      item: product\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(Container, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsx(Row, {\n      children: /*#__PURE__*/_jsxs(Typography, {\n        variant: \"h6\",\n        children: [\"My Cart (\", items.length, \" \", items.length === 1 ? 'item' : 'items', \")\"]\n      })\n    }), /*#__PURE__*/_jsx(Row, {\n      children: /*#__PURE__*/_jsxs(Grid, {\n        container: true,\n        spacing: 4,\n        children: [/*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          sm: 8,\n          children: items.length ? items.map((product, i) => /*#__PURE__*/_jsx(CartItem, {\n            updateQuantity: handleUpdateQuantity,\n            remove: handleRemove,\n            product: product\n          }, product.id)) : /*#__PURE__*/_jsx(Typography, {\n            variant: \"body1\",\n            children: \"There are no items in your cart.\"\n          })\n        }), items.length === 0 ? null : /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: classes.checkoutPanel,\n            children: [/*#__PURE__*/_jsxs(Hbox, {\n              alignItems: \"flex-start\",\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                children: [/*#__PURE__*/_jsx(Typography, {\n                  variant: \"subtitle2\",\n                  className: classes.total,\n                  children: \"Estimated Total\"\n                }), /*#__PURE__*/_jsx(Typography, {\n                  variant: \"caption\",\n                  children: \"Tax calculated in checkout\"\n                })]\n              }), /*#__PURE__*/_jsx(Spacer, {}), /*#__PURE__*/_jsx(Typography, {\n                variant: \"subtitle2\",\n                className: classes.total,\n                children: price(items.reduce((a, b) => a + b.quantity * parseFloat(b.price), 0), {\n                  currency: get(session, 'currency')\n                })\n              })]\n            }), /*#__PURE__*/_jsx(Hidden, {\n              xsDown: true,\n              implementation: \"css\",\n              children: /*#__PURE__*/_jsx(Row, {\n                children: /*#__PURE__*/_jsx(Divider, {})\n              })\n            }), items.length === 0 ? null : /*#__PURE__*/_jsx(Link, {\n              href: \"/checkout\",\n              children: /*#__PURE__*/_jsx(Button, {\n                color: \"primary\",\n                variant: \"contained\",\n                className: clsx(classes.checkoutButton, classes.docked),\n                children: \"Checkout\"\n              })\n            })]\n          })\n        })]\n      })\n    })]\n  });\n}\nCart.getInitialProps = createLazyProps(fetchFromAPI);","map":null,"metadata":{},"sourceType":"module"}