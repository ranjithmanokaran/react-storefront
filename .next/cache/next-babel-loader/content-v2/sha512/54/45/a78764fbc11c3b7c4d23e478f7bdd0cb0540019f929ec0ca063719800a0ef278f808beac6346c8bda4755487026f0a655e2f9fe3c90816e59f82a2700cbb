{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { subcategory } from 'react-storefront-connector';\nexport default async function plp(req, res) {\n  // Note: the structure of the query string is controlled by the queryForState prop passed\n  // to SearchResultsProvider in pages/s/[...categorySlug].js.\n  const _req$query = req.query,\n        {\n    q,\n    categorySlug: slug,\n    page,\n    sort,\n    _includeAppData\n  } = _req$query,\n        others = _objectWithoutProperties(_req$query, [\"q\", \"categorySlug\", \"page\", \"sort\", \"_includeAppData\"]);\n\n  const filters = [];\n\n  for (let [key, values] of Object.entries(others)) {\n    for (let value of values.split(',')) {\n      filters.push(`${key}:${value}`);\n    }\n  }\n\n  res.json(await subcategory({\n    q,\n    slug,\n    page,\n    filters: JSON.stringify(filters),\n    sort\n  }, req, res));\n}","map":null,"metadata":{},"sourceType":"module"}