{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { memo, useEffect, useState, useRef } from 'react';\nimport SearchForm from 'react-storefront/search/SearchForm';\nimport SearchField from 'react-storefront/search/SearchField';\nimport SearchSuggestions from 'react-storefront/search/SearchSuggestions';\nimport SearchProvider from 'react-storefront/search/SearchProvider';\nimport SearchPopover from 'react-storefront/search/SearchPopover';\n\nfunction SearchDesktop() {\n  const inputRef = useRef(null);\n  const activeRef = useRef(false);\n  const {\n    0: query,\n    1: setQuery\n  } = useState('');\n  const {\n    0: popoverOpen,\n    1: setPopoverOpen\n  } = useState(false);\n  useEffect(() => {\n    if (!activeRef.current) {\n      activeRef.current = true;\n    }\n  }, [popoverOpen]);\n  return /*#__PURE__*/_jsxs(SearchForm, {\n    children: [/*#__PURE__*/_jsx(SearchField, {\n      ref: inputRef,\n      onChange: value => setQuery(value),\n      value: query,\n      onFocus: () => setPopoverOpen(true),\n      submitButtonVariant: \"none\",\n      showClearButton: false\n    }), /*#__PURE__*/_jsx(SearchProvider, {\n      query: query,\n      active: activeRef.current,\n      children: /*#__PURE__*/_jsx(SearchPopover, {\n        open: popoverOpen,\n        setQuery: setQuery,\n        anchor: inputRef,\n        onClose: () => setPopoverOpen(false),\n        children: /*#__PURE__*/_jsx(SearchSuggestions, {})\n      })\n    })]\n  });\n}\n\nexport default /*#__PURE__*/memo(SearchDesktop);","map":null,"metadata":{},"sourceType":"module"}