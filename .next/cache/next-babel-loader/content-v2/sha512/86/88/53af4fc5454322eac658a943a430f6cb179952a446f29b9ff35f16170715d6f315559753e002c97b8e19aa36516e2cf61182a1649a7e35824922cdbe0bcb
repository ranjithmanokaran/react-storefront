{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport React from 'react';\nimport theme from '../components/theme';\nimport Header from '../components/Header';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles, MuiThemeProvider } from '@material-ui/core/styles';\nimport PWA from 'react-storefront/PWA';\nimport NavBar from '../components/NavBar';\nimport reportError from '../components/reportError';\nimport useJssStyles from 'react-storefront/hooks/useJssStyles';\nimport SessionProvider from 'react-storefront/session/SessionProvider';\nimport useAppStore from 'react-storefront/hooks/useAppStore';\n\nconst styles = theme => ({\n  main: {\n    paddingTop: 3\n  }\n});\n\nconst useStyles = makeStyles(styles);\nexport default function MyApp({\n  Component,\n  pageProps\n}) {\n  useJssStyles();\n  const classes = useStyles();\n  const [appData] = useAppStore(pageProps || {});\n  return /*#__PURE__*/_jsxs(PWA, {\n    errorReporter: reportError,\n    children: [/*#__PURE__*/_jsx(Head, {}), /*#__PURE__*/_jsx(SessionProvider, {\n      url: \"/api/session\",\n      children: /*#__PURE__*/_jsxs(MuiThemeProvider, {\n        theme: theme,\n        children: [/*#__PURE__*/_jsx(CssBaseline, {}), /*#__PURE__*/_jsx(Header, {\n          menu: appData && appData.menu\n        }), /*#__PURE__*/_jsx(NavBar, {\n          tabs: appData && appData.tabs\n        }), /*#__PURE__*/_jsx(\"main\", {\n          className: classes.main,\n          children: /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))\n        })]\n      })\n    })]\n  });\n}\n\nMyApp.getInitialProps = async function ({\n  Component,\n  ctx\n}) {\n  let pageProps = {};\n\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx);\n  }\n\n  return {\n    pageProps\n  };\n};","map":null,"metadata":{},"sourceType":"module"}