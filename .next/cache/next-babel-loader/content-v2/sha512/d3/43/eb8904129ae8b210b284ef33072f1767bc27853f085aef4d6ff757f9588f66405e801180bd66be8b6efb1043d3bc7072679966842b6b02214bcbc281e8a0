{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"C:/Users/sulur/Desktop/react-storefront/ui/react/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport useLazyState from 'react-storefront/hooks/useLazyState';\nimport CmsSlot from 'react-storefront/CmsSlot';\nimport LoadMask from 'react-storefront/LoadMask';\nimport Head from 'next/head';\nimport createLazyProps from 'react-storefront/props/createLazyProps';\nimport fetchFromAPI from 'react-storefront/props/fetchFromAPI';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    main: {\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'column',\n      textAlign: 'center',\n      margin: theme.spacing(10, 0, 0, 0)\n    }\n  };\n});\nexport default function Index(lazyProps) {\n  var classes = useStyles();\n\n  var _useLazyState = useLazyState(lazyProps),\n      _useLazyState2 = _slicedToArray(_useLazyState, 1),\n      state = _useLazyState2[0];\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [state.loading ? null : /*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: state.pageData.title\n      })\n    }), /*#__PURE__*/_jsx(Container, {\n      maxWidth: \"lg\",\n      children: state.loading ? /*#__PURE__*/_jsx(LoadMask, {\n        fullscreen: true\n      }) : /*#__PURE__*/_jsxs(\"div\", {\n        className: classes.main,\n        children: [/*#__PURE__*/_jsx(Typography, {\n          variant: \"h3\",\n          component: \"h1\",\n          gutterBottom: true,\n          color: \"primary\",\n          children: state.pageData.slots.heading\n        }), /*#__PURE__*/_jsx(CmsSlot, {\n          children: state.pageData.slots.description\n        })]\n      })\n    })]\n  });\n}\nIndex.getInitialProps = createLazyProps(function (options) {\n  var res = options.res;\n  if (res) res.setHeader('Cache-Control', 'max-age=99999');\n  return fetchFromAPI(options);\n});","map":null,"metadata":{},"sourceType":"module"}